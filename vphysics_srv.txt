         U abort@@GLIBC_2.0
         U access@@GLIBC_2.0
         U acosf@@GLIBC_2.0
         U acos@@GLIBC_2.0
00148ce7 t add_fdes
001a7bc8 d adds.7496
         U asin@@GLIBC_2.0
         U atan2f@@GLIBC_2.0
         U atan2@@GLIBC_2.0
         U atan@@GLIBC_2.0
00148fc2 t base_from_cb_data
00148a1a t base_from_object
001a7bd0 A __bss_start
         U cbrtf@@GLIBC_2.0
         U chdir@@GLIBC_2.0
         U chmod@@GLIBC_2.0
         U chown@@GLIBC_2.1
00148bc9 t classify_object_over_fdes
         U closedir@@GLIBC_2.0
001a7be0 b completed.5793
         U cosf@@GLIBC_2.0
         U cos@@GLIBC_2.0
0006ccd0 T CreateInterface
001a30b0 d __CTOR_END__
001a3000 d __CTOR_LIST__
001a92b0 B cvar
         U __cxa_atexit@@GLIBC_2.1.3
         w __cxa_finalize@@GLIBC_2.1.3
         U __cxa_guard_abort@@CXXABI_1.3
         U __cxa_guard_acquire@@CXXABI_1.3
         U __cxa_guard_release@@CXXABI_1.3
         U __cxa_pure_virtual@@CXXABI_1.3
00149c25 t __deregister_frame
00149c1c t __deregister_frame_info
00149b46 t __deregister_frame_info_bases
         U DevMsg
         U dlclose@@GLIBC_2.0
         U dlerror@@GLIBC_2.0
         U dl_iterate_phdr@@GLIBC_2.2.4
         U dlopen@@GLIBC_2.1
         U dlsym@@GLIBC_2.0
00149e68 t __do_global_ctors_aux
0002e0c8 t __do_global_dtors_aux
001a3220 d __dso_handle
001a30b8 d __DTOR_END__
001a7be4 b dtor_idx.5795
001a30b4 d __DTOR_LIST__
001b7d84 b dwarf_reg_size_table
001a30c0 a _DYNAMIC
         U __dynamic_cast@@CXXABI_1.3
001a7bd0 A _edata
001b7e98 A _end
         U __errno_location@@GLIBC_2.0
         U Error
00146e5e t execute_cfa_program
001477c1 t execute_stack_op
         U exit@@GLIBC_2.0
         U exp@@GLIBC_2.0
         U fclose@@GLIBC_2.1
00148e46 t fde_mixed_encoding_compare
00148dc9 t fde_single_encoding_compare
001488a6 t fde_unencoded_compare
         U fflush@@GLIBC_2.0
         U fgets@@GLIBC_2.0
00149e90 T _fini
         U fopen64@@GLIBC_2.1
         U fopen@@GLIBC_2.1
00162890 r Four_2ToThe21s
00162880 r Four_2ToThe22s
00162870 r Four_2ToThe23s
00162860 r Four_2ToThe24s
00162840 r Four_Epsilons
00162830 r Four_FLT_MAX
001628c0 r Four_Fours
00162820 r Four_Negative_FLT_MAX
001628a0 r Four_NegativeOnes
001628f0 r Four_Ones
001628b0 r Four_Origin
00162850 r Four_Point225s
00162910 r Four_PointFives
001628d0 r Four_Threes
001628e0 r Four_Twos
00162900 r Four_Zeros
         U fprintf@@GLIBC_2.0
         U fputc@@GLIBC_2.0
         U fputs@@GLIBC_2.0
001488cb t frame_downheap
0002e137 t frame_dummy
001a0984 r __FRAME_END__
001b7dcc b frame_hdr_cache
001b7dc8 b frame_hdr_cache_head
00148956 t frame_heapsort
0014837d t __frame_state_for
         U free@@GLIBC_2.0
         U freopen@@GLIBC_2.0
         U fwrite@@GLIBC_2.0
001a43b0 d g_EmptyCollisionListener
00148b0b t get_cie_encoding
         U GetCPUInformation
         U getcwd@@GLIBC_2.0
         U getenv@@GLIBC_2.0
00148bb8 t get_fde_encoding
001af8e0 b g_fDeferDeleteMindist
001a6dd0 d g_IVPToHLDir
001ad1b0 b global_friction_counter
001a31d0 a _GLOBAL_OFFSET_TABLE_
0002db40 t _GLOBAL__sub_I_cvar
0002dfd0 t _GLOBAL__sub_I_Four_PointFives
0002d6e0 t _GLOBAL__sub_I_g_MeshFrameLocksPool
0002cfa0 t _GLOBAL__sub_I_g_PhysicsCollision
0002cd70 t _GLOBAL__sub_I_g_PhysicsUnits
0002d340 t _GLOBAL__sub_I_g_SurfaceDatabase
0002d980 t _GLOBAL__sub_I_g_VPhysPtrSaveRestoreOps
0002dd80 t _GLOBAL__sub_I_ivp_mindist_settings
0002dff0 t _GLOBAL__sub_I_lineartovertex
0002de60 t _GLOBAL__sub_I_s_bMathlibInitialized
0002db60 t _GLOBAL__sub_I_s_StringCharConversion
0002d7f0 t _GLOBAL__sub_I_stdafx.cpp
0002d830 t _GLOBAL__sub_I__Z11InitLeafmapP17IVP_Compact_LedgeP9leafmap_t
0002ce50 t _GLOBAL__sub_I__Z13vphysics_initv
0002cd50 t _GLOBAL__sub_I__Z17ParseFileInternalPKcPcPbP14characterset_tj
0002d280 t _GLOBAL__sub_I__Z18GetOppositeSynapseP20IVP_Synapse_Friction
0002cdb0 t _GLOBAL__sub_I__Z19PackLedgeIntoBufferP12packedhull_tR10CUtlBufferPK17IVP_Compact_LedgeRK17virtualmeshlist_t
0002d0e0 t _GLOBAL__sub_I__Z29TransformHLWorldToHavanaLocalRK6VectorP15IVP_Real_Object
0002d500 t _GLOBAL__sub_I__Z31ComputePDControllerCoefficientsPffff
0002d940 t _GLOBAL__sub_I__Z9nexttokenPcPKcc
0002df90 t _GLOBAL__sub_I__Z9_SSE_Sqrtf
0002db20 t _GLOBAL__sub_I__Z9_V_memsetPKciPvii
0002dbf0 t _GLOBAL__sub_I__ZN10CUtlString11AllocMemoryEj
0002dc10 t _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
0002da80 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
0002d450 t _GLOBAL__sub_I__ZN14CPhysicsObjectC2Ev
0002db00 t _GLOBAL__sub_I__ZN16CDataManagerBaseC2Ej
0002cf60 t _GLOBAL__sub_I__ZN16CPhysics_AirboatC2EP15IVP_EnvironmentPK23IVP_Template_Car_SystemP17IPhysicsGameTrace
0002d300 t _GLOBAL__sub_I__ZN17CFrictionSnapshotC2EP15IVP_Real_Object
0002dc50 t _GLOBAL__sub_I__ZN18IVP_Freeze_ManagerC2Ev
0002dca0 t _GLOBAL__sub_I__ZN19IVP_Friction_Solver30test_gauss_solution_suggestionEPdPiiP12IVP_U_Memory
0002dec0 t _GLOBAL__sub_I__ZN22CPolyhedron_AllocByNew7ReleaseEv
0002dd00 t _GLOBAL__sub_I__ZN22IVP_BetterDebugmanager19enable_debug_outputE15IVP_DEBUG_CLASS
0002d2c0 t _GLOBAL__sub_I__ZN23CPhysicsFluidControllerC2EP17CBuoyancyAttacherP29IVP_Liquid_Surface_DescriptorP14CPhysicsObjecti
0002dcc0 t _GLOBAL__sub_I__ZN26IVP_Controller_Independent10empty_listE
0002d580 t _GLOBAL__sub_I__ZN30vphysics_save_cphysicsspring_t9m_DataMapE
0002d3e0 t _GLOBAL__sub_I__ZN32vphysics_save_motioncontroller_t9m_DataMapE
0002d240 t _GLOBAL__sub_I__ZN34CPhysics_Car_System_Raycast_WheelsC2EP15IVP_EnvironmentPK23IVP_Template_Car_System
0002d5f0 t _GLOBAL__sub_I__ZN34vphysics_save_cvehiclecontroller_t9m_DataMapE
0002dda0 t _GLOBAL__sub_I__ZN8IVP_BallC2EP11IVP_ClusterPK17IVP_Template_BallPK24IVP_Template_Real_ObjectPK10IVP_U_QuatPK11IVP_U_Point
0002da60 t _GLOBAL__sub_I__ZN9CByteswap23SwapFieldToTargetEndianEPvS0_P17typedescription_t
001a8ba8 b g_MeshFrameLocksPool
         w __gmon_start__
001af8e4 b g_pCurrentMindist
001a92a0 b g_pCVar
001a8040 b g_PhysicsCollision
001a3238 d g_PhysicsInternal
001a3224 d g_PhysicsUnits
001a8ba0 b g_pMeshFrameLocks
001a9290 b g_pProcessUtils
001a9280 b g_pUtlSortVectorQSortContext
00162810 r g_SIMD_0123
001627c0 r g_SIMD_AllOnesMask
00162800 r g_SIMD_clear_signmask
001627d0 r g_SIMD_clear_wmask
00162770 r g_SIMD_ComponentMask
001627b0 r g_SIMD_Low16BitsMask
001627e0 r g_SIMD_lsbmask
001627f0 r g_SIMD_signmask
00162730 r g_SIMD_SkipTailMask
001a84c0 b g_SurfaceDatabase
         U g_Telemetry
001a8c90 b g_VisitHashPool
001a8dc4 b g_VPhysPtrSaveRestoreOps
001a8dc0 b g_VPhysPtrUtlVectorSaveRestoreOps
         U g_VProfCurrentProfile
         U __gxx_personality_v0@@CXXABI_1.3
         U HushAsserts
0002e16e t __i686.get_pc_thunk.bx
00148827 t __i686.get_pc_thunk.cx
         U iconv_close@@GLIBC_2.1
         U iconv@@GLIBC_2.1
         U iconv_open@@GLIBC_2.1
0002cc70 T _init
00146dde t init_dwarf_reg_size_table
         U isspace@@GLIBC_2.0
         U isupper@@GLIBC_2.0
         U iswspace@@GLIBC_2.0
001ad198 b IVP_CLS
001af8d0 b ivp_debug_indent
001ad1e0 b ivp_debugmanager
001ab9a4 b ivp_debug_sf_indent
001ab970 b ivp_debug_sf_last_node_was_terminal
001ab990 b ivp_debug_sf_max_treedepth
001ab980 b ivp_debug_sf_n_nodes_with_one_terminal
001ab9a0 b ivp_debug_sf_treedepth
001a6f00 d IVP_Hash_crctab
001af900 b ivp_mindist_settings
001a30bc d __JCR_END__
001a30bc d __JCR_LIST__
         w _Jv_RegisterClasses
00146d7c t .L17
00146d46 t .L19
00146d61 t .L20
00147cb9 t .L214
00147cbd t .L215
00147cc2 t .L216
00147cc6 t .L217
00147cd2 t .L218
00147cd7 t .L219
00147ce1 t .L220
00147ce5 t .L221
00147ceb t .L222
00147cf1 t .L223
00147cf7 t .L224
00147d09 t .L225
00147d02 t .L226
00147d17 t .L227
00147cfb t .L228
00147d10 t .L229
00146d52 t .L23
00147d1e t .L230
00146d66 t .L24
00147d84 t .L244
00146d6e t .L25
00146d75 t .L26
00147ed3 t .L271
00147edd t .L272
00147f09 t .L273
00147f54 t .L274
00147f6d t .L275
001472b0 t .L43
00148adf t .L45
001472ab t .L46
00146f14 t .L47
00148aa9 t .L47
00146f41 t .L48
00148ac4 t .L48
00146f5f t .L49
00146f7d t .L50
00146f9a t .L51
00148ab5 t .L51
00146fc2 t .L52
00148ac9 t .L52
00146ff8 t .L53
00148ad1 t .L53
00146fdd t .L54
00148ad8 t .L54
00147013 t .L55
0014703c t .L56
00147077 t .L57
0014709d t .L58
001470d4 t .L59
001470f7 t .L60
0014710a t .L61
00147122 t .L62
0014713d t .L63
0014716a t .L64
001471a8 t .L65
001471c8 t .L66
001471ea t .L67
0014721d t .L68
00147243 t .L69
00147266 t .L70
00147279 t .L71
         U lchown@@GLIBC_2.0
00148ec3 t linear_search_fdes
001b0020 b lineartolightmap
001b1020 b lineartovertex
         U link@@GLIBC_2.0
         U localtime@@GLIBC_2.0
         U log@@GLIBC_2.0
         U longjmp@@GLIBC_2.0
00149e00 t lstat
00149e00 t __lstat
         U __lxstat64@@GLIBC_2.2
         U __lxstat@@GLIBC_2.0
         U malloc@@GLIBC_2.0
001b7e94 b marker.7234
0015f360 R MAX_OBJECT_ROT_SPEED
         U mbstowcs@@GLIBC_2.0
         U memalign@@GLIBC_2.0
         U MemAllocOOMError
         U memcpy@@GLIBC_2.0
         U memmove@@GLIBC_2.0
         U memset@@GLIBC_2.0
         U mkdir@@GLIBC_2.0
         U mkfifo@@GLIBC_2.0
00149e30 t mknod
00149e30 t __mknod
         U mount@@GLIBC_2.0
         U Msg
001624a4 r nanmask
001a6ec4 d n_physical_pops
001b7da0 b object_mutex
001b7d98 b once_regsizes.7669
         U open64@@GLIBC_2.2
         U opendir@@GLIBC_2.0
         U open@@GLIBC_2.0
001af220 b p_error_buffer
001a7750 d pfFastCos
001a7754 d pfFastSinCos
001a7760 d pfInvRSquared
001a7790 d pfRSqrt
001a7780 d pfRSqrtFast
001a77a0 d pfSqrt
001a7774 d pfVectorNormalize
001a7770 d pfVectorNormalizeFast
001a3278 d physcollision
001a43c8 d physprops
         U Plat_IsInDebugSession
         U Plat_localtime
001a77c0 d power2_n
         U pow@@GLIBC_2.0
001ad190 b P_Pop_Eps
001ad180 b P_Pop_Scal_Eps
001ad170 b P_Pop_Too_Flat_Eps
         U printf@@GLIBC_2.0
         w pthread_cancel@@GLIBC_2.0
         U pthread_mutexattr_init@@GLIBC_2.0
         U pthread_mutexattr_settype@@GLIBC_2.1
         U pthread_mutex_destroy@@GLIBC_2.0
         U pthread_mutex_init@@GLIBC_2.0
         U pthread_mutex_lock@@GLIBC_2.0
         U pthread_mutex_unlock@@GLIBC_2.0
         w pthread_once@@GLIBC_2.0
         U putchar@@GLIBC_2.0
         U puts@@GLIBC_2.0
001ac3a0 b qhmem
001ab9c0 b qh_qh
001ac420 b qh_qhstat
001a6ea0 d qh_rand_seed
001a6eb0 d qh_version
         U qsort@@GLIBC_2.0
0007ba80 t qsort_s
         U rand@@GLIBC_2.0
         U readdir@@GLIBC_2.0
00146cba t read_encoded_value
00148a62 t read_encoded_value_with_base
00146c70 t read_sleb128
0014885c t read_sleb128
00146c40 t read_uleb128
0014882c t read_uleb128
         U realloc@@GLIBC_2.0
         U realpath@@GLIBC_2.3
00149a42 t __register_frame
00149a28 t __register_frame_info
0014999a t __register_frame_info_bases
00149b00 t __register_frame_info_table
00149a77 t __register_frame_info_table_bases
00149b1a t __register_frame_table
         U rename@@GLIBC_2.0
         U rmdir@@GLIBC_2.0
001aff2c b s_bMathlibInitialized
         U scandir@@GLIBC_2.0
0014949c t search_object
001b7dbc b seen_objects
0002e010 t set_fast_math
         U _setjmp@@GLIBC_2.0
         U sincosf@@GLIBC_2.1
         U sincos@@GLIBC_2.1
001afb00 b SinCosTable
         U sinf@@GLIBC_2.0
         U sin@@GLIBC_2.0
001489ca t size_of_encoded_value
001a92e0 b s_NoEscConversion
         U sprintf@@GLIBC_2.0
         U sscanf@@GLIBC_2.0
001a9c00 b s_StringCharConversion
00149dd0 t stat
00149dd0 t __stat
         U stderr@@GLIBC_2.0
         U stdout@@GLIBC_2.0
         U strcasecmp@@GLIBC_2.0
         U strcasestr@@GLIBC_2.1
         U strcat@@GLIBC_2.0
         U strchr@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U strcpy@@GLIBC_2.0
         U strdup@@GLIBC_2.0
         U strftime@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U strncasecmp@@GLIBC_2.0
         U strncat@@GLIBC_2.0
         U strncpy@@GLIBC_2.0
         U strpbrk@@GLIBC_2.0
         U strrchr@@GLIBC_2.0
         U strstr@@GLIBC_2.0
         U strtod@@GLIBC_2.0
         U strtok@@GLIBC_2.0
         U strtol@@GLIBC_2.0
         U strtoul@@GLIBC_2.0
001b7dc0 b subs.7497
         U symlink@@GLIBC_2.0
         U tanf@@GLIBC_2.0
         U tan@@GLIBC_2.0
001b7e8c b terminator.7340
         U ThreadGetCurrentId
         U ThreadInterlockedAssignIf
         U ThreadInterlockedAssignIf64
         U ThreadInterlockedExchange
         U ThreadInterlockedIncrement
         U time@@GLIBC_2.0
         U tolower@@GLIBC_2.0
         U toupper@@GLIBC_2.0
         U towlower@@GLIBC_2.0
         U towupper@@GLIBC_2.0
00146b3c t __udivdi3
         U unlink@@GLIBC_2.0
001b7db8 b unseen_objects
001487a7 t _Unwind_Backtrace
0014843e t _Unwind_DebugHook
0014878b t _Unwind_DeleteException
00148335 t _Unwind_FindEnclosingFunction
00149c56 t _Unwind_Find_FDE
00148578 t _Unwind_ForcedUnwind
00148137 t _Unwind_ForcedUnwind_Phase2
0014828f t _Unwind_GetCFA
00148367 t _Unwind_GetDataRelBase
00147688 t _Unwind_GetGR
001482f0 t _Unwind_GetIP
001482fb t _Unwind_GetIPInfo
0014831f t _Unwind_GetLanguageSpecificData
0014832a t _Unwind_GetRegionStart
00148372 t _Unwind_GetTextRelBase
0014900a t _Unwind_IteratePhdrCallback
00148443 t _Unwind_RaiseException
001481f4 t _Unwind_RaiseException_Phase2
00148623 t _Unwind_Resume
001486ca t _Unwind_Resume_or_Rethrow
0014829a t _Unwind_SetGR
00148311 t _Unwind_SetIP
00146da8 t _Unwind_SetSpColumn
         U utime@@GLIBC_2.0
         U utimes@@GLIBC_2.0
001472dc t uw_frame_state_for
00148036 t uw_init_context_1
001476d4 t uw_install_context_1
001480fd t uw_update_context
00147d98 t uw_update_context_1
001aff10 b vec3_angle
001aff00 b vec3_invalid
001aff20 b vec3_origin
         U vfprintf@@GLIBC_2.0
         U vsnprintf@@GLIBC_2.0
         U vsprintf@@GLIBC_2.0
         U vswprintf@@GLIBC_2.2
         U Warning
         U wcslen@@GLIBC_2.0
         U wcsncat@@GLIBC_2.0
         U wcsncpy@@GLIBC_2.0
         U wcstombs@@GLIBC_2.0
00145560 t __wrap_access
00145c70 t __wrap_chmod
00145d30 t __wrap_chown
00145530 t __wrap_creat
001451d0 t __wrap_fopen
001452b0 t __wrap_fopen64
001450e0 t __wrap_freopen
00145e00 t __wrap_lchown
00146030 t __wrap_link
001456e0 t __wrap_lstat
00145a00 t __wrap___lxstat
00145ba0 t __wrap___lxstat64
00146900 t __wrap_mkdir
001464a0 t __wrap_mkfifo
00146190 t __wrap_mknod
00146270 t __wrap_mount
00145390 t __wrap_open
00145460 t __wrap_open64
00145870 t __wrap_opendir
00146840 t __wrap_realpath
00146560 t __wrap_rename
001469c0 t __wrap_rmdir
001457a0 t __wrap_scandir
00145620 t __wrap_stat
00145ed0 t __wrap_symlink
001463e0 t __wrap_unlink
001466c0 t __wrap_utime
00146780 t __wrap_utimes
00145930 t __wrap___xstat
00145ad0 t __wrap___xstat64
         U __xmknod@@GLIBC_2.0
         U __xstat64@@GLIBC_2.2
         U __xstat@@GLIBC_2.0
001385f0 t IsDenormal(float const&)
00137940 t MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
000a6d70 t qh_addhash(void*, setT*, int, unsigned int)
0009b840 t qh_divzero(double, double, double, unsigned int*)
000b0650 t qh_errexit(int, facetT*, ridgeT*)
0009c390 t qh_getarea(facetT*)
000a54b0 t qh_gethash(int, setT*, int, int, void*)
000a4740 t qh_memfree(void*, int)
000a4890 t qh_meminit(_IO_FILE*)
000a4af0 t qh_memsize(int)
0009cfc0 t qh_mindiff(double*, double*, int)
000a60d0 t qh_pointid(double*)
000acec0 t qh_setcopy(setT*, int)
000aca90 t qh_setfree(setT**)
000acc20 t qh_setlast(setT*)
000ad740 t qh_setsize(setT*)
000ad850 t qh_settemp(int)
000adc10 t qh_setzero(setT*, int, int)
0003ca20 t ReadRandom(int*)
0013d880 t RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0006f2b0 t V_FileBase(char const*, char*, int)
0006d2c0 t _V_memmove(char const*, int, void*, void const*, int)
0006e330 t V_snprintf(char*, int, char const*, ...)
0006d520 t V_strlower(char*)
0006d6c0 t V_strnicmp(char const*, char const*, int)
0006e060 t V_strnistr(char const*, char const*, int)
0006d350 t _V_strrchr(char const*, int, char const*, char)
00070380 t V_StrRight(char const*, int, char*, int)
00070210 t V_StrSlice(char const*, int, int, char*, int)
0006ffa0 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
00070400 t V_strtowcs(char const*, int, wchar_t*, int)
00070440 t V_wcstostr(wchar_t const*, int, char*, int)
00070150 t AllocString(char const*, int)
001393f0 t AngleMatrix(RadianEuler const&, matrix3x4_t&)
00139440 t AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
00139280 t AngleMatrix(QAngle const&, matrix3x4_t&)
001393b0 t AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
001397b0 t ClearBounds(Vector&, Vector&)
         U ConColorMsg(Color const&, char const*, ...)
00055930 t datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)
00036160 t datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)
000556c0 t datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)
000553e0 t datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)
000554b0 t datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)
00036230 t datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)
00055860 t datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)
00055790 t datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)
000552c0 t datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)
000555f0 t datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)
0004f8f0 t datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)
00054270 t datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)
00038ea0 t datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)
00038f70 t datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)
000391e0 t datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)
00039110 t datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)
0004b460 t datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)
00039380 t datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)
00039040 t datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)
00053640 t datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)
00038c30 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)
000551f0 t datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)
00038dd0 t datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)
00038d00 t datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)
00053570 t datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)
000392b0 t datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)
00038ac0 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)
00138470 t FloorDivMod(double, double, int*, int*)
0005ab50 t InitLeafmap(IVP_Compact_Ledge*, leafmap_t*)
0013da00 t IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00119050 t ivp_message(char const*, ...)
001190c0 t p_get_error()
00119790 t p_get_float()
000b5fa0 t p_mergesort(void**, int, int, int (*)(void*, void*, char*), char*)
000ba750 t qh_addpoint(double*, facetT*, unsigned int)
000adcc0 t qh_allstatA()
000adf30 t qh_allstatB()
000ae290 t qh_allstatC()
000ae610 t qh_allstatD()
000ae860 t qh_allstatE()
000aea30 t qh_allstatF()
000aedc0 t qh_allstatG()
000af090 t qh_allstatH()
000af3e0 t qh_allstatI()
000a6200 t qh_delfacet(facetT*)
000a7840 t qh_delridge(ridgeT*)
000bf0e0 t qh_detvnorm(vertexT*, vertexT*, setT*, double*)
0009ad90 t qh_distnorm(int, double*, double*, double*)
000b9230 t qh_errexit2(int, facetT*, facetT*)
000b0470 t qh_errprint(char const*, facetT*, facetT*, ridgeT*, vertexT*)
000bc400 t qh_findbest(double*, facetT*, unsigned int, unsigned int, unsigned int, double*, unsigned int*, int*)
000a7b80 t qh_findgood(facetT*, int)
000bd3d0 t qh_getangle(double*, double*)
000a8290 t qh_isvertex(double*, setT*)
000c0200 t qh_markkeep(facetT*)
0009c9c0 t qh_maxouter()
000a4560 t qh_memalloc(int)
000a4980 t qh_memsetup()
000a5e80 t qh_newfacet()
000a5fe0 t qh_newridge()
000afbf0 t qh_newstats(int, int*)
000d0030 t qh_premerge(vertexT*, double, double)
000c56c0 t qh_printend(_IO_FILE*, int, facetT*, setT*, unsigned int)
000ad470 t qh_setcheck(setT*, char const*, int)
000ac900 t qh_setequal(setT*, setT*)
000acaf0 t qh_setfree2(setT**, int)
000acbc0 t qh_setindex(setT*, void*)
000ad010 t qh_setprint(_IO_FILE*, char const*, setT*)
00070820 t Q_URLDecode(char*, int, char const*, int)
000707f0 t Q_URLEncode(char*, int, char const*, int)
0013a440 t SmoothCurve(float)
00143b70 t _SSE_SinCos(float, float*, float*)
0006e270 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
0006e390 t V_vsnprintf(char*, int, char const*, char*)
0006d470 t _V_wcslower(char const*, int, wchar_t*)
0003ca40 t WriteRandom(int*)
001396f0 t AngleIMatrix(RadianEuler const&, matrix3x4_t&)
001395a0 t AngleIMatrix(QAngle const&, matrix3x4_t&)
00139740 t AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
001388d0 t AngleVectors(QAngle const&, Vector*)
00138960 t AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
00054630 t CreateSpring(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, springparams_t*)
00137cd0 t CrossProduct(float const*, float const*, float*)
0005aaf0 t CrossProduct(Vector const&, Vector const&, Vector&) [clone .constprop.78]
0013cd60 t Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00119360 t gbs_add_path(char*, char*)
0005afb0 t GetStartVert(leafmap_t const*, IVP_U_Float_Point const&, int&, int&)
00137250 t _InvRSquared(float const*)
000527b0 t IsZeroVector(IVP_U_Point const&)
0013e740 t MathLib_Init(float, float, float, int, bool, bool, bool, bool)
00137490 t MatrixAngles(matrix3x4_t const&, float*)
0013aac0 t MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
00137610 t MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
00137a10 t MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
00119830 t p_get_string()
000bad70 t qh_buildhull()
000c9bf0 t qh_checkzero(unsigned int)
000a78a0 t qh_delvertex(vertexT*)
0009b690 t qh_detjoggle(double*, int, int)
000bfa00 t qh_detvridge(vertexT*)
000bc0a0 t qh_distplane(double*, facetT*, double*)
0009ae60 t qh_distround(int, double, double)
0009be70 t qh_facetarea(facetT*)
0009f9d0 t qh_freebuild(unsigned int)
0009fd70 t qh_freeqhull(unsigned int)
000bd010 t qh_gausselim(double**, int, int, unsigned int*, unsigned int*)
000bd520 t qh_getcenter(setT*)
000ca6e0 t qh_hashridge(setT*, int, ridgeT*, vertexT*)
000abf10 t qh_initbuild()
000a1a60 t qh_initflags(char*)
0009c970 t qh_maxabsval(double*, int)
0009ced0 t qh_minabsval(double*, int)
000b02d0 t qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)
000a8a60 t qh_newvertex(double*)
000bdbb0 t qh_normalize(double*, int, unsigned int)
000a96d0 t qh_point_add(setT*, double*, void*)
0009d1e0 t qh_pointdist(double*, double*, int)
000cfdb0 t qh_postmerge(char const*, double, double, unsigned int)
000b9830 t qh_precision(char const*)
0009dd10 t qh_scalelast(double*, int, int, double, double, double)
000ad540 t qh_setaddnth(setT**, int, void*)
000ace60 t qh_setappend(setT**, void*)
000ad3d0 t qh_setdelnth(setT*, int)
000acd40 t qh_setlarger(setT**)
000adbc0 t qh_setunique(setT**, void*)
000c53d0 t qh_skipfacet(facetT*)
00137fc0 t VectorAngles(float const*, float*)
00138c30 t VectorAngles(Vector const&, QAngle&)
00138d90 t VectorAngles(Vector const&, Vector const&, QAngle&)
00137f40 t VectorMatrix(Vector const&, matrix3x4_t&)
001377b0 t VectorRotate(float const*, matrix3x4_t const&, float*)
0013b240 t VectorRotate(Vector const&, Quaternion const&, Vector&)
001394e0 t VectorRotate(Vector const&, QAngle const&, Vector&)
00137450 t VectorsEqual(float const*, float const*)
0006f630 t V_FixSlashes(char*, char)
0006e560 t V_pretifymem(float, int, bool)
0006e770 t V_pretifynum(long long)
0006e2d0 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
0013eab0 t AngleDistance(float, float)
0013e960 t ApproachAngle(float, float, float)
0005bbb0 t FreeVisitHash(CVisitHash*)
00144470 t GammaToLinear(float)
00070570 t iHexCharToInt(char)
001444c0 t LinearToGamma(float)
00137be0 t MatrixScaleBy(float, matrix3x4_t&)
00137d50 t MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
00064200 t ParseKeyvalue(char const*, char (&) [1024], char (&) [1024])
0006f290 t PATHSEPARATOR(char)
001191e0 t p_make_string(char const*, ...)
0013ee50 t PolyFromPlane(Vector*, Vector const&, float, float)
001190d0 t p_print_error()
000cfa90 t qh_all_merges(unsigned int, unsigned int)
000bbeb0 t qh_backnormal(double**, int, int, unsigned int, double*, unsigned int*)
000aab50 t qh_checkfacet(facetT*, unsigned int, unsigned int*)
0009a860 t qh_copypoints(double*, int, int)
0009ab20 t qh_detsimplex(double*, setT*, int, unsigned int*)
000bfab0 t qh_detvridge3(vertexT*, vertexT*)
000c0110 t qh_geomplanes(facetT*, double*, double*)
000bdd60 t qh_getcentrum(facetT*)
000ca800 t qh_makeridges(facetT*)
0009ca20 t qh_maxsimplex(int, setT*, double*, int, setT**)
000cedc0 t qh_mergecycle(facetT*, facetT*)
000ce010 t qh_mergefacet(facetT*, facetT*, double*, double*, unsigned int)
000a8930 t qh_nearvertex(facetT*, double*, double*)
000bd710 t qh_normalize2(double*, int, unsigned int, double*, unsigned int*)
0009d0b0 t qh_outerinner(facetT*, double*, double*)
000a9780 t qh_pointfacet()
000c7ed0 t qh_printbegin(_IO_FILE*, int, facetT*, setT*, unsigned int)
000c2670 t qh_printfacet(_IO_FILE*, facetT*)
000aa820 t qh_printlists()
000c1500 t qh_printpoint(_IO_FILE*, char const*, double*)
000c18b0 t qh_printridge(_IO_FILE*, ridgeT*)
000afe80 t qh_printstats(_IO_FILE*, int, int*)
000bf910 t qh_printvnorm(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000c4280 t qh_readpoints(int*, int*, unsigned int*)
000aa920 t qh_resetlists(unsigned int)
0009e2c0 t qh_scaleinput()
000adb60 t qh_setcompact(setT*)
000ac830 t qh_setdellast(setT*)
000ad6b0 t qh_setreplace(setT*, void*, void*)
000ad910 t qh_settemppop()
000cd3c0 t qh_tracemerge(facetT*, facetT*)
000cdfd0 t qh_willdelete(facetT*, facetT*)
0013ad50 t QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
000797b0 t Q_UTF16ToUTF8(unsigned short const*, char*, int, EStringConvertErrorPolicy)
00079d90 t Q_UTF32ToUTF8(wchar_t const*, char*, int, EStringConvertErrorPolicy)
00079190 t Q_UTF8ToUTF16(char const*, unsigned short*, int, EStringConvertErrorPolicy)
000794f0 t Q_UTF8ToUTF32(char const*, wchar_t*, int, EStringConvertErrorPolicy)
0013ec90 t RotationDelta(QAngle const&, QAngle const&, QAngle*)
0013d580 t TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0006fb10 t V_AppendSlash(char*, int)
0006f210 t V_binarytohex(unsigned char const*, int, char*, int)
00137ca0 t VectorCompare(float const*, float const*)
00137840 t VectorIRotate(float const*, matrix3x4_t const&, float*)
00137dd0 t VectorVectors(Vector const&, Vector&, Vector&)
0006f980 t V_GetFileName(char const*)
0006f160 t V_hextobinary(char const*, int, unsigned char*, int)
0002cdf0 t vphysics_init()
00070bc0 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
0006efc0 t _V_UCS2ToUTF8(unsigned short const*, char*, int)
0006f080 t _V_UTF8ToUCS2(char const*, int, unsigned short*, int)
00061b60 t AllocVisitHash()
0013eb10 t AngleNormalize(float)
0013ebb0 t AnglesAreEqual(float, float, float)
00138640 t BoxOnPlaneSide(float const*, float const*, cplane_t const*)
00070550 t cIntToHexDigit(int)
001430f0 t ClipPolyhedron(CPolyhedron const*, float const*, int, float, bool)
0013c800 t Hermite_Spline(float, float, float, float)
0013c660 t Hermite_Spline(float, float, float, float, float)
0013c850 t Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
0013c760 t Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
0013c540 t Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000559f0 t IsVehicleWheel(IVP_Real_Object*)
0013d700 t ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00116750 t ivp_byte_swap2(unsigned short&)
00116720 t ivp_byte_swap4(unsigned int&)
000ea120 t ivp_dummy_func()
001177d0 t ivp_srand_read()
00119160 t p_export_error(char const*, ...)
000a4d70 t qh_appendfacet(facetT*)
0009f6a0 t qh_appendprint(qh_PRINT)
000a6e60 t qh_checkconvex(facetT*, int)
000a6db0 t qh_check_point(double*, facetT*, double*, double*, facetT**, facetT**)
000a7610 t qh_checkvertex(vertexT*)
000c7690 t qh_countfacets(facetT*, setT*, unsigned int, int*, int*, int*, int*, int*)
0009a960 t qh_determinant(double**, int, unsigned int*)
0009aef0 t qh_detroundoff()
000bfc60 t qh_eachvoronoi(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), vertexT*, unsigned int, qh_RIDGE, unsigned int)
000c0040 t qh_facet2point(facetT*, double**, double**, double*)
0009f620 t qh_facetcenter(setT*)
000bcb90 t qh_findbestnew(double*, facetT*, double*, unsigned int*, int*)
000ba2e0 t qh_findhorizon(double*, facetT*, int*, int*)
0009f720 t qh_freebuffers()
000a8170 t qh_furthestout(facetT*)
000bd600 t qh_getdistance(facetT*, facetT*, double*, double*)
000cd000 t qh_getmergeset(facetT*)
000abb40 t qh_initialhull(setT*)
0009e880 t qh_joggleinput()
000c61a0 t qh_markvoronoi(facetT*, setT*, unsigned int, unsigned int*, int*)
000cb910 t qh_mergeridges(facetT*, facetT*)
000cbed0 t qh_newvertices(setT*)
000a8f20 t qh_nextridge3d(ridgeT*, facetT*, vertexT**)
000afba0 t qh_nostatistic(int)
000a9140 t qh_outcoplanar()
000aa030 t qh_pointvertex()
000c5890 t qh_printafacet(_IO_FILE*, int, facetT*, unsigned int)
000c0590 t qh_printcenter(_IO_FILE*, int, char const*, facetT*)
000c8e10 t qh_printfacets(_IO_FILE*, int, facetT*, setT*, unsigned int)
0009d2d0 t qh_printmatrix(_IO_FILE*, char const*, double**, int, int)
000c27c0 t qh_printpoint3(_IO_FILE*, double*)
0009d380 t qh_printpoints(_IO_FILE*, char const*, setT*)
000c15f0 t qh_printvertex(_IO_FILE*, vertexT*)
000befd0 t qh_printvridge(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
000c2720 t qh_projectdim3(double*, double*)
000a6150 t qh_removefacet(facetT*)
0009dca0 t qh_rotateinput(double**)
0009ded0 t qh_scalepoints(double*, int, int, double*, double*)
0009e340 t qh_setdelaunay(int, int, double*)
000c4150 t qh_setfeasible(int)
000acb40 t qh_setfreelong(setT**)
000ada20 t qh_settempfree(setT**)
000ad9b0 t qh_settemppush(setT*)
000adae0 t qh_settruncate(setT*, int)
0006e970 t Q_IsMeanSpaceW(wchar_t)
000525c0 t QuaternionDiff(IVP_U_Quat const&, IVP_U_Quat const&, IVP_U_Quat&)
0013ae10 t QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
00070880 t Q_URLDecodeRaw(char*, int, char const*, int)
00070850 t Q_URLEncodeRaw(char*, int, char const*, int)
00079ad0 t Q_UTF16ToUTF32(unsigned short const*, wchar_t*, int, EStringConvertErrorPolicy)
0007a070 t Q_UTF32ToUTF16(wchar_t const*, unsigned short*, int, EStringConvertErrorPolicy)
0007a390 t Q_UTF32ToUTF32(wchar_t const*, wchar_t*, int, EStringConvertErrorPolicy)
00139040 t SetScaleMatrix(float, float, float, matrix3x4_t&)
00139820 t SolveQuadratic(float, float, float, float&, float&)
00143a00 t _SSE_RSqrtFast(float)
0006d040 t Sys_GetFactory(CSysModule*)
0006d080 t Sys_GetFactory(char const*)
0006ce50 t Sys_LoadModule(char const*, Sys_Flags)
00061f50 t TraceGetAABB_r(Vector*, Vector*, IVP_Compact_Ledgetree_Node const*, CTraceIVP&)
00059140 t VirtualMeshPSI()
0006f570 t V_SetExtension(char*, char const*, int)
00070a90 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
0006f6f0 t V_StripLastDir(char*, int)
0006e3f0 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
0013b420 t AngleQuaternion(RadianEuler const&, Quaternion&)
0013b530 t AngleQuaternion(QAngle const&, Quaternion&)
00143fa0 t BuildGammaTable(float, float, float, int)
0013f110 t ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
00138120 t ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
00069860 t ConVar_Register(int, IConCommandBaseAccessor*)
0002e490 t ConvertBoxToIVP(Vector const&, Vector const&, Vector&, Vector&)
0006cce0 t GetModuleHandle(char const*)
001373f0 t InitSinCosTable()
001448b0 t LinearToTexture(float)
00137b70 t MatrixGetColumn(matrix3x4_t const&, int, Vector&)
00137ba0 t MatrixSetColumn(Vector const&, int, matrix3x4_t&)
00139200 t MatrixTranspose(matrix3x4_t&)
00139230 t MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
000a4e00 t qh_appendvertex(vertexT*)
000c9a10 t qh_basevertices(facetT*)
000b8e70 t qh_buildtracing(double*, facetT*)
000c9af0 t qh_checkconnect()
000a51c0 t qh_checkflipped(facetT*, double*, unsigned int)
000aa0a0 t qh_check_maxout()
000ac570 t qh_check_output()
000a9c90 t qh_check_points()
000ab5f0 t qh_checkpolygon(facetT*)
000a7780 t qh_clearcenters(qh_CENTER)
0009a8f0 t qh_crossproduct(int, double*, double*, double*)
000a8fb0 t qh_facet3vertex(facetT*)
000a7ee0 t qh_findgood_all(facetT*)
0009c180 t qh_findgooddist(double*, facetT*, double*, facetT**)
000ce8c0 t qh_forcedmerges(unsigned int*)
000aa580 t qh_furthestnext()
0009c570 t qh_gram_schmidt(int, double**)
000a8260 t qh_infiniteloop(facetT*)
0009c810 t qh_inthresholds(double*, double*)
000a6560 t qh_makenewfacet(setT*, unsigned int, facetT*)
000a47d0 t qh_memfreeshort(int*, int*)
000cb5f0 t qh_mergefacet2d(facetT*, facetT*)
000cbf20 t qh_mergesimplex(facetT*, facetT*, unsigned int)
000a87d0 t qh_nearcoplanar()
000a89f0 t qh_newhashtable(int)
000b9280 t qh_nextfurthest(facetT**)
000b9ea0 t qh_partitionall(setT*, double*, int)
000aa4e0 t qh_prependfacet(facetT*, facetT**)
000c3b90 t qh_printcentrum(_IO_FILE*, facetT*, double)
000c1420 t qh_printpointid(_IO_FILE*, char const*, int, double*, int)
000c2840 t qh_printspheres(_IO_FILE*, setT*, double)
000bb5a0 t qh_printsummary(_IO_FILE*)
000c6450 t qh_printvoronoi(_IO_FILE*, int, facetT*, setT*, unsigned int)
0009e4c0 t qh_projectinput()
000bdbf0 t qh_projectpoint(double*, facetT*, double)
0009d990 t qh_randomfactor()
0009da00 t qh_randommatrix(double*, int, double**)
000c3f50 t qh_readfeasible(int, char*)
000a64e0 t qh_removevertex(vertexT*)
000cc820 t qh_renamevertex(vertexT*, vertexT*, setT*, facetT*, facetT*)
0009dad0 t qh_rotatepoints(double*, int, int, double**)
000ad630 t qh_setaddsorted(setT**, void*)
000ac890 t qh_setdelsorted(setT*, void*)
000ad7d0 t qh_setduplicate(setT*, int)
0009ebe0 t qh_sethalfspace(int, double*, double**, double*, double*, double*)
000cd580 t qh_tracemerging()
000cd630 t qh_updatetested(facetT*, facetT*)
000cd7b0 t qh_vertexridges(vertexT*)
000ac730 t qh_vertexsubset(setT*, setT*)
0013a510 t QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
0013aa70 t QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
0013ac40 t QuaternionScale(Quaternion const&, float, Quaternion&)
0013a7c0 t QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
00078b00 t Q_UChar32ToUTF8(wchar_t, char*)
00079010 t Q_UnicodeLength(char const*)
00079060 t Q_UnicodeLength(unsigned short const*)
000790b0 t Q_UnicodeLength(wchar_t const*)
0007b680 t Q_UnicodeRepair(char*, EStringConvertErrorPolicy)
0007b860 t Q_UnicodeRepair(unsigned short*, EStringConvertErrorPolicy)
0007ba60 t Q_UnicodeRepair(wchar_t*, EStringConvertErrorPolicy)
00078c00 t Q_UTF8ToUChar32(char const*, wchar_t&, bool&)
0013d410 t RangeCompressor(float, float, float, float)
0006cd50 t Sys_LoadLibrary(char const*, Sys_Flags)
00144880 t TextureToLinear(int)
00137670 t VectorTransform(float const*, matrix3x4_t const&, float*)
0013a250 t VectorYawRotate(Vector const&, float, Vector&)
0006ff60 t V_FixupPathName(char*, unsigned int, char const*)
0006f5e0 t V_StripFilename(char*)
001397e0 t AddPointToBounds(Vector const&, Vector&, Vector&)
00138390 t ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
00116820 t ivp_free_aligned(void*)
00116710 t ivp_memory_check(void*)
001379a0 t MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
001378d0 t MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
0013b6d0 t MatrixQuaternion(matrix3x4_t const&, Quaternion&)
000b3040 t p_ab_quad_length(P_Sur_2D_Point*, P_Sur_2D_Point*, P_Sur_2D_Point*)
0013d220 t Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000b2040 t p_check_for_flat(IVP_Tri_Edge*, IVP_Tri_Edge*, double)
00119810 t p_get_next_token()
000af5b0 t qh_allstatistics()
000c9f80 t qh_copynonconvex(ridgeT*)
000a8d60 t qh_createsimplex(setT*)
000a63a0 t qh_deletevisible()
000c6bb0 t qh_facetvertices(facetT*, setT*, unsigned int)
000a79f0 t qh_findbestfacet(double*, unsigned int, double*, unsigned int*)
0009c000 t qh_findbestsharp(double*, facetT**, double*, int*)
000ca3d0 t qh_findbest_test(unsigned int, facetT*, facetT*, facetT**, double*, double*, double*)
000a78f0 t qh_findfacet_all(double*, double*, unsigned int*, int*)
000cf7d0 t qh_flippedmerges(facetT*, unsigned int*)
000a00d0 t qh_initqhull_mem()
000a8bc0 t qh_makenewfacets(double*)
000a55c0 t qh_makenewplanes()
000a5730 t qh_matchneighbor(facetT*, int, int, int*)
000a5640 t qh_matchvertices(int, setT*, int, setT*, int*, unsigned int*)
000a4ba0 t qh_memstatistics(_IO_FILE*)
000cbbe0 t qh_mergevertices(setT*, setT**)
0009d020 t qh_orientoutside(facetT*)
000c5480 t qh_printend4geom(_IO_FILE*, facetT*, int*, unsigned int)
000c7240 t qh_printextremes(_IO_FILE*, facetT*, setT*, int)
000c6ab0 t qh_printvdiagram(_IO_FILE*, int, facetT*, setT*, unsigned int)
000c1820 t qh_printvertices(_IO_FILE*, char const*, setT*)
0009d680 t qh_projectpoints(signed char*, int, double*, int, int, double*, int)
000acf30 t qh_setappend_set(setT**, setT*)
000aca20 t qh_setequal_skip(setT*, int, setT*, int)
000be730 t qh_setfacetplane(facetT*)
000b09c0 t qh_user_memsizes()
00078a70 t Q_IsValidUChar32(wchar_t)
0013b700 t QuaternionAngles(Quaternion const&, RadianEuler&)
0013b280 t QuaternionAngles(Quaternion const&, QAngle&)
0013a850 t QuaternionInvert(Quaternion const&, Quaternion&)
0013b050 t QuaternionMatrix(Quaternion const&, matrix3x4_t&)
0013b1f0 t QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
00078bb0 t Q_UChar32ToUTF16(wchar_t, unsigned short*)
000790d0 t Q_UnicodeAdvance(char*, int)
00079120 t Q_UnicodeAdvance(unsigned short*, int)
00079170 t Q_UnicodeAdvance(wchar_t*, int)
00078dc0 t Q_UTF16ToUChar32(unsigned short const*, wchar_t&, bool&)
00138610 t SignbitsForPlane(cplane_t*)
0013b770 t Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
00143b20 t _SSE_InvRSquared(float const*)
0006d020 t Sys_UnloadModule(CSysModule*)
00061be0 t TraceGetExtent_r(IVP_Compact_Ledgetree_Node const*, CTraceIVP&, Vector const&, float&, Vector&)
00137710 t VectorITransform(float const*, matrix3x4_t const&, float*)
00137310 t _VectorNormalize(Vector&)
0006ff30 t V_IsAbsolutePath(char const*)
0006f440 t V_StripExtension(char const*, char*, int)
0006ee80 t _V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
0006ef30 t _V_UnicodeToUCS2(wchar_t const*, int, char*, int)
0013b640 t BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
00068ec0 t CharacterSetBuild(characterset_t*, char const*)
00050fe0 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, float, float, float, float, IVP_U_Float_Point*)
000512b0 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, IVP_U_Float_Point const&, float, float, IVP_U_Float_Point*)
0006a5f0 t ConVar_PrintFlags(ConCommandBase const*)
00069910 t ConVar_Unregister()
0002e720 t ConvertMatrixToHL(IVP_U_Matrix const&, matrix3x4_t&)
000597d0 t CreateVirtualMesh(virtualmeshparams_t const&)
00140cf0 t FindPointInPlanes(float const*, int)
00119290 t GBS_remove_escape(char*)
00141450 t GetTempPolyhedron(unsigned short, unsigned short, unsigned short, unsigned short)
0011a750 t ivp_indent_output()
00137c70 t MatrixScaleByZero(matrix3x4_t&)
0002e180 t ParseFileInternal(char const*, char*, bool*, characterset_t*, unsigned int)
000b3000 t p_count_reachable(P_Sur_2D_Point*)
000c98c0 t qh_appendmergeset(facetT*, facetT*, mergeType, double*)
000a98a0 t qh_check_bestdist()
000a52c0 t qh_facetintersect(facetT*, facetT*, int*, int*, int)
000cd8b0 t qh_find_newvertex(vertexT*, setT*, setT*)
000afa70 t qh_freestatistics()
000ca740 t qh_hashridge_find(setT*, int, ridgeT*, vertexT*, vertexT*, int*)
000afa80 t qh_initstatistics()
000a13c0 t qh_initthresholds(char*)
000ca9e0 t qh_mark_dupridges(facetT*)
000a5b50 t qh_matchnewfacets()
000a48b0 t qh_meminitbuffers(int, int, int, int, int)
000cf030 t qh_mergecycle_all(facetT*, unsigned int*)
000cb7b0 t qh_mergeneighbors(facetT*, facetT*)
000b98b0 t qh_partitionpoint(double*, facetT*)
000b08e0 t qh_printfacetlist(facetT*, setT*, unsigned int)
000aa630 t qh_printhashtable(_IO_FILE*)
000c2940 t qh_printline3geom(_IO_FILE*, double*, double*, double*)
000c2ae0 t qh_printpointvect(_IO_FILE*, double*, double*, double*, double, double*)
000afca0 t qh_printstatlevel(_IO_FILE*, int, int)
000c1540 t qh_printvdiagram2(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), setT*, qh_RIDGE, unsigned int)
000c9410 t qh_produce_output()
000cf610 t qh_reducevertices()
000ac6c0 t qh_setvoronoi_all()
000a6aa0 t qh_updatevertices()
0009f190 t qh_voronoi_center(int, setT*)
00078eb0 t Q_UnicodeValidate(char const*)
00078f20 t Q_UnicodeValidate(unsigned short const*)
00078f80 t Q_UnicodeValidate(wchar_t const*)
00140210 t R_CullBoxSkipNear(Vector const&, Vector const&, Frustum_t const&)
000500e0 t SavePhysicsObject(physsaveparams_t const&, CPhysicsObject*)
00054880 t SavePhysicsSpring(physsaveparams_t const&, CPhysicsSpring*)
00138fc0 t SetIdentityMatrix(matrix3x4_t&)
0013a490 t SmoothCurve_Tweak(float, float, float)
00144510 t SrgbGammaToLinear(float)
001445a0 t SrgbLinearToGamma(float)
0006d810 t StringAfterPrefix(char const*, char const*)
0006d0b0 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
0006fb70 t V_ComposeFileName(char const*, char const*, char*, int)
0006f840 t V_ExtractFilePath(char const*, char*, int)
00144630 t X360GammaToLinear(float)
001447a0 t X360LinearToGamma(float)
0013d1a0 t BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0013dea0 t CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
0013b8b0 t Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001416d0 t ClipLinkedGeometry(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, float const*, int, float, bool)
0002e520 t ConvertMatrixToIVP(matrix3x4_t const&, IVP_U_Matrix&)
00059860 t DestroyVirtualMesh(CPhysCollide*)
0003eb40 t GetOppositeSynapse(IVP_Synapse_Friction*)
001167e0 t ivp_malloc_aligned(int, int)
0013e8d0 t MathLib_MMXEnabled()
0013e8e0 t MathLib_SSEEnabled()
00119240 t p_make_string_fast(char const*, ...)
00119860 t p_read_first_token(_IO_FILE*)
000a4e80 t qh_attachnewfacets()
000bff00 t qh_eachvoronoi_all(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), unsigned int, qh_RIDGE, unsigned int)
000a9290 t qh_initialvertices(int, setT*, double*, int)
000a0190 t qh_initqhull_start(_IO_FILE*, _IO_FILE*, _IO_FILE*)
000a82c0 t qh_matchduplicates(facetT*, int, int, int*)
000cabb0 t qh_maydropneighbor(facetT*)
000ce5d0 t qh_merge_nonconvex(facetT*, facetT*, mergeType)
000cba00 t qh_mergevertex_del(vertexT*, facetT*, facetT*)
000c7100 t qh_printextremes_d(_IO_FILE*, facetT*, setT*, int)
000c0920 t qh_printfacet2geom(_IO_FILE*, facetT*, double*)
000c0a80 t qh_printfacet2math(_IO_FILE*, facetT*, int)
000c0d90 t qh_printfacet3math(_IO_FILE*, facetT*, int)
000c7360 t qh_printpoints_out(_IO_FILE*, facetT*, setT*, int)
000c2c20 t qh_printpointvect2(_IO_FILE*, double*, double*, double*, double)
000aff40 t qh_printstatistics(_IO_FILE*, char const*)
000c6d30 t qh_printvertexlist(_IO_FILE*, char const*, facetT*, setT*, unsigned int)
000c79a0 t qh_printvneighbors(_IO_FILE*, facetT*, setT*, unsigned int)
000ad310 t qh_setdelnthsorted(setT*, int)
000ac970 t qh_setequal_except(setT*, void*, setT*, void*)
000ad8b0 t qh_settempfree_all()
000cd210 t qh_test_vneighbors()
000aab10 t qh_vertexintersect(setT**, setT*)
000ac5f0 t qh_vertexneighbors()
00078ab0 t Q_UChar32ToUTF8Len(wchar_t)
0007aa20 t Q_UTF16CharsToUTF8(unsigned short const*, int, char*, int, EStringConvertErrorPolicy)
0007b080 t Q_UTF32CharsToUTF8(wchar_t const*, int, char*, int, EStringConvertErrorPolicy)
0007a3b0 t Q_UTF8CharsToUTF16(char const*, int, unsigned short*, int, EStringConvertErrorPolicy)
0007a710 t Q_UTF8CharsToUTF32(char const*, int, wchar_t*, int, EStringConvertErrorPolicy)
001439c0 t _SSE_RSqrtAccurate(float)
0006d070 t Sys_GetFactoryThis()
0006f4f0 t V_DefaultExtension(char*, char const*, int)
0006f670 t V_FixDoubleSlashes(char*)
0006f8e0 t V_GetFileExtension(char const*)
0006fc10 t V_MakeAbsolutePath(char*, int, char const*, char const*)
0006fd80 t V_MakeRelativePath(char const*, char const*, char*, int)
0006f990 t V_RemoveDotSlashes(char*, char, bool)
0013b3b0 t AxisAngleQuaternion(Vector const&, float, Quaternion&)
0002ea10 t ConvertRotationToHL(IVP_U_Quat const&, QAngle&)
0002e810 t ConvertRotationToHL(IVP_U_Matrix3 const&, QAngle&)
0004f490 t CreatePhysicsObject(CPhysicsEnvironment*, CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*, bool)
0004f6f0 t CreatePhysicsSphere(CPhysicsEnvironment*, float, int, Vector const&, QAngle const&, objectparams_t*, bool)
00094850 t debug_sphere_output(IVV_Sphere*)
0013c6f0 t Hermite_SplineBasis(float, float*)
000e02c0 t ivp_print_mi_matrix(int, int, IVP_MI_Vector**)
001448f0 t LinearToScreenGamma(float)
0013e8f0 t MathLib_SSE2Enabled()
0002f740 t PackLedgeIntoBuffer(packedhull_t*, CUtlBuffer&, IVP_Compact_Ledge const*, virtualmeshlist_t const&)
000a74e0 t qh_checkflipped_all(facetT*)
000ca4a0 t qh_findbestneighbor(facetT*, double*, double*, double*)
000b9c00 t qh_partitionvisible(unsigned int, int*)
000c7cf0 t qh_printextremes_2d(_IO_FILE*, facetT*, setT*, int)
000c1c80 t qh_printfacetheader(_IO_FILE*, facetT*)
000c19b0 t qh_printfacetridges(_IO_FILE*, facetT*)
000cdc90 t qh_redundant_vertex(vertexT*)
000ace10 t qh_setappend2ndlast(setT**, void*)
0009f040 t qh_sethalfspace_all(int, int, double*, double*)
000cca90 t qh_test_appendmerge(facetT*, facetT*)
0013af60 t QuaternionAngleDiff(Quaternion const&, Quaternion const&)
00052610 t QuaternionAxisAngle(IVP_U_Quat const&, Vector&, float&)
0013b2b0 t QuaternionAxisAngle(Quaternion const&, Vector&, float&)
0013a810 t QuaternionConjugate(Quaternion const&, Quaternion&)
0013a8f0 t QuaternionNormalize(Quaternion&)
00078ae0 t Q_UChar32ToUTF16Len(wchar_t)
000706a0 t Q_URLDecodeInternal(char*, int, char const*, int, bool)
000705a0 t Q_URLEncodeInternal(char*, int, char const*, int, bool)
0007ad60 t Q_UTF16CharsToUTF32(unsigned short const*, int, wchar_t*, int, EStringConvertErrorPolicy)
0007b370 t Q_UTF32CharsToUTF16(wchar_t const*, int, unsigned short*, int, EStringConvertErrorPolicy)
00144860 t SrgbGammaTo360Gamma(float)
0002eb90 t TransformIVPToLocal(IVP_U_Point&, IVP_Real_Object*, bool)
0002ea40 t TransformIVPToLocal(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002ed20 t TransformLocalToIVP(IVP_U_Point&, IVP_Real_Object*, bool)
0002ebf0 t TransformLocalToIVP(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002ed80 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
0002ef10 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Float_Point&, IVP_Real_Object*, bool)
0013e230 t CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0013ed40 t ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
0002e6f0 t ConvertRotationToIVP(QAngle const&, IVP_U_Quat&)
0002e620 t ConvertRotationToIVP(QAngle const&, IVP_U_Matrix3&)
0003eed0 t CreateObjectPairHash()
000362f0 t CreateSurfaceManager(CPhysCollide const*, short&)
00140830 t GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
0003cde0 t IsExternalConstraint(IVP_Controller*, void*)
0004f8d0 t MaterialIndexDataOps()
0013e8c0 t MathLib_3DNowEnabled()
000b45b0 t p_link_triangle_self(IVP_Triangle*)
000bafe0 t qh_build_withrestart()
000af5e0 t qh_collectstatistics()
0009b8d0 t qh_facetarea_simplex(int, double*, setT*, vertexT*, unsigned int, double*, double*)
0009ff50 t qh_initqhull_buffers()
000a04c0 t qh_initqhull_globals(double*, int, int, unsigned int)
000ceca0 t qh_mergecycle_facets(facetT*, facetT*)
000cb0a0 t qh_mergecycle_ridges(facetT*, facetT*)
000b9570 t qh_partitioncoplanar(double*, facetT*, double*)
000c0f80 t qh_printfacet3vertex(_IO_FILE*, facetT*, int)
000c96e0 t qh_printneighborhood(_IO_FILE*, int, facetT*, facetT*, unsigned int)
000cc690 t qh_renameridgevertex(ridgeT*, vertexT*, vertexT*)
000bde20 t qh_sethyperplane_det(int, double**, double*, unsigned int, double*, double*, unsigned int*)
0013adc0 t QuaternionDotProduct(Quaternion const&, Quaternion const&)
00050330 t RestorePhysicsObject(physrestoreparams_t const&, CPhysicsObject**)
000548e0 t RestorePhysicsSpring(physrestoreparams_t const&, CPhysicsSpring**)
0003c9f0 t SeedRandomGenerators()
00038720 t set_4x4_column_major(IVP_U_Matrix&, float const*)
00143a20 t _SSE_VectorNormalize(Vector&)
001372a0 t _VectorNormalizeFast(Vector&)
0006f400 t V_StripTrailingSlash(char*)
00138ad0 t AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
0013df20 t CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
0013db80 t CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
00144930 t ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
00070d30 t ConnectTier1Libraries(void* (**)(char const*, int*), int)
0003cbb0 t CreateFixedConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
00047bf0 t CreateFluidController(IVP_Environment*, CPhysicsObject*, fluidparams_t*)
0003cb40 t CreateHingeConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
000690a0 t DefaultCompletionFunc(char const*, char (*) [64])
00052710 t GetObjectPosition_IVP(IVP_U_Point&, IVP_Real_Object*)
001385a0 t GreatestCommonDivisor(int, int)
000f1af0 t out_friction_info_obj(IVP_Core*)
000b7bb0 t P_THREE_CHECK_INTRUDE(int, int, int, int, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge**, IVP_U_Hesse*, IVP_U_Hesse*, IVP_Tri_Edge**, double*, IVP_U_Point&, IVP_Intrusion_Status*)
0009fdf0 t qh_init_qhull_command(int, char**)
000a65f0 t qh_makenew_simplicial(facetT*, vertexT*, int*)
000b0280 t qh_printallstatistics(_IO_FILE*, char const*)
000c6db0 t qh_printhelp_singular(_IO_FILE*)
000cd720 t qh_vertexridges_facet(vertexT*, facetT*, setT**)
0003ce70 t SavePhysicsConstraint(physsaveparams_t const&, CPhysicsConstraint*)
001398e0 t SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
0006cd40 t Sys_IsDebuggerPresent()
001449a0 t VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
000701c0 t V_GetCurrentDirectory(char*, int)
000701f0 t V_SetCurrentDirectory(char const*)
0006f7e0 t V_UnqualifiedFileName(char const*)
0013eb70 t AngleNormalizePositive(float)
00070a10 t BGetLocalFormattedDate(long, char*, int)
00070a50 t BGetLocalFormattedTime(long, char*, int)
0013dc60 t CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
0013de10 t CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
00048810 t CreateFrictionSnapshot(IVP_Real_Object*)
0003cd70 t CreateLengthConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0004b5d0 t CreateMotionController(CPhysicsEnvironment*, IMotionEvent*)
00050160 t CreateObjectFromBuffer(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, bool)
00052540 t CreatePlayerController(CPhysicsObject*)
0003cd00 t CreatePulleyConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
00053930 t CreateShadowController(CPhysicsObject*, bool, bool)
000488a0 t DeleteAllFrictionPairs(IVP_Real_Object*, IVP_Real_Object*)
00143f20 t GammaToLinearFullRange(float)
00070ee0 t GetNoEscCharConversion()
000b3700 t ivp_check_for_opposite(IVP_Hash*, IVP_Poly_Point*, IVP_Poly_Point*, IVP_Tri_Edge*)
00143f60 t LinearToGammaFullRange(float)
00036310 t OutputCollideDebugInfo(CPhysCollide const*)
000b1f80 t p_del_double_triangles(IVP_Triangle**, IVP_Triangle**, IVP_Triangle**)
000bf090 t qh_compare_vertexpoint(void const*, void const*)
000cce70 t qh_getmergeset_initial(facetT*)
000cdd50 t qh_rename_sharedvertex(vertexT*, facetT*)
000be550 t qh_sethyperplane_gauss(int, double**, double*, unsigned int, double*, double*, unsigned int*)
000ad0f0 t qh_setnew_delnthsorted(setT*, int, int, int)
000aaa70 t qh_vertexintersect_new(setT*, setT*)
0013aa10 t QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
0013a5a0 t QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
0013ec00 t RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
0006f930 t V_ExtractFileExtension(char const*, char*, int)
0006dec0 t V_normalizeFloatString(char*)
0013dd50 t CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
0013e290 t CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0013f500 t ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
0006a820 t ConVar_PrintDescription(ConCommandBase const*)
0006cc30 t CreateInterfaceInternal(char const*, int*)
0003cad0 t CreateRagdollConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003cc20 t CreateSlidingConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
00058830 t CreateVehicleController(CPhysicsEnvironment*, CPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
000657d0 t CreateVPhysicsKeyParser(char const*)
0013ce70 t Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00048880 t DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
000525a0 t DestroyPlayerController(IPhysicsPlayerController*)
0013c920 t Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000b4eb0 t p_calc_min_intrude_dist(IVP_Triangle*, IVP_Intrusion_Status*, double)
000cadc0 t qh_mergecycle_neighbors(facetT*, facetT*)
000cf2c0 t qh_merge_degenredundant()
000c12e0 t qh_printhelp_degenerate(_IO_FILE*)
000cc4e0 t qh_remove_extravertices(facetT*)
0013a980 t QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
0013e1b0 t CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
001402c0 t CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
001382b0 t ConcatTransforms_Aligned(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
0003f320 t CreatePhysicsEnvironment()
000641e0 t DestroyVPhysicsKeyParser(IVPhysicsKeyParser*)
00070dd0 t DisconnectTier1Libraries()
00140db0 t FindConvexShapeLooseAABB(float const*, int, Vector*, Vector*)
00070ed0 t GetCStringCharConversion()
0003eb60 t GetOppositeSynapseObject(IVP_Synapse_Friction*)
0004f2c0 t GetWorldCoordFromSynapse(IVP_Synapse_Friction*, IVP_U_Point&)
00050290 t PostRestorePhysicsObject()
000ca020 t qh_degen_redundant_facet(facetT*)
000a6770 t qh_makenew_nonsimplicial(facetT*, vertexT*, int*)
000cb440 t qh_mergecycle_vneighbors(facetT*, facetT*)
000cba80 t qh_mergevertex_neighbors(facetT*, facetT*)
000c0440 t qh_order_vertexneighbors(vertexT*)
00140a50 t RandomVectorInUnitCircle(Vector2D*)
00140940 t RandomVectorInUnitSphere(Vector*)
0003d040 t RestorePhysicsConstraint(physrestoreparams_t const&, CPhysicsConstraint**)
00143a90 t _SSE_VectorNormalizeFast(Vector&)
0013e120 t CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
0013e030 t CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
00052fd0 t ComputeShadowControllerHL(CPhysicsObject*, hlshadowcontrol_params_t const&, float, float)
0002ef90 t ConvertCoordinateAxisToHL(int)
000f2070 t debug_out_friction_system(IVP_Friction_System*)
000cbd60 t qh_neighbor_intersections(vertexT*)
000c0770 t qh_printfacet2geom_points(_IO_FILE*, double*, double*, facetT*, double, double*)
000c0b50 t qh_printfacet3geom_points(_IO_FILE*, setT*, facetT*, double, double*)
0006eac0 t Q_RemoveAllEvilCharacters(char*)
0013bb60 t Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000527e0 t ComputeShadowControllerIVP(IVP_Real_Object*, shadowcontrol_params_t&, float, float)
0002ef70 t ConvertCoordinateAxisToIVP(int)
0003cc90 t CreateBallsocketConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
001400c0 t GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
0013f940 t GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, Frustum_t&)
000dd670 t ivp_debug_show_real_values(IVP_Buoyancy_Input const*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*)
0003d3a0 t SavePhysicsConstraintGroup(physsaveparams_t const&, CPhysicsConstraintGroup*)
00047ec0 t SavePhysicsFluidController(physsaveparams_t const&, CPhysicsFluidController*)
0013e380 t CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0013bdc0 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0013c020 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
00052ef0 t ConvertShadowControllerToHL(shadowcontrol_params_t const&, hlshadowcontrol_params_t&)
0013d390 t Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000e3ef0 t p_calc_2d_distances_to_axis(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
0004ba50 t SavePhysicsMotionController(physsaveparams_t const&, IPhysicsMotionController*)
00053af0 t SavePhysicsPlayerController(physsaveparams_t const&, CPlayerController*)
000539d0 t SavePhysicsShadowController(physsaveparams_t const&, IPhysicsShadowController*)
0006d010 t Sys_RunningWithDebugModules()
00139520 t TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
00139480 t TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
0013e0b0 t CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
0013c100 t Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000387d0 t ConvertHavanaLocalMatrixToHL(hk_Transform const&, matrix3x4_t&, IVP_Real_Object*)
00052e10 t ConvertShadowControllerToIVP(hlshadowcontrol_params_t const&, shadowcontrol_params_t&)
0003ca80 t CreatePhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00141ff0 t GeneratePolyhedronFromPlanes(float const*, int, float, bool)
0003ca70 t GetClientDataForHkConstraint(hk_Breakable_Constraint*)
00139080 t MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
000ca190 t qh_degen_redundant_neighbors(facetT*, facetT*)
000588a0 t SavePhysicsVehicleController(physsaveparams_t const&, CVehicleController*)
000708c0 t BGetLocalFormattedDateAndTime(long, char*, int, char*, int)
0013df90 t CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
0013c4c0 t Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00126e50 t ivp_core_get_surface_speed_os(IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000c35a0 t qh_printfacet3geom_simplicial(_IO_FILE*, facetT*, double*)
000c3110 t qh_printfacet4geom_simplicial(_IO_FILE*, facetT*, double*)
0003d4b0 t RestorePhysicsConstraintGroup(physrestoreparams_t const&, CPhysicsConstraintGroup**)
00047ed0 t RestorePhysicsFluidController(physrestoreparams_t const&, CPhysicsFluidController**)
000384a0 t TransformHavanaLocalToHLWorld(hk_Vector3 const&, IVP_Real_Object*, bool)
000383f0 t TransformHLWorldToHavanaLocal(Vector const&, IVP_Real_Object*)
0013e3e0 t CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00119030 t ivp_set_message_print_function(void (*)(char const*))
000c2ce0 t qh_printhyperplaneintersection(_IO_FILE*, facetT*, facetT*, setT*, double*)
0004b7b0 t RestorePhysicsMotionController(physrestoreparams_t const&, IPhysicsMotionController**)
00053b00 t RestorePhysicsPlayerController(physrestoreparams_t const&, CPlayerController**)
00053a30 t RestorePhysicsShadowController(physrestoreparams_t const&, IPhysicsShadowController**)
00139a30 t SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
0006d860 t StringAfterPrefixCaseSensitive(char const*, char const*)
00070470 t V_AddBackSlashesToSpecialChars(char const*)
0013e2f0 t CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
00050f80 t ComputePDControllerCoefficients(float*, float, float, float)
000c11a0 t qh_printfacetNvertex_simplicial(_IO_FILE*, facetT*, int)
00058900 t RestorePhysicsVehicleController(physrestoreparams_t const&, CVehicleController**)
0013a0c0 t SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
0013dcd0 t CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
000c3870 t qh_printfacet3geom_nonsimplicial(_IO_FILE*, facetT*, double*)
000c3330 t qh_printfacet4geom_nonsimplicial(_IO_FILE*, facetT*, double*)
0013e440 t CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
00038570 t ConvertHLLocalMatrixToHavanaLocal(matrix3x4_t const&, hk_Transform&)
00141500 t ConvertLinkedGeometryToPolyhedron(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, bool)
0003d450 t PostRestorePhysicsConstraintGroup()
0013ccd0 t Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000c1030 t qh_printfacetNvertex_nonsimplicial(_IO_FILE*, facetT*, int, int)
00055a10 t ShouldOverrideWheelContactFriction(float*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
0013c2e0 t Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0006ed00 t Q_StripPrecedingAndTrailingWhitespace(char*)
0006ebb0 t Q_StripPrecedingAndTrailingWhitespaceW(wchar_t*)
00053a40 t RestorePhysicsShadowControllerInternal(physrestoreparams_t const&, IPhysicsShadowController**, CPhysicsObject*)
00050210 t CreateObjectFromBuffer_UseExistingMemory(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, CPhysicsObject*)
0011d5e0 t ivp_optimiztion_center_check_successfull()
00053b50 t ControlPhysicsPlayerControllerAttachment_Silent(IPhysicsPlayerController*, IVP_Real_Object*, bool)
00053b10 t ControlPhysicsShadowControllerAttachment_Silent(IPhysicsShadowController*, IVP_Real_Object*, bool)
0006ede0 t Q_AggressiveStripPrecedingAndTrailingWhitespace(char*)
0006ec70 t Q_AggressiveStripPrecedingAndTrailingWhitespaceW(wchar_t*)
0013a2f0 t Bias(float, float)
0013a380 t Gain(float, float)
         U ConMsg(char const*, ...)
         U DevMsg(char const*, ...)
000c26c0 t dfacet(unsigned int)
001198b0 t p_atof(char const*)
001198e0 t p_atoi(char const*)
001167d0 t p_free(void*)
00137d30 t Q_log2(int)
00140ae0 t SinCos(float, float*, float*)
00137390 t _sqrtf(float)
0006dc70 t V_atof(char const*)
0006dc50 t V_atoi(char const*)
0013cef0 t BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000c17b0 t dvertex(unsigned int)
0009d910 t qh_rand()
001373b0 t _rsqrtf(float)
0013e900 t Approach(float, float, float)
0013f8e0 t CalcFovX(float, float)
0013f850 t CalcFovY(float, float)
0013f810 t CeilPow2(int)
00140720 t HSVtoRGB(Vector const&, Vector&)
00117780 t ivp_rand()
00116780 t p_calloc(int, int)
00116770 t p_malloc(unsigned int)
00119700 t p_strcmp(char const*, char const*)
00119110 t p_strdup(char const*)
001190f0 t p_strlen(char const*)
0009f6e0 t qh_clock()
000a9220 t qh_point(int)
000bb260 t qh_qhull()
000acb80 t qh_setin(setT*, void*)
0009d960 t qh_srand(int)
00140640 t RGBtoHSV(Vector const&, Vector&)
00143cf0 t _SSE_cos(float)
0006d890 t V_atoi64(char const*)
0006f120 t V_nibble(char)
0006d4b0 t V_strupr(char*)
0013ea30 t AngleDiff(float, float)
0013f830 t FloorPow2(int)
0010f110 t get_float()
000dc430 t IsCarBody(IVP_Core*)
001177b0 t ivp_srand(int)
00064190 t nexttoken(char*, char const*, char)
00144df0 t pathmatch(char const*, char**, bool, char*, unsigned int)
001197d0 t p_get_num()
001167c0 t p_realloc(void*, int)
00119730 t p_str_tok(char*, char const*)
000a0360 t qh_init_A(_IO_FILE*, _IO_FILE*, _IO_FILE*, int, char**)
000a18d0 t qh_init_B(double*, int, int, unsigned int)
0009d430 t qh_maxmin(double*, int, int)
000a03c0 t qh_option(char const*, int*, double*)
000ac7c0 t qh_setdel(setT*, void*)
000acc60 t qh_setnew(int)
000aff00 t qh_stddev(int, double, double, double*)
000a1320 t qh_strtod(char const*, char**)
000a1370 t qh_strtol(char const*, char**)
00140150 t R_CullBox(Vector const&, Vector const&, Frustum_t const&)
00124cd0 t ReportObj(IVP_Synapse_Real*, CFmtStrN<256, false>&)
001439a0 t _SSE_Sqrt(float)
0006da90 t V_atoui64(char const*)
0006d2e0 t _V_memcmp(char const*, int, void const*, void const*, int)
0006d2a0 t _V_memcpy(char const*, int, void*, void const*, int)
0006d280 t _V_memset(char const*, int, void*, int, int)
000708b0 t V_qsort_s(void*, unsigned int, unsigned int, int (*)(void*, void const*, void const*), void*)
0006d3a0 t _V_strcmp(char const*, int, char const*, char const*)
0006d320 t _V_strcpy(char const*, int, char*, char const*)
0006d5f0 t V_stricmp(char const*, char const*)
0006e050 t V_stristr(char*, char const*)
0006df50 t V_stristr(char const*, char const*)
00070330 t V_StrLeft(char const*, int, char*, int)
0006d310 t _V_strlen(char const*, int, char const*)
0006e460 t V_strncat(char*, char const*, unsigned int, int)
0006e1a0 t V_strnchr(char const*, char, int)
0006d7b0 t V_strncmp(char const*, char const*, int)
0006e1f0 t V_strncpy(char*, char const*, int)
0006d590 t V_strnlwr(char*, unsigned int)
0006d410 t _V_strstr(char const*, int, char const*, char const*)
0006d3c0 t _V_wcscmp(char const*, int, wchar_t const*, wchar_t const*)
0006d340 t _V_wcslen(char const*, int, wchar_t const*)
0006e4e0 t V_wcsncat(wchar_t*, wchar_t const*, unsigned int, int)
0006e230 t V_wcsncpy(wchar_t*, wchar_t const*, int)
0006d430 t _V_wcsupr(char const*, int, wchar_t*)
         U operator delete[](void*)@@GLIBCXX_3.4
         U operator delete(void*)@@GLIBCXX_3.4
001a8b40 b guard variable for datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001a8070 b guard variable for datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001a8ab0 b guard variable for datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001a8a10 b guard variable for datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001a8a40 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001a8a70 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001a80a0 b guard variable for datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001a8b10 b guard variable for datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001a8ae0 b guard variable for datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001a89d0 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001a8a00 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001a8a80 b guard variable for datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001a87d0 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001a8910 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001a81f0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001a8220 b guard variable for datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001a82b0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001a8280 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001a8760 b guard variable for datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001a8310 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001a8250 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001a8890 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001a88c0 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001a8160 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001a89a0 b guard variable for datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001a81c0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001a8190 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001a8860 b guard variable for datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001a82e0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001a8130 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001b7d60 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001b7d40 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
001a7e40 b guard variable for GetTmpObjectMatrix(IVP_Real_Object*)::coreShiftMatrix
001aa630 b guard variable for CUtlString::GetEmptyString()::s_emptyString
001a83d0 b guard variable for CPhysicsEnvironment::Simulate(float)::autoMutex__
001af200 b guard variable for IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001aa6a0 b guard variable for hk_Memory::get_instance()::s_memory_instance
001aa680 b guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a8420 b guard variable for CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a8e20 b guard variable for CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a7c20 b g_BreakSet
00162650 r _pi32_inv1
00064140 t ReadVector(char const*, Vector&)
001a8e80 b s_BreakSet
0006d230 t FastToLower(char)
001a8cbc b nullsurface
001b7d74 b s_bShowDiag
001a8e78 b s_nCVarFlag
001a7e20 b vec2_origin
001a7ee0 b vec2_origin
001a7f20 b vec2_origin
001a7f94 b vec2_origin
001a7fd0 b vec2_origin
001a80c4 b vec2_origin
001a8354 b vec2_origin
001a8390 b vec2_origin
001a83e0 b vec2_origin
001a8430 b vec2_origin
001a8470 b vec2_origin
001a8710 b vec2_origin
001a8784 b vec2_origin
001a8814 b vec2_origin
001a88c8 b vec2_origin
001a8934 b vec2_origin
001a8b64 b vec2_origin
001a8c1c b vec2_origin
001a8c50 b vec2_origin
001a8d3c b vec2_origin
001a8d80 b vec2_origin
001a8dec b vec2_origin
001a8e30 b vec2_origin
001a8fc8 b vec2_origin
001a8ff0 b vec2_origin
001a9260 b vec2_origin
001a92c0 b vec2_origin
001aa618 b vec2_origin
001aa640 b vec2_origin
001aa668 b vec2_origin
001ad1c0 b vec2_origin
001aff40 b vec2_origin
001aff88 b vec2_origin
001affe0 b vec2_origin
001b0000 b vec2_origin
001b7d20 b vec2_origin
001a7f00 b vec4_origin
001a7f40 b vec4_origin
001a7fa4 b vec4_origin
001a7ff0 b vec4_origin
001a80d4 b vec4_origin
001a8364 b vec4_origin
001a83b0 b vec4_origin
001a8400 b vec4_origin
001a8450 b vec4_origin
001a8490 b vec4_origin
001a8720 b vec4_origin
001a8794 b vec4_origin
001a8824 b vec4_origin
001a88d8 b vec4_origin
001a8944 b vec4_origin
001a8b74 b vec4_origin
001a8c2c b vec4_origin
001a8c70 b vec4_origin
001a8d4c b vec4_origin
001a8da0 b vec4_origin
001a8dfc b vec4_origin
001aff98 b vec4_origin
0002f4e0 t BuildVertMap(vertmap_t&, Vector const*, int, IVP_Compact_Ledge const*) [clone .constprop.17]
000345d0 t InitBoxVerts(Vector*, Vector**, Vector const&, Vector const&)
000d09f0 t ProcessPoint(IVP_Compact_Poly_Point&, IVP_U_BigVector<IVP_Compact_Poly_Point>*)
001a92b4 b s_bConnected
001a7e30 b vec2_invalid
001a7ef0 b vec2_invalid
001a7f30 b vec2_invalid
001a7f9c b vec2_invalid
001a7fe0 b vec2_invalid
001a80cc b vec2_invalid
001a835c b vec2_invalid
001a83a0 b vec2_invalid
001a83f0 b vec2_invalid
001a8440 b vec2_invalid
001a8480 b vec2_invalid
001a8718 b vec2_invalid
001a878c b vec2_invalid
001a881c b vec2_invalid
001a88d0 b vec2_invalid
001a893c b vec2_invalid
001a8b6c b vec2_invalid
001a8c24 b vec2_invalid
001a8c60 b vec2_invalid
001a8d44 b vec2_invalid
001a8d90 b vec2_invalid
001a8df4 b vec2_invalid
001a8e40 b vec2_invalid
001a8fd0 b vec2_invalid
001a9000 b vec2_invalid
001a9270 b vec2_invalid
001a92d0 b vec2_invalid
001aa620 b vec2_invalid
001aa650 b vec2_invalid
001aa670 b vec2_invalid
001ad1d0 b vec2_invalid
001aff50 b vec2_invalid
001aff90 b vec2_invalid
001afff0 b vec2_invalid
001b0010 b vec2_invalid
001b7d30 b vec2_invalid
001a7f10 b vec4_invalid
001a7f50 b vec4_invalid
001a7fb4 b vec4_invalid
001a8000 b vec4_invalid
001a80e4 b vec4_invalid
001a8374 b vec4_invalid
001a83c0 b vec4_invalid
001a8410 b vec4_invalid
001a8460 b vec4_invalid
001a84a0 b vec4_invalid
001a8730 b vec4_invalid
001a87a4 b vec4_invalid
001a8834 b vec4_invalid
001a88e8 b vec4_invalid
001a8954 b vec4_invalid
001a8b84 b vec4_invalid
001a8c3c b vec4_invalid
001a8c80 b vec4_invalid
001a8d5c b vec4_invalid
001a8db0 b vec4_invalid
001a8e0c b vec4_invalid
001affa8 b vec4_invalid
0005a940 t CM_ClearTrace(CGameTrace*)
001a8bc0 b g_MeshManager
001a7730 d IVP_RAND_SEED
001626b0 r _ps_coscof_p0
001626c0 r _ps_coscof_p1
001626d0 r _ps_coscof_p2
00162620 r _ps_sign_mask
00162700 r _ps_sincof_p0
00162710 r _ps_sincof_p1
00162720 r _ps_sincof_p2
000a4550 t qh_intcompare(void const*, void const*)
001aff34 b s_bMMXEnabled
001a8e74 b s_bRegistered
001aff36 b s_bSSEEnabled
001a8f80 b s_EmptyConVar
001a8dd0 b s_VPhysPtrMap
001b5020 b texgammatable
001b5120 b lineartoscreen
00066ad0 t NoPhysSaveFunc(physsaveparams_t const&, void*)
001a6e00 d s_BackSlashMap
001aff37 b s_bSSE2Enabled
0004d6f0 t AngDragIntegral(float, float, float, float)
00059080 t FlushFrameLocks()
001b6d20 b lineartotexture
00162630 r _ps_cephes_FOPI
000c9850 t qh_compareangle(void const*, void const*)
000c9880 t qh_comparemerge(void const*, void const*)
000c98a0 t qh_comparevisit(void const*, void const*)
001aff35 b s_b3DNowEnabled
001b6120 b texturetolinear
001a7740 d g_print_function
001a8e7c b s_bBuiltBreakSet
001a6df0 d s_nDLLIdentifier
0015e258 r ivp_uqr_mod_table
00066ae0 t NoPhysRestoreFunc(physrestoreparams_t const&, void**)
00162610 r _ps_inv_sign_mask
001a6df4 d s_DefaultAccessor
0002e3e0 t GetTmpObjectMatrix(IVP_Real_Object*)
001a7f60 b g_MainDLLInterface
0004e1e0 t InitObjectTemplate(IVP_Template_Real_Object&, int, objectparams_t*, bool) [clone .constprop.77]
001aa678 b g_CleanupSymbolTable
00162680 r _ps_minus_cephes_DP1
00162690 r _ps_minus_cephes_DP2
001626a0 r _ps_minus_cephes_DP3
000bef30 t qh_compare_facetarea(void const*, void const*)
000380f0 t IsBreakableConstraint(constraint_breakableparams_t const&)
000bef70 t qh_compare_facetmerge(void const*, void const*)
000befa0 t qh_compare_facetvisit(void const*, void const*)
001a43b4 d s_DefaultDebugOverlay
0006e9f0 t StripWhitespaceWorker(int, wchar_t*, bool*, bool)
001a44d8 d g_MaterialIndexDataOps
001aff6c b s_TempMemoryPolyhedron
001b6920 b g_Mathlib_GammaToLinear
001b6520 b g_Mathlib_LinearToGamma
001a8800 b g_PostRestoreObjectList
001a8c14 b s_BuildVirtualMeshMutex
001a7d20 b g_BreakSetIncludingColons
00030430 t ivu_string_print_function(char const*)
00118e10 t ivu_default_print_function(char const*)
001a8340 b g_ConstraintGroupActivateList
001aff58 b s_TempMemoryPolyhedron_Buffer
001affc0 b f3
001afae4 b ivp_surface_manager_ball_global
000b6d80 t localCalcMassCenterAndRotInertia(IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_U_Point*, IVP_U_Point*) [clone .constprop.8]
001a6e78 d s_pConversionArrays_NoEscConversion
001a7fc4 b __g_CreateCPhysicsInterfaceIPhysics_reg
001affd0 b f05
001a6e20 d s_pConversionArrays_StringCharConversion
000302c0 t __CreateCPhysicsInterfaceIPhysics_interface()
001a80f4 b __g_CreateCPhysicsCollisionIPhysicsCollision_reg
000342d0 t __CreateCPhysicsCollisionIPhysicsCollision_interface()
001a8740 b __g_CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_reg
00048b60 t __CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_interface()
001626f0 r _ps_1
001a8cf4 b g_xneg
001a8d18 b g_xpos
001a8d00 b g_yneg
001a8d24 b g_ypos
001a8d0c b g_zneg
001a8d30 b g_zpos
00149ecd r axisMap
00144a30 t Descend(char*, unsigned int, bool, unsigned int)
00162640 r _pi32_1
00162670 r _pi32_2
00162660 r _pi32_4
001626e0 r _ps_0p5
000690d0 t ConCommand::CanAutoComplete()
0006ab20 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
000696d0 t ConCommand::Dispatch(CCommand const&)
0006a030 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
00069fa0 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
00069f10 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0006a030 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
00069fa0 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
00069f10 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
00069230 t ConCommand::~ConCommand()
000690b0 t ConCommand::~ConCommand()
000690b0 t ConCommand::~ConCommand()
0005c300 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
0005c300 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
000726f0 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
00072080 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
000736a0 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
00070e40 t CUtlBuffer::GetOverflow(int)
00072a40 t CUtlBuffer::IsBigEndian()
00073b90 t CUtlBuffer::PutOverflow(int)
00073620 t CUtlBuffer::AssumeMemory(void*, int, int, int)
00071410 t CUtlBuffer::CheckPeekGet(int, int)
00072a10 t CUtlBuffer::SetBigEndian(bool)
00072590 t CUtlBuffer::EatCPPComment()
00071ad0 t CUtlBuffer::EatWhiteSpace()
000712c0 t CUtlBuffer::OnGetOverflow(int)
00071290 t CUtlBuffer::OnPutOverflow(int)
00071140 t CUtlBuffer::SetBufferType(bool, bool)
00071190 t CUtlBuffer::EnsureCapacity(int)
00071640 t CUtlBuffer::PeekLineLength()
000717b0 t CUtlBuffer::PeekWhiteSpace(int)
00071750 t CUtlBuffer::PeekStringMatch(int, char const*, int)
00072380 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
00071820 t CUtlBuffer::PeekStringLength()
00073100 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
00071260 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
00071c60 t CUtlBuffer::GetStringInternal(char*, unsigned int)
000735a0 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
00072a50 t CUtlBuffer::AddNullTermination()
00072410 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
00072de0 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
000729e0 t CUtlBuffer::ActivateByteSwapping(bool)
000715a0 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
00072280 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
00071960 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
00071b30 t CUtlBuffer::Get(void*, int)
00072b20 t CUtlBuffer::Put(void const*, int)
00073370 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
00073310 t CUtlBuffer::Swap(CUtlBuffer&)
00072050 t CUtlBuffer::Scanf(char const*, ...)
00072db0 t CUtlBuffer::Printf(char const*, ...)
00071b80 t CUtlBuffer::GetLine(char*, int)
000716f0 t CUtlBuffer::GetUpTo(void*, int)
00071550 t CUtlBuffer::PeekGet(int, int)
000712f0 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
00072ac0 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
00071d60 t CUtlBuffer::VaScanf(char const*, char*)
00071380 t CUtlBuffer::CheckGet(int)
00072970 t CUtlBuffer::CheckPut(int)
00071440 t CUtlBuffer::GetToken(char const*)
00072d60 t CUtlBuffer::VaPrintf(char const*, char*)
00072ba0 t CUtlBuffer::PutString(char const*)
00073a70 t CUtlBuffer::CUtlBuffer(int, int, int)
000734f0 t CUtlBuffer::CUtlBuffer(void const*, int, int)
00073a70 t CUtlBuffer::CUtlBuffer(int, int, int)
000734f0 t CUtlBuffer::CUtlBuffer(void const*, int, int)
0006ad40 t CUtlMemory<CUtlString, int>::Grow(int)
0004aab0 t CUtlMemory<CUtlSymbol, int>::Grow(int)
0004aa70 t CUtlMemory<CUtlSymbol, int>::Purge()
00037ea0 t CUtlMemory<bboxcache_t, int>::Grow(int)
00037d90 t CUtlMemory<bboxcache_t, int>::Purge()
00076910 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
000765f0 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Purge()
000457c0 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Grow(int)
000426f0 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Purge()
00067330 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
000672c0 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
00076750 t CUtlMemory<CUtlHashtableEntry<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t>, int>::Purge()
00078100 t CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Grow(int)
00076790 t CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short>::Purge()
0006c890 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
00047450 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
000309e0 t CUtlMemory<CPhysicsCollisionSet, int>::Grow(int)
00030790 t CUtlMemory<CPhysicsCollisionSet, int>::Purge()
00050670 t CUtlMemory<postrestore_objectlist_t, int>::Grow(int)
00050600 t CUtlMemory<postrestore_objectlist_t, int>::Purge()
0004abf0 t CUtlMemory<CSurface, int>::Grow(int)
0004aa30 t CUtlMemory<CSurface, int>::Purge()
00066a30 t CUtlMemory<char, int>::Grow(int)
00073c90 t CUtlMemory<unsigned char, int>::Grow(int)
00073c50 t CUtlMemory<unsigned char, int>::Purge()
000301c0 t CUtlMemory<int, int>::Grow(int)
00030100 t CUtlMemory<int, int>::Purge()
0006c5b0 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
000472d0 t CUtlMemory<CUtlMultiList<void*, unsigned short>::ListElem_t, int>::Grow(int)
00046780 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Grow(int)
000428c0 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Purge()
0006c750 t CUtlMemory<memhandle_t__*, int>::Grow(int)
00042d10 t CUtlMemory<CPhysicsObject*, int>::Grow(int)
00042610 t CUtlMemory<CPhysicsObject*, int>::Purge()
00046530 t CUtlMemory<IPhysicsObject*, int>::Grow(int)
000421a0 t CUtlMemory<IPhysicsObject*, int>::Purge()
00048a20 t CUtlMemory<IVP_Real_Object*, int>::Grow(int)
000489e0 t CUtlMemory<IVP_Real_Object*, int>::Purge()
00042bd0 t CUtlMemory<IDeleteQueueItem*, int>::Grow(int)
00042a90 t CUtlMemory<IDeleteQueueItem*, int>::Purge()
000308a0 t CUtlMemory<IPhysicsEnvironment*, int>::Grow(int)
000307d0 t CUtlMemory<IPhysicsEnvironment*, int>::Purge()
0005a4d0 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Grow(int)
0005a3a0 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Purge()
0003d7c0 t CUtlMemory<CPhysicsConstraintGroup*, int>::Grow(int)
0003d750 t CUtlMemory<CPhysicsConstraintGroup*, int>::Purge()
00046ab0 t CUtlMemory<CPhysicsFluidController*, int>::Grow(int)
00042a10 t CUtlMemory<CPhysicsFluidController*, int>::Purge()
00046bf0 t CUtlMemory<IPhysicsPlayerController*, int>::Grow(int)
00042a50 t CUtlMemory<IPhysicsPlayerController*, int>::Purge()
0004bd50 t CUtlMemory<IVP_Core*, int>::Grow(int)
0004bd10 t CUtlMemory<IVP_Core*, int>::Purge()
00070bf0 t CUtlMemory<char*, int>::Grow(int)
00037cf0 t CUtlMemory<char*, int>::Purge()
00063fb0 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Grow(int)
00063f70 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Purge()
000767d0 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
00076680 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Purge()
0006c470 t CUtlMemory<void*, int>::Grow(int)
0006c430 t CUtlMemory<void*, int>::Purge()
00076ad0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00076fc0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00077480 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00077e30 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
000769e0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
000764f0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
00042ef0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
000433e0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00045980 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
000438a0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
00042730 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Purge()
00046340 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Insert(CPhysicsListenerCollision::corepair_t const&)
00044aa0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00045890 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NewNode()
000674f0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00067a00 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
00067f10 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00068910 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<void*, void*, unsigned short>::Node_t const&)
00067400 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
000671d0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
000744e0 t CUtlString::FixSlashes(char)
00073d30 t CUtlString::AllocMemory(unsigned int)
00073db0 t CUtlString::GetForModify()
000751c0 t CUtlString::GetEmptyString()
00074480 t CUtlString::StripTrailingSlash()
00073f10 t CUtlString::Set(char const*)
000747b0 t CUtlString::Trim(char)
000747f0 t CUtlString::Trim(char const*)
00073e50 t CUtlString::Clear()
00073e30 t CUtlString::Purge()
00075130 t CUtlString::Append(char const*)
00075140 t CUtlString::Append(char const*, int)
00074450 t CUtlString::Format(char const*, ...)
00074400 t CUtlString::FormatV(char const*, char*)
00073ff0 t CUtlString::ToLower()
00074010 t CUtlString::ToUpper()
00074fd0 t CUtlString::PathJoin(char const*, char const*)
00074510 t CUtlString::TrimLeft(char)
000745a0 t CUtlString::TrimLeft(char const*)
00073e90 t CUtlString::SetDirect(char const*, int)
00073e60 t CUtlString::SetLength(int)
00074680 t CUtlString::TrimRight(char)
00074700 t CUtlString::TrimRight(char const*)
00074080 t CUtlString::operator=(char const*)
00074030 t CUtlString::operator=(CUtlString const&)
00075230 t CUtlString::~CUtlString()
00075230 t CUtlString::~CUtlString()
000741f0 t CUtlString::operator+=(char)
000742a0 t CUtlString::operator+=(double)
00074250 t CUtlString::operator+=(int)
00074180 t CUtlString::operator+=(char const*)
00074110 t CUtlString::operator+=(CUtlString const&)
00075b90 t CUtlSymbol::Initialize()
001aa660 b CUtlSymbol::s_pSymbolTable
000753b0 t CUtlSymbol::DisableStaticSymbolTable()
001a6e80 d CUtlSymbol::s_bAllowStaticSymbolTable
00075cb0 t CUtlSymbol::CurrTable()
00075f50 t CUtlSymbol::CUtlSymbol(char const*)
00075f50 t CUtlSymbol::CUtlSymbol(char const*)
0006adf0 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
0004ab60 t CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::InsertBefore(int, CUtlSymbol const&)
00030a90 t CUtlVector<CPhysicsCollisionSet, CUtlMemory<CPhysicsCollisionSet, int> >::InsertBefore(int)
00050720 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::InsertBefore(int, postrestore_objectlist_t const&)
00050640 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
00050640 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
0004aca0 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::InsertBefore(int, CSurface const&)
00143900 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::SetCount(int)
001438d0 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
001438d0 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
00030270 t CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
0002f490 t CUtlVector<int, CUtlMemory<int, int> >::EnsureCount(int) [clone .part.16]
00030170 t CUtlVector<int, CUtlMemory<int, int> >::ShiftElementsRight(int, int)
00030140 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
00030140 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
00046830 t CUtlVector<CCollisionSolver::realobjectpair_t, CUtlMemory<CCollisionSolver::realobjectpair_t, int> >::InsertBefore(int, CCollisionSolver::realobjectpair_t const&)
0006c800 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::InsertBefore(int, memhandle_t__* const&)
00042dc0 t CUtlVector<CPhysicsObject*, CUtlMemory<CPhysicsObject*, int> >::InsertBefore(int, CPhysicsObject* const&)
00041f50 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::FastRemove(int)
000465e0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::InsertBefore(int, IPhysicsObject* const&)
000421e0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
000421e0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
00048ad0 t CUtlVector<IVP_Real_Object*, CUtlMemory<IVP_Real_Object*, int> >::InsertBefore(int, IVP_Real_Object* const&)
00042c80 t CUtlVector<IDeleteQueueItem*, CUtlMemory<IDeleteQueueItem*, int> >::InsertBefore(int, IDeleteQueueItem* const&)
00030950 t CUtlVector<IPhysicsEnvironment*, CUtlMemory<IPhysicsEnvironment*, int> >::InsertBefore(int, IPhysicsEnvironment* const&)
0005a580 t CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> >::InsertBefore(int, CPhysCollideVirtualMesh* const&)
0003d870 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::InsertBefore(int, CPhysicsConstraintGroup* const&)
0003d790 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
0003d790 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
00046b60 t CUtlVector<CPhysicsFluidController*, CUtlMemory<CPhysicsFluidController*, int> >::InsertBefore(int, CPhysicsFluidController* const&)
00046ca0 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::InsertBefore(int, IPhysicsPlayerController* const&)
0004be00 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::InsertBefore(int, IVP_Core* const&)
0004bc20 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::Remove(int)
00070ca0 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
00064060 t CUtlVector<IVP_Compact_Ledgetree_Node const*, CUtlMemoryFixedGrowable<IVP_Compact_Ledgetree_Node const*, 64u, int> >::GrowVector(int)
00076880 t CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
0006c520 t CUtlVector<void*, CUtlMemory<void*, int> >::InsertBefore(int, void* const&)
00061ae0 t CVisitHash::CVisitHash()
00061ae0 t CVisitHash::CVisitHash()
         U CVProfNode::EnterScope()
         U CVProfNode::GetSubNode(char const*, int, char const*, int)
         U CVProfNode::ExitScope()
00146af0 t hk_Console::get_instance()
001a7bc0 d hk_Console::m_default_console_buffer
00146a80 t hk_Console::exit(int)
00146aa0 t hk_Console::flush()
00146ac0 t hk_Console::printf(char const*, ...)
001b7d80 b hk_Console::m_console
0007d450 t hk_Link_EF::get_controller_name()
0007d440 t hk_Link_EF::get_controller_priority()
0007d460 t hk_Link_EF::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0007d480 t hk_Link_EF::anchor_will_be_deleted_event(IVP_Anchor*)
0007d430 t hk_Link_EF::get_associated_controlled_cores()
0007d4a0 t hk_Link_EF::core_is_going_to_be_deleted_event(IVP_Core*)
0007d530 t hk_Link_EF::~hk_Link_EF()
0007d4d0 t hk_Link_EF::~hk_Link_EF()
0007d4d0 t hk_Link_EF::~hk_Link_EF()
00092a30 t hk_Matrix3::set_diagonal(float, float, float)
00092e70 t hk_Matrix3::set_mul3_inv(hk_Rotation const&, hk_Matrix3 const&)
00092dd0 t hk_Matrix3::set_mul3_inv2(hk_Matrix3 const&, hk_Rotation const&)
00092c70 t hk_Matrix3::set_cross_skew(hk_Vector3 const&, hk_Matrix3 const&)
00092970 t hk_Matrix3::set_identity_rotation()
00093190 t hk_Matrix3::set_rotated_diagonal_matrix(hk_Rotation const&, hk_Vector3 const&)
00092a60 t hk_Matrix3::invert(float)
00092fd0 t hk_Matrix3::rotate(int, float)
00092920 t hk_Matrix3::set_cols(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00092d10 t hk_Matrix3::set_mul3(hk_Matrix3 const&, hk_Matrix3 const&)
000928b0 t hk_Matrix3::set_rows(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00092a00 t hk_Matrix3::set_zero()
00092c40 t hk_Matrix3::transpose()
00092f80 t hk_Matrix3::operator-=(hk_Matrix3 const&)
00092f30 t hk_Matrix3::operator+=(hk_Matrix3 const&)
00093c80 t hk_Vector3::set_rotated_dir(hk_Rotation const&, hk_Vector3 const&)
00093d10 t hk_Vector3::set_rotated_inv_dir(hk_Rotation const&, hk_Vector3 const&)
00093b40 t hk_Vector3::set_transformed_pos(hk_Transform const&, hk_Vector3 const&)
00093be0 t hk_Vector3::set_transformed_inv_pos(hk_Transform const&, hk_Vector3 const&)
000d5df0 t IVP_Anchor::init_anchor(IVP_Actuator*, IVP_Template_Anchor*)
000d7d90 t IVP_Anchor::get_next_anchor()
000d7da0 t IVP_Anchor::get_prev_anchor()
000d7db0 t IVP_Anchor::anchor_get_real_object()
000d74d0 t IVP_Anchor::object_is_going_to_be_deleted_event(IVP_Real_Object*)
000d7d80 t IVP_Anchor::IVP_Anchor()
000d7d80 t IVP_Anchor::IVP_Anchor()
000d6660 t IVP_Anchor::~IVP_Anchor()
000d6660 t IVP_Anchor::~IVP_Anchor()
001013c0 t IVP_Object::to_cluster()
00100060 t IVP_Object::init(IVP_Environment*)
001013e0 t IVP_Object::to_ball()
001013b0 t IVP_Object::to_poly()
001013d0 t IVP_Object::to_real()
00101370 t IVP_Object::set_type(IVP_OBJECT_TYPE)
000ffe30 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
00100020 t IVP_Object::IVP_Object(IVP_Environment*)
000ffe30 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
00100020 t IVP_Object::IVP_Object(IVP_Environment*)
000febf0 t IVP_Object::~IVP_Object()
000feb20 t IVP_Object::~IVP_Object()
000feb20 t IVP_Object::~IVP_Object()
001177e0 t IVP_U_Quat::get_angles(IVP_U_Float_Point*)
00118800 t IVP_U_Quat::invert_quat()
00118450 t IVP_U_Quat::normize_quat()
00118af0 t IVP_U_Quat::set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
00117e70 t IVP_U_Quat::set_quaternion(double const (*) [4])
001184e0 t IVP_U_Quat::set_quaternion(IVP_U_Matrix3 const*)
00118d00 t IVP_U_Quat::set_invert_mult(IVP_U_Quat const*, IVP_U_Quat const*)
001186e0 t IVP_U_Quat::fast_normize_quat()
00118bf0 t IVP_U_Quat::set_div_unit_quat(IVP_U_Quat const*, IVP_U_Quat const*)
00117880 t IVP_U_Quat::set_fast_multiple(IVP_U_Point const*, double)
001153f0 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Float_Quat const*)
001152f0 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
00115500 t IVP_U_Quat::normize_correct_step(int)
00118890 t IVP_U_Quat::set_invert_unit_quat(IVP_U_Quat const*)
00118370 t IVP_U_Quat::set_interpolate_linear(IVP_U_Quat const*, IVP_U_Quat const*, double)
00117950 t IVP_U_Quat::set_very_fast_multiple(IVP_U_Float_Point const*, double)
00118060 t IVP_U_Quat::set_interpolate_smoothly(IVP_U_Quat const*, IVP_U_Quat const*, double)
001188e0 t IVP_U_Quat::set_from_rotation_vectors(double, double, double, double, double, double)
00117a30 t IVP_U_Quat::set_fast_multiple_with_clip(IVP_U_Float_Point const*, double)
00117b60 t IVP_U_Quat::set(double, double, double)
00115270 t IVP_U_Quat::init()
00114920 t IVP_U_Quat::byte_swap()
00114910 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
001148e0 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
001148d0 t IVP_U_Quat::IVP_U_Quat()
00114910 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
001148e0 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
001148d0 t IVP_U_Quat::IVP_U_Quat()
00140bf0 t CPolyhedron::Center()
001438b0 t CPolyhedron::~CPolyhedron()
00143830 t CPolyhedron::~CPolyhedron()
00143830 t CPolyhedron::~CPolyhedron()
00063e40 t CVProfScope::~CVProfScope()
00063e40 t CVProfScope::~CVProfScope()
00143e30 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
000938d0 t hk_Rotation::set_axis_angle(hk_Vector3 const&, float)
000937d0 t hk_Rotation::set(hk_Quaternion const&)
00100190 t IVP_Cluster::add_object(IVP_Object*)
001001c0 t IVP_Cluster::remove_object(IVP_Object*)
00101400 t IVP_Cluster::get_next_object_in_cluster(IVP_Object*)
001013f0 t IVP_Cluster::get_first_object_of_cluster()
00100150 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
00100110 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
00100150 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
00100110 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
000febd0 t IVP_Cluster::~IVP_Cluster()
000feb80 t IVP_Cluster::~IVP_Cluster()
000feb80 t IVP_Cluster::~IVP_Cluster()
0011edf0 t IVP_Mindist::init_mindist(IVP_Real_Object*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_Compact_Edge const*)
0011ff90 t IVP_Mindist::is_recursive()
00120230 t IVP_Mindist::get_coll_dist()
001249a0 t IVP_Mindist::recalc_mindist()
00120260 t IVP_Mindist::get_environment()
001247f0 t IVP_Mindist::mindist_rescue_push()
0011e210 t IVP_Mindist::simulate_time_event(IVP_Environment*)
0011d5f0 t IVP_Mindist::hull_manager_is_reset(float, float)
00124af0 t IVP_Mindist::recalc_invalid_mindist()
0011d980 t IVP_Mindist::exact_mindist_went_invalid(IVP_Mindist_Manager*)
0011dcd0 t IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)
0011d620 t IVP_Mindist::create_cp_in_advance_pretension(IVP_Real_Object*, float)
000fa0a0 t IVP_Mindist::try_to_generate_managed_friction(IVP_Friction_System**, IVP_BOOL*, IVP_Simulation_Unit*, IVP_BOOL)
0011e910 t IVP_Mindist::mindist_hull_limit_exceeded_event(float)
0011ca00 t IVP_Mindist::print(char const*)
000fbb40 t IVP_Mindist::do_impact()
0011c9b0 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
0011c9b0 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
0011e810 t IVP_Mindist::~IVP_Mindist()
0011e6a0 t IVP_Mindist::~IVP_Mindist()
0011e6a0 t IVP_Mindist::~IVP_Mindist()
0011a9e0 t IVP_OV_Node::IVP_OV_Node()
0011a9e0 t IVP_OV_Node::IVP_OV_Node()
0011aa20 t IVP_OV_Node::~IVP_OV_Node()
0011aa20 t IVP_OV_Node::~IVP_OV_Node()
00103c50 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00103c50 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00103d20 t IVP_Polygon::~IVP_Polygon()
00103d00 t IVP_Polygon::~IVP_Polygon()
00103d00 t IVP_Polygon::~IVP_Polygon()
00120060 t IVP_Synapse::get_object()
001200c0 t IVP_Synapse::init_synapse_real(IVP_Mindist_Base*, IVP_Real_Object*)
001200a0 t IVP_Synapse::set_synapse_mindist(IVP_Mindist_Base*)
0011c6f0 t IVP_Synapse::hull_manager_is_reset(float, float)
0011edd0 t IVP_Synapse::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
0011c720 t IVP_Synapse::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
0011fee0 t IVP_Synapse::get_type()
0011ffd0 t IVP_Synapse::~IVP_Synapse()
0011fef0 t IVP_Synapse::~IVP_Synapse()
0011fef0 t IVP_Synapse::~IVP_Synapse()
00110510 t IVP_U_Hesse::calc_hesse(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001105e0 t IVP_U_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001104c0 t IVP_U_Hesse::mult_hesse(double)
00110480 t IVP_U_Hesse::calc_hesse_val(IVP_U_Point const*)
001106d0 t IVP_U_Hesse::normize()
00114640 t IVP_U_Hesse::byte_swap()
0010e420 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
0010e4b0 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
0010e420 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
0010e4b0 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
0010f350 t IVP_U_Point::fast_normize()
00111620 t IVP_U_Point::set_crossing(IVP_U_Hesse*, IVP_U_Hesse*, IVP_U_Hesse*)
0010f1b0 t IVP_U_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
0010f140 t IVP_U_Point::set_interpolate(IVP_U_Point const*, IVP_U_Point const*, double)
00114220 t IVP_U_Point::calc_an_orthogonal(IVP_U_Point const*)
0010f950 t IVP_U_Point::calc_cross_product(IVP_U_Point const*, IVP_U_Point const*)
0010f800 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Float_Point const*)
0010f780 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Point const*)
0010f3e0 t IVP_U_Point::real_length_plus_normize()
0010fa80 t IVP_U_Point::solve_quadratic_equation_fast(IVP_U_Point const*)
0010fb70 t IVP_U_Point::solve_quadratic_equation_accurate(IVP_U_Point const*)
0010fdd0 t IVP_U_Point::print(char const*)
0010ff30 t IVP_U_Point::rotate(IVP_COORDINATE_INDEX, float)
0010f6a0 t IVP_U_Point::normize()
0010ff00 t IVP_U_Point::line_max(IVP_U_Point const*)
0010fed0 t IVP_U_Point::line_min(IVP_U_Point const*)
001144a0 t IVP_U_Point::byte_swap()
00114470 t IVP_U_Point::IVP_U_Point(double, double, double)
00115ce0 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
00114460 t IVP_U_Point::IVP_U_Point()
00114470 t IVP_U_Point::IVP_U_Point(double, double, double)
00115ce0 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
00114460 t IVP_U_Point::IVP_U_Point()
0005a0a0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::GetRealSize(void*)
0005a2f0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::DestroyResourceStorage(void*)
0005a160 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Lock()
0005a260 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Unlock()
0005a100 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::TryLock()
0005a2a0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005a0b0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
0005a0b0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
000411d0 t CDeleteProxy<IPhysicsConstraint>::Delete()
00041200 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
000411c0 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
000411c0 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
0006ac80 t CEmptyConVar::SetValue(float)
0006aca0 t CEmptyConVar::SetValue(int)
0006ac60 t CEmptyConVar::SetValue(char const*)
0006ad10 t CEmptyConVar::~CEmptyConVar()
0006acf0 t CEmptyConVar::~CEmptyConVar()
0006acf0 t CEmptyConVar::~CEmptyConVar()
00037aa0 t CPhysCollide::SetOrthographicAreas(Vector const&)
00036fe0 t CPhysCollide::UnserializeFromBuffer(char const*, unsigned int, int, bool)
00037a90 t CPhysCollide::ComputeOrthographicAreas(float)
00037b20 t CPhysCollide::~CPhysCollide()
00037b10 t CPhysCollide::~CPhysCollide()
00037b10 t CPhysCollide::~CPhysCollide()
         U CThreadEvent::Set()
         U CThreadEvent::CThreadEvent(bool)
0005fc50 t CTraceSolver::SweepSingleConvex()
0005f850 t CTraceSolver::SolveMeshIntersection(simplex_t&)
0005fc10 t CTraceSolver::SolveMeshIntersection2D(simplex_t&)
00063eb0 t CTraceSolver::DoSweep()
00078790 t (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&)
000787f0 t int (anonymous namespace)::Q_UnicodeConvertT<wchar_t, wchar_t, true, (anonymous namespace)::Q_UTF32ToUChar32(wchar_t const*, wchar_t&, bool&), (anonymous namespace)::Q_UChar32ToUTF32Len(wchar_t), (anonymous namespace)::Q_UChar32ToUTF32(wchar_t, wchar_t*)>(wchar_t const*, int, wchar_t*, int, EStringConvertErrorPolicy) [clone .isra.1]
00093950 t hk_Transform::set_transform(hk_Quaternion const&, hk_Vector3 const&)
00093a80 t hk_Transform::set_interpolate(hk_QTransform&, hk_QTransform&, float)
00093a00 t hk_Transform::set_identity_transform()
00093990 t hk_Transform::set_cols4(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00093910 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
00093910 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
001a9010 b InterfaceReg::s_pInterfaceRegs
0006cca0 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
0006cca0 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
00037b40 t IPhysCollide::~IPhysCollide()
00037a40 t IPhysCollide::~IPhysCollide()
00037a40 t IPhysCollide::~IPhysCollide()
000d7cf0 t IVP_Actuator::get_controller_name()
000d7ce0 t IVP_Actuator::get_controller_priority()
000d4ee0 t IVP_Actuator::anchor_will_be_deleted_event(IVP_Anchor*)
000d7cd0 t IVP_Actuator::get_associated_controlled_cores()
000d4f00 t IVP_Actuator::core_is_going_to_be_deleted_event(IVP_Core*)
000d5ef0 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000d5ef0 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
000d54e0 t IVP_Actuator::~IVP_Actuator()
000d5480 t IVP_Actuator::~IVP_Actuator()
000d5480 t IVP_Actuator::~IVP_Actuator()
000d2c40 t IVP_KK_Input::calc_quad_distance_edge_edge()
000d1c40 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000d1c40 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0010ace0 t IVP_Material::IVP_Material()
0010ace0 t IVP_Material::IVP_Material()
0010ab20 t IVP_Material::~IVP_Material()
0010a990 t IVP_Material::~IVP_Material()
0010a990 t IVP_Material::~IVP_Material()
000b2120 t IVP_Triangle::calc_hesse()
000b2160 t IVP_Triangle::calc_areasize()
000b21c0 t IVP_Triangle::print(char const*)
000b46b0 t IVP_Triangle::IVP_Triangle()
000b46b0 t IVP_Triangle::IVP_Triangle()
000b1ec0 t IVP_Triangle::~IVP_Triangle()
000b1eb0 t IVP_Triangle::~IVP_Triangle()
000b1eb0 t IVP_Triangle::~IVP_Triangle()
000b21d0 t IVP_Tri_Edge::other_side()
000b2290 t IVP_Tri_Edge::check_concavity(IVP_Tri_Edge*)
000b2270 t IVP_Tri_Edge::p()
000b7160 t IVP_Tri_Edge::search_nearest_edge_to(IVP_U_Point*, double*)
000b2200 t IVP_Tri_Edge::print(char const*)
00111570 t IVP_U_Matrix::init_rows4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00114820 t IVP_U_Matrix::set_matrix(IVP_U_Matrix const*)
00110aa0 t IVP_U_Matrix::interpolate(IVP_U_Matrix const*, IVP_U_Matrix const*, double)
00110b20 t IVP_U_Matrix::real_invert(double)
00111100 t IVP_U_Matrix::real_invert(IVP_U_Matrix const*, double)
00114800 t IVP_U_Matrix::get_position()
00112540 t IVP_U_Matrix::init_columns4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001132b0 t IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
00113540 t IVP_U_Matrix::set_transpose(IVP_U_Matrix const*)
00113de0 t IVP_U_Matrix::write_to_file(_IO_FILE*, char const*)
00113fd0 t IVP_U_Matrix::read_from_file(_IO_FILE*)
001141b0 t IVP_U_Matrix::quad_distance_to(IVP_U_Matrix const*)
001125f0 t IVP_U_Matrix::init_rot_multiple(IVP_U_Point const*, double)
00111000 t IVP_U_Matrix::init()
00113f10 t IVP_U_Matrix::print(char const*)
00111140 t IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
00113d40 t IVP_U_Matrix::shift_os(IVP_U_Point const*)
00113d00 t IVP_U_Matrix::shift_ws(IVP_U_Point const*)
00114850 t IVP_U_Matrix::byte_swap()
001133a0 t IVP_U_Matrix::transpose()
001168b0 t IVP_U_Memory::neuer_sp_block(unsigned int)
00116b00 t IVP_U_Memory::get_mem_transaction(unsigned int)
00116a90 t IVP_U_Memory::align_to_next_adress(void*)
00116840 t IVP_U_Memory::free_mem_transaction()
00116aa0 t IVP_U_Memory::end_memory_transaction()
00116a80 t IVP_U_Memory::start_memory_transaction()
00116910 t IVP_U_Memory::init_mem_transaction_usage(char*, int)
00116ad0 t IVP_U_Memory::get_mem(unsigned int)
00116a20 t IVP_U_Memory::free_mem()
00116980 t IVP_U_Memory::get_memc(unsigned int)
00116a00 t IVP_U_Memory::init_mem()
001169e0 t IVP_U_Memory::IVP_U_Memory()
001169e0 t IVP_U_Memory::IVP_U_Memory()
00116a70 t IVP_U_Memory::~IVP_U_Memory()
00116a70 t IVP_U_Memory::~IVP_U_Memory()
00097f80 t IVP_U_Vector<IVV_Sphere>::clear()
000942d0 t IVP_U_Vector<IVP_U_Hesse>::clear()
00037cb0 t IVP_U_Vector<IVP_U_Point>::clear()
0009a090 t IVP_U_Vector<IVP_Triangle>::clear()
000e7890 t IVP_U_Vector<IVP_Controller>::~IVP_U_Vector()
000e7890 t IVP_U_Vector<IVP_Controller>::~IVP_U_Vector()
000ea8d0 t IVP_U_Vector<IVP_Listener_PSI>::~IVP_U_Vector()
000ea8d0 t IVP_U_Vector<IVP_Listener_PSI>::~IVP_U_Vector()
00097fc0 t IVP_U_Vector<IVP_Compact_Ledge>::clear()
000ea950 t IVP_U_Vector<IVP_Listener_Object>::~IVP_U_Vector()
000ea950 t IVP_U_Vector<IVP_Listener_Object>::~IVP_U_Vector()
000e38c0 t IVP_U_Vector<IVP_Listener_Phantom>::~IVP_U_Vector()
000e38c0 t IVP_U_Vector<IVP_Listener_Phantom>::~IVP_U_Vector()
000ea850 t IVP_U_Vector<IVP_Hull_Manager_Base>::~IVP_U_Vector()
000ea850 t IVP_U_Vector<IVP_Hull_Manager_Base>::~IVP_U_Vector()
000ea890 t IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
000ea890 t IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
000ea910 t IVP_U_Vector<IVP_Listener_Constraint>::~IVP_U_Vector()
000ea910 t IVP_U_Vector<IVP_Listener_Constraint>::~IVP_U_Vector()
000eaa10 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Real_Object> >::~IVP_U_Vector()
000eaa10 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Real_Object> >::~IVP_U_Vector()
000e3900 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Mindist_Base> >::~IVP_U_Vector()
000e3900 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Mindist_Base> >::~IVP_U_Vector()
000ea9d0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Core> >::~IVP_U_Vector()
000ea9d0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Core> >::~IVP_U_Vector()
0010e240 t IVP_U_Vector<IVP_U_Active_Int_Delayed>::clear()
000dc6d0 t IVP_U_Vector<IVP_Constraint_Car_Object>::clear()
0010e200 t IVP_U_Vector<IVP_U_Active_Float_Delayed>::clear()
000ea990 t IVP_U_Vector<IVP_Collision_Delegator_Root>::clear()
000d7e30 t IVP_U_Vector<IVP_Listener_Check_Dist_Event>::~IVP_U_Vector()
000d7e30 t IVP_U_Vector<IVP_Listener_Check_Dist_Event>::~IVP_U_Vector()
00103c10 t IVP_U_Vector<IVP_Core>::clear()
000ea810 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
000ea810 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
00058d90 t CMeshInstance::EstimatedSize(virtualmeshlist_t const&)
00058fd0 t CMeshInstance::CreateResource(virtualmeshlist_t const&)
00058df0 t CMeshInstance::ComputeRootLedgeSize(unsigned char const*)
00058e30 t CMeshInstance::Init(virtualmeshlist_t const&)
00058d60 t CMeshInstance::~CMeshInstance()
00058d60 t CMeshInstance::~CMeshInstance()
00063770 t CPhysicsTrace::SweepBoxIVP(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00063990 t CPhysicsTrace::SweepBoxIVP(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00061760 t CPhysicsTrace::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
00062180 t CPhysicsTrace::GetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
00063240 t CPhysicsTrace::SweepIVP(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00061d60 t CPhysicsTrace::GetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00061ac0 t CPhysicsTrace::CPhysicsTrace()
00061ac0 t CPhysicsTrace::CPhysicsTrace()
00061ad0 t CPhysicsTrace::~CPhysicsTrace()
00061ad0 t CPhysicsTrace::~CPhysicsTrace()
000373c0 t CPhysPolysoup::CPhysPolysoup()
000373c0 t CPhysPolysoup::CPhysPolysoup()
00041320 t CSleepObjects::event_object_frozen(IVP_Event_Object*)
00040a40 t CSleepObjects::event_object_created(IVP_Event_Object*)
000418f0 t CSleepObjects::event_object_deleted(IVP_Event_Object*)
00042e50 t CSleepObjects::event_object_revived(IVP_Event_Object*)
00042650 t CSleepObjects::~CSleepObjects()
000426a0 t CSleepObjects::~CSleepObjects()
000426a0 t CSleepObjects::~CSleepObjects()
         U CThreadRWLock::UnlockWrite()
         U CThreadRWLock::WaitForRead()
         U CThreadRWLock::LockForWrite()
000784a0 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoInsertUnconstructed(unsigned int, bool)
00078340 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::BumpEntry(unsigned int)
000785d0 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoRealloc(int)
00076630 t CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::RemoveAll()
0006cb80 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CreateList()
0006c250 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
0006c660 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
0006c160 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Unlink(unsigned short, unsigned short)
0006c340 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
0006bf60 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
0006bf60 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
0006c000 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
0006c000 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
00047690 t CUtlMultiList<void*, unsigned short>::CreateList()
00042ad0 t CUtlMultiList<void*, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
00047380 t CUtlMultiList<void*, unsigned short>::Alloc()
00042590 t CUtlMultiList<void*, unsigned short>::Remove(unsigned short, unsigned short)
000424b0 t CUtlMultiList<void*, unsigned short>::Unlink(unsigned short, unsigned short)
00041f80 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
00041f80 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
000422a0 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
000422a0 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
000412c0 t CVoidPairHash::~CVoidPairHash()
000412a0 t CVoidPairHash::~CVoidPairHash()
000412a0 t CVoidPairHash::~CVoidPairHash()
000909c0 t hk_Array_Base::grow_mem(int)
00090a80 t hk_Array_Base::grow_mem(int, int)
00090970 t hk_Array_Base::alloc_mem(int, int)
0007fb20 t hk_Constraint::get_constraint_dof()
0007fb10 t hk_Constraint::get_constraint_type()
0007faa0 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
0007faa0 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
0007fa80 t hk_Constraint::~hk_Constraint()
0007fa40 t hk_Constraint::~hk_Constraint()
0007fa40 t hk_Constraint::~hk_Constraint()
00093440 t hk_Quaternion::set_axis_angle(hk_Vector3 const&, float)
00093240 t hk_Quaternion::set(hk_Rotation const&)
000934b0 t hk_Quaternion::set_slerp(hk_Quaternion const&, hk_Quaternion const&, float)
00133080 t IVP_3D_Solver::calc_nullstelle(IVP_Time, IVP_Time, double, double, double, IVP_Real_Object*, IVP_Real_Object*)
00133b00 t IVP_3D_Solver::set_max_deviation(double)
001335c0 t IVP_3D_Solver::find_first_t_for_value_coll(double, double, IVP_Time, IVP_Time, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
001332c0 t IVP_3D_Solver::find_first_t_for_value_max_dev(double, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
001335b0 t IVP_3D_Solver::find_first_t_for_value_max_dev2(double, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, double*, IVP_Time*)
000d05d0 t IVP_CFEP_Hash::pair_to_index(IVP_CFEP_Objectpair*)
000d0610 t IVP_CFEP_Hash::add(IVP_CFEP_Objectpair*)
000d06b0 t IVP_CFEP_Hash::find(IVP_CFEP_Objectpair*)
000d0660 t IVP_CFEP_Hash::remove(IVP_CFEP_Objectpair*)
000d0740 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000d0740 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
000d04f0 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000d0470 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
000d0470 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
0011c530 t IVP_Collision::set_fvector_index(int, int)
0011c480 t IVP_Collision::delegator_is_going_to_be_deleted_event(IVP_Collision_Delegator*)
0011c560 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
0011c560 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
0011c4c0 t IVP_Collision::~IVP_Collision()
0011c4a0 t IVP_Collision::~IVP_Collision()
0011c4a0 t IVP_Collision::~IVP_Collision()
00103bc0 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*)
00103b70 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*, double)
00103bc0 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*)
00103b70 t IVP_Event_Sim::IVP_Event_Sim(IVP_Environment*, double)
000e0040 t IVP_MI_Vector::add_multiple(IVP_MI_Vector const*, float)
000e0360 t IVP_MI_Vector::set_time_stamp(IVP_Time)
000e0f00 t IVP_MI_Vector::malloc_mi_vector(int)
000e0fa0 t IVP_MI_Vector::malloc_and_set_mi_vector(int, float*)
000dff70 t IVP_MI_Vector::add(IVP_MI_Vector const*)
000e10b0 t IVP_MI_Vector::set(int, float)
000dfde0 t IVP_MI_Vector::set(IVP_MI_Vector const*)
000e0120 t IVP_MI_Vector::mult(float)
000dfea0 t IVP_MI_Vector::subtract(IVP_MI_Vector const*)
00126bc0 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
00126bc0 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
00111f60 t IVP_U_Matrix3::get_angles(float*, float*, float*)
00111d80 t IVP_U_Matrix3::init_rows3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00113470 t IVP_U_Matrix3::transpose3()
00111e60 t IVP_U_Matrix3::orthogonize()
00110e10 t IVP_U_Matrix3::real_invert(double)
00111f40 t IVP_U_Matrix3::orthonormize()
00111df0 t IVP_U_Matrix3::init_columns3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
00111450 t IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)
001134b0 t IVP_U_Matrix3::set_transpose3(IVP_U_Matrix3 const*)
001100e0 t IVP_U_Matrix3::calc_eigen_vector(double, IVP_U_Point*)
00111730 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX)
00111a40 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
001118b0 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX)
00111be0 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
001140f0 t IVP_U_Matrix3::quad_rot_distance_to(IVP_U_Matrix3 const*)
00111080 t IVP_U_Matrix3::init3()
00110080 t IVP_U_Matrix3::normize()
00115c70 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Point const*)
00115ca0 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
00115c00 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Point const*)
00115c30 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
00114780 t IVP_U_Matrix3::set_elem(int, int, double)
001147a0 t IVP_U_Matrix3::byte_swap()
000e5a10 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000e5a10 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
000b2610 t P_Sur_2D_Line::has_points(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b26a0 t P_Sur_2D_Line::dist_to_point(IVP_U_Point*)
000b2980 t P_Sur_2D_Line::is_crossing_line(P_Sur_2D_Line*)
000b2870 t P_Sur_2D_Line::overlaps_with_line(P_Sur_2D_Line*)
000b2740 t P_Sur_2D_Line::hesse_dist_to_point(IVP_U_Point*)
000b2780 t P_Sur_2D_Line::point_lies_in_interval(IVP_U_Point*)
000b25c0 t P_Sur_2D_Line::point_lies_to_the_left(IVP_U_Point*)
000b2500 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b2500 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
000b25b0 t P_Sur_2D_Line::~P_Sur_2D_Line()
000b25b0 t P_Sur_2D_Line::~P_Sur_2D_Line()
000306a0 t CBaseAppSystem<IPhysics>::Disconnect()
00030680 t CBaseAppSystem<IPhysics>::QueryInterface(char const*)
000306b0 t CBaseAppSystem<IPhysics>::Init()
00030690 t CBaseAppSystem<IPhysics>::Connect(void* (*)(char const*, int*))
000306c0 t CBaseAppSystem<IPhysics>::Shutdown()
00063ba0 t CDefConvexInfo::GetContents(int)
000699f0 t ConCommandBase::CopyString(char const*)
00068fb0 t ConCommandBase::CreateBase(char const*, char const*, int)
001a8e60 b ConCommandBase::s_pAccessor
001a8e70 b ConCommandBase::s_pConCommandBases
00069020 t ConCommandBase::Init()
000699e0 t ConCommandBase::GetNext()
00069070 t ConCommandBase::AddFlags(int)
000699b0 t ConCommandBase::Shutdown()
00069990 t ConCommandBase::ConCommandBase(char const*, char const*, int)
00069960 t ConCommandBase::ConCommandBase()
00069990 t ConCommandBase::ConCommandBase(char const*, char const*, int)
00069960 t ConCommandBase::ConCommandBase()
00069250 t ConCommandBase::~ConCommandBase()
00068f80 t ConCommandBase::~ConCommandBase()
00068f80 t ConCommandBase::~ConCommandBase()
0004e060 t CPhysicsObject::EnableDrag(bool)
0004e5f0 t CPhysicsObject::NotifyWake()
0004c190 t CPhysicsObject::SetDamping(float const*, float const*)
0004d630 t CPhysicsObject::SetInertia(Vector const&)
0004ef70 t CPhysicsObject::AddVelocity(Vector const*, Vector const*)
0004e5c0 t CPhysicsObject::NotifySleep()
0004c1d0 t CPhysicsObject::SetContents(unsigned int)
0004c060 t CPhysicsObject::SetGameData(void*)
0004cd70 t CPhysicsObject::SetPosition(Vector const&, QAngle const&, bool)
0004ed30 t CPhysicsObject::SetVelocity(Vector const*, Vector const*)
0004cb00 t CPhysicsObject::BecomeHinged(int)
0004d9b0 t CPhysicsObject::EnableMotion(bool)
0004cae0 t CPhysicsObject::RemoveHinged()
0004beb0 t CPhysicsObject::SetGameFlags(unsigned short)
0004bed0 t CPhysicsObject::SetGameIndex(unsigned short)
0004c1e0 t CPhysicsObject::UpdateShadow(Vector const&, QAngle const&, bool, float)
0004dec0 t CPhysicsObject::BecomeTrigger()
0004ed00 t CPhysicsObject::ClampVelocity()
0004da60 t CPhysicsObject::EnableGravity(bool)
0004c460 t CPhysicsObject::RemoveTrigger()
0004f9b0 t CPhysicsObject::WriteToTemplate(vphysics_save_cphysicsobject_t&)
0004f1f0 t CPhysicsObject::ApplyForceCenter(Vector const&)
0004f100 t CPhysicsObject::ApplyForceOffset(Vector const&, Vector const&)
0004dae0 t CPhysicsObject::EnableCollisions(bool)
0004fba0 t CPhysicsObject::InitFromTemplate(CPhysicsEnvironment*, void*, vphysics_save_cphysicsobject_t const&)
0004c1c0 t CPhysicsObject::SetBuoyancyRatio(float)
0004be90 t CPhysicsObject::SetCallbackFlags(unsigned short)
0004d920 t CPhysicsObject::SetMaterialIndex(int)
0004f060 t CPhysicsObject::ApplyTorqueCenter(Vector const&)
0004ceb0 t CPhysicsObject::SetPositionMatrix(matrix3x4_t const&, bool)
0004e6a0 t CPhysicsObject::RecomputeDragBases()
0004c000 t CPhysicsObject::SetDragCoefficient(float*, float*)
0004cbd0 t CPhysicsObject::ComputeShadowControl(hlshadowcontrol_params_t const&, float, float)
0004bf10 t CPhysicsObject::RecheckContactPoints()
0004d6d0 t CPhysicsObject::CreateFrictionSnapshot()
0004e600 t CPhysicsObject::GetVPhysicsEnvironment()
0004de80 t CPhysicsObject::RecheckCollisionFilter()
0004c290 t CPhysicsObject::RemoveShadowController()
0004d6c0 t CPhysicsObject::DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
0004f300 t CPhysicsObject::RestoreShadowController(IPhysicsShadowController*)
0004ee50 t CPhysicsObject::SetVelocityInstantaneous(Vector const*, Vector const*)
0004ec10 t CPhysicsObject::Init(CPhysCollide const*, IVP_Real_Object*, int, float, float, float)
0004d790 t CPhysicsObject::Wake()
0004d770 t CPhysicsObject::Sleep()
0004eb40 t CPhysicsObject::SetMass(float)
0004dfc0 t CPhysicsObject::SetShadow(float, float, bool, bool)
0004ea80 t CPhysicsObject::SetVolume(float)
0004e530 t CPhysicsObject::CPhysicsObject()
0004e530 t CPhysicsObject::CPhysicsObject()
0004d8e0 t CPhysicsObject::~CPhysicsObject()
0004d7b0 t CPhysicsObject::~CPhysicsObject()
0004d7b0 t CPhysicsObject::~CPhysicsObject()
00054990 t CPhysicsSpring::GetEndObject()
000540a0 t CPhysicsSpring::GetEndpoints(Vector*, Vector*)
00054330 t CPhysicsSpring::AttachListener()
000543d0 t CPhysicsSpring::DetachListener()
00054980 t CPhysicsSpring::GetStartObject()
00054180 t CPhysicsSpring::SetSpringLength(float)
00054500 t CPhysicsSpring::WriteToTemplate(vphysics_save_cphysicsspring_t&)
000541f0 t CPhysicsSpring::SetSpringDamping(float)
00054220 t CPhysicsSpring::SetSpringConstant(float)
000549f0 t CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
000549b0 t CPhysicsSpring::event_object_created(IVP_Event_Object*)
00054450 t CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
000549d0 t CPhysicsSpring::event_object_revived(IVP_Event_Object*)
00054380 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
00054380 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
000544e0 t CPhysicsSpring::~CPhysicsSpring()
00054470 t CPhysicsSpring::~CPhysicsSpring()
00054470 t CPhysicsSpring::~CPhysicsSpring()
000781d0 t CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::AllocInternal(bool)
000786f0 t CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::Unlink(unsigned short)
00078070 t CUtlLinkedList<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlKeyValuePair<CUtlConstStringBase<char>, empty_t>, unsigned short>, unsigned short> >::RemoveAll()
0006c960 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
0006cad0 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00047520 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
00046d30 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
00042210 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
00042210 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
00065c80 t CVPhysicsParse::ParseFluid(fluid_t*, IVPhysicsKeyHandler*)
00066400 t CVPhysicsParse::ParseSolid(solid_t*, IVPhysicsKeyHandler*)
00065820 t CVPhysicsParse::ParseCustom(void*, IVPhysicsKeyHandler*)
000659a0 t CVPhysicsParse::ParseVehicle(vehicleparams_t*, IVPhysicsKeyHandler*)
000654c0 t CVPhysicsParse::ParseVehicleAxle(vehicle_axleparams_t&)
00064de0 t CVPhysicsParse::ParseVehicleBody(vehicle_bodyparams_t&)
00065bc0 t CVPhysicsParse::ParseSurfaceTable(int*, IVPhysicsKeyHandler*)
00065220 t CVPhysicsParse::ParseVehicleWheel(vehicle_wheelparams_t&)
000649e0 t CVPhysicsParse::ParseVehicleEngine(vehicle_engineparams_t&)
00064110 t CVPhysicsParse::GetCurrentBlockName()
000642b0 t CVPhysicsParse::ParseVehicleSteering(vehicle_steeringparams_t&)
00065f80 t CVPhysicsParse::ParseRagdollConstraint(constraint_ragdollparams_t*, IVPhysicsKeyHandler*)
00065060 t CVPhysicsParse::ParseVehicleSuspension(vehicle_suspensionparams_t&)
00066830 t CVPhysicsParse::ParseSurfaceTablePacked(CUtlVector<char, CUtlMemory<char, int> >&)
00064820 t CVPhysicsParse::ParseVehicleEngineBoost(vehicle_engineparams_t&)
00064130 t CVPhysicsParse::Finished()
000656f0 t CVPhysicsParse::NextBlock()
000669c0 t CVPhysicsParse::SkipBlock()
00065790 t CVPhysicsParse::CVPhysicsParse(char const*)
00065790 t CVPhysicsParse::CVPhysicsParse(char const*)
000669f0 t CVPhysicsParse::~CVPhysicsParse()
000669b0 t CVPhysicsParse::~CVPhysicsParse()
000669b0 t CVPhysicsParse::~CVPhysicsParse()
00050550 t IPhysicsObject::~IPhysicsObject()
00050470 t IPhysicsObject::~IPhysicsObject()
00050470 t IPhysicsObject::~IPhysicsObject()
00054a00 t IPhysicsSpring::~IPhysicsSpring()
00054970 t IPhysicsSpring::~IPhysicsSpring()
00054970 t IPhysicsSpring::~IPhysicsSpring()
000d9b30 t IVP_Car_System::calc_ackerman_angle(float, float, float)
000dab40 t IVP_Car_System::event_object_deleted(IVP_Event_Object*)
000da9c0 t IVP_Car_System::IVP_Car_System()
000da9c0 t IVP_Car_System::IVP_Car_System()
000d9130 t IVP_Car_System::~IVP_Car_System()
000d9060 t IVP_Car_System::~IVP_Car_System()
000d9060 t IVP_Car_System::~IVP_Car_System()
00137220 t IVP_Constraint::deactivate()
001371d0 t IVP_Constraint::get_environment()
00137030 t IVP_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
00137020 t IVP_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
00137010 t IVP_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
00137090 t IVP_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
00137080 t IVP_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
00137070 t IVP_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
001370d0 t IVP_Constraint::change_fixing_point_Ros(IVP_U_Point const*)
0012fcd0 t IVP_Constraint::get_controller_priority()
00137050 t IVP_Constraint::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
00137000 t IVP_Constraint::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001370b0 t IVP_Constraint::change_translation_axes_Ros(IVP_U_Matrix3 const*)
00137060 t IVP_Constraint::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001370c0 t IVP_Constraint::change_target_fixing_point_Ros(IVP_U_Point const*)
00136ff0 t IVP_Constraint::change_Aos_to_relaxe_constraint()
00136fe0 t IVP_Constraint::change_Ros_to_relaxe_constraint()
00137040 t IVP_Constraint::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
0012fce0 t IVP_Constraint::get_associated_controlled_cores()
00136fd0 t IVP_Constraint::get_minimum_simulation_frequency()
00136fb0 t IVP_Constraint::core_is_going_to_be_deleted_event(IVP_Core*)
001370a0 t IVP_Constraint::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
001371e0 t IVP_Constraint::activate()
001371a0 t IVP_Constraint::IVP_Constraint()
001371a0 t IVP_Constraint::IVP_Constraint()
00137180 t IVP_Constraint::~IVP_Constraint()
001370e0 t IVP_Constraint::~IVP_Constraint()
001370e0 t IVP_Constraint::~IVP_Constraint()
001039c0 t IVP_Controller::reset_time(IVP_Time)
001039d0 t IVP_Controller::get_controller_name()
001039b0 t IVP_Controller::get_minimum_simulation_frequency()
001039a0 t IVP_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
00103ac0 t IVP_Controller::~IVP_Controller()
001039e0 t IVP_Controller::~IVP_Controller()
001039e0 t IVP_Controller::~IVP_Controller()
000d5aa0 t IVP_Extra_Info::IVP_Extra_Info()
000d5aa0 t IVP_Extra_Info::IVP_Extra_Info()
000fc150 t IVP_Merge_Core::set_radius()
000fcad0 t IVP_Merge_Core::place_objects()
000fbef0 t IVP_Merge_Core::find_main_axis()
000fbc80 t IVP_Merge_Core::find_mass_center()
000fbd80 t IVP_Merge_Core::find_damp_factors()
000fc9c0 t IVP_Merge_Core::synchronize_motion()
000fca30 t IVP_Merge_Core::check_for_unmovable_core()
000fcc00 t IVP_Merge_Core::calc_calc()
000fc210 t IVP_Merge_Core::set_speed()
000fc910 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
000fc8b0 t IVP_Merge_Core::IVP_Merge_Core()
000fc910 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
000fc8b0 t IVP_Merge_Core::IVP_Merge_Core()
000fc990 t IVP_Merge_Core::~IVP_Merge_Core()
000fc990 t IVP_Merge_Core::~IVP_Merge_Core()
00126940 t IVP_OO_Watcher::get_ledges(IVP_Compact_Ledge const**)
00126920 t IVP_OO_Watcher::get_objects(IVP_Real_Object**)
00120120 t IVP_OO_Watcher::get_synapse(int)
001265f0 t IVP_OO_Watcher::hull_limit_exceeded_event()
001268a0 t IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
00126870 t IVP_OO_Watcher::hull_manager_is_going_to_be_deleted_event()
00126ad0 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
00126ad0 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
00126ab0 t IVP_OO_Watcher::~IVP_OO_Watcher()
00126970 t IVP_OO_Watcher::~IVP_OO_Watcher()
00126970 t IVP_OO_Watcher::~IVP_OO_Watcher()
0011a8e0 t IVP_OV_Element::add_oo_collision(IVP_Collision*)
0011a7f0 t IVP_OV_Element::add_to_hull_manager(IVP_Hull_Manager*, double)
0011a960 t IVP_OV_Element::remove_oo_collision(IVP_Collision*)
0011a730 t IVP_OV_Element::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
0011a710 t IVP_OV_Element::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
0011a700 t IVP_OV_Element::get_type()
0011a790 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
0011a790 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
0011bfe0 t IVP_OV_Element::~IVP_OV_Element()
0011bf20 t IVP_OV_Element::~IVP_OV_Element()
0011bf20 t IVP_OV_Element::~IVP_OV_Element()
000b1c50 t IVP_point_hash::find_point(IVP_Poly_Point*)
000b1bf0 t IVP_point_hash::remove_point(IVP_Poly_Point*)
000b1b10 t IVP_point_hash::point_to_index(IVP_Poly_Point*)
000b1b90 t IVP_point_hash::add_point(IVP_Poly_Point*)
000b1ce0 t IVP_point_hash::IVP_point_hash(int)
000b1ce0 t IVP_point_hash::IVP_point_hash(int)
000b1ae0 t IVP_point_hash::~IVP_point_hash()
000b1ac0 t IVP_point_hash::~IVP_point_hash()
000b1ac0 t IVP_point_hash::~IVP_point_hash()
000b1f60 t IVP_Poly_Point::p()
000b1f10 t IVP_Poly_Point::print(char const*)
000b1ee0 t IVP_Poly_Point::point_num()
000d4330 t IVP_Ray_Solver::check_ray_against_ball(IVP_Ball*)
000d32e0 t IVP_Ray_Solver::check_ray_against_cube(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000d4760 t IVP_Ray_Solver::check_ray_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000d45d0 t IVP_Ray_Solver::check_ray_against_object(IVP_Real_Object*)
000d3230 t IVP_Ray_Solver::check_ray_against_square(float, float, IVP_U_Float_Point const*, IVP_U_Float_Point const*, int, int)
000d4b30 t IVP_Ray_Solver::check_ray_against_all_objects_in_sim(IVP_Environment const*)
000d30f0 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000d30f0 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
000d4d60 t IVP_Ray_Solver::~IVP_Ray_Solver()
000d4d20 t IVP_Ray_Solver::~IVP_Ray_Solver()
000d4d20 t IVP_Ray_Solver::~IVP_Ray_Solver()
00126800 t IVP_Synapse_OO::init_synapse_oo(IVP_OO_Watcher*, IVP_Real_Object*)
00126760 t IVP_Synapse_OO::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
00126780 t IVP_Synapse_OO::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
0011ff70 t IVP_Synapse_OO::get_type()
00120110 t IVP_Synapse_OO::IVP_Synapse_OO()
00120110 t IVP_Synapse_OO::IVP_Synapse_OO()
001267e0 t IVP_Synapse_OO::~IVP_Synapse_OO()
001267b0 t IVP_Synapse_OO::~IVP_Synapse_OO()
001267b0 t IVP_Synapse_OO::~IVP_Synapse_OO()
000b72c0 t IVP_Tetra_Edge::p()
000b7250 t IVP_Tetra_Edge::print(char const*)
00108920 t IVP_Time_Event::simulate_time_event(IVP_Environment*)
00108950 t IVP_Time_Event::IVP_Time_Event()
00108950 t IVP_Time_Event::IVP_Time_Event()
00116f30 t IVP_U_Min_Hash::remove_min()
00116e80 t IVP_U_Min_Hash::change_value(void*, double)
00116f60 t IVP_U_Min_Hash::find_min_elem()
00116f80 t IVP_U_Min_Hash::find_min_value()
00116c00 t IVP_U_Min_Hash::min_added_at_index(IVP_U_Min_Hash_Elem*, int)
00116c50 t IVP_U_Min_Hash::min_removed_at_index(IVP_U_Min_Hash_Elem*, int)
00116d20 t IVP_U_Min_Hash::add(void*, double)
00116de0 t IVP_U_Min_Hash::remove(void*)
00116b30 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
00116b30 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
00116b80 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
00116b80 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
00117670 t IVP_U_Min_List::has_elements()
00117650 t IVP_U_Min_List::find_min_elem()
00117690 t IVP_U_Min_List::find_min_value()
001176a0 t IVP_U_Min_List::prefetch0_minlist()
001176b0 t IVP_U_Min_List::prefetch1_minlist()
00117500 t IVP_U_Min_List::remove_minlist_elem(unsigned int)
00117140 t IVP_U_Min_List::add(void*, float)
00117600 t IVP_U_Min_List::check()
00117080 t IVP_U_Min_List::IVP_U_Min_List(int)
00117080 t IVP_U_Min_List::IVP_U_Min_List(int)
00117110 t IVP_U_Min_List::~IVP_U_Min_List()
00117110 t IVP_U_Min_List::~IVP_U_Min_List()
0010e980 t IVP_U_Straight::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*, double*)
0010e5f0 t IVP_U_Straight::set(IVP_U_Point const*, IVP_U_Point const*)
0010e670 t IVP_U_Straight::set(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0010e570 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
0010e570 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
000b2470 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000b2470 t P_Sur_2D_Point::P_Sur_2D_Point(int)
000b24f0 t P_Sur_2D_Point::~P_Sur_2D_Point()
000b24f0 t P_Sur_2D_Point::~P_Sur_2D_Point()
000348c0 t CCollisionQuery::ConvexCount()
000348f0 t CCollisionQuery::GetGameData(int)
000348d0 t CCollisionQuery::TriangleCount(int)
00034910 t CCollisionQuery::GetTriangleVerts(int, int, Vector*)
000349a0 t CCollisionQuery::SetTriangleVerts(int, int, Vector const*)
000349b0 t CCollisionQuery::GetTriangleMaterialIndex(int, int)
000349e0 t CCollisionQuery::SetTriangleMaterialIndex(int, int, int)
00036710 t CCollisionQuery::Triangle(IVP_Compact_Ledge*, int)
00036740 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
00036740 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
00037c10 t CCollisionQuery::~CCollisionQuery()
00037bb0 t CCollisionQuery::~CCollisionQuery()
00037bb0 t CCollisionQuery::~CCollisionQuery()
000410e0 t CDragController::get_controller_name()
000410f0 t CDragController::get_controller_priority()
00041380 t CDragController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00041280 t CDragController::~CDragController()
000410d0 t CDragController::~CDragController()
000410d0 t CDragController::~CDragController()
00047740 t CObjectPairHash::AddObjectPair(void*, void*)
000412f0 t CObjectPairHash::IsObjectInHash(void*)
00047070 t CObjectPairHash::RemoveObjectPair(void*, void*)
00041190 t CObjectPairHash::IsObjectPairInHash(void*, void*)
00042070 t CObjectPairHash::GetPairListForObject(void*, int, void**)
00042120 t CObjectPairHash::GetPairCountForObject(void*)
00046de0 t CObjectPairHash::RemoveAllPairsForObject(void*)
00042410 t CObjectPairHash::~CObjectPairHash()
00042380 t CObjectPairHash::~CObjectPairHash()
00042380 t CObjectPairHash::~CObjectPairHash()
0005a0f0 t CThreadLocalPtr<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CThreadLocalPtr()
0005a0f0 t CThreadLocalPtr<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CThreadLocalPtr()
00030700 t CTier1AppSystem<IPhysics, 0>::Disconnect()
00030750 t CTier1AppSystem<IPhysics, 0>::Init()
00030720 t CTier1AppSystem<IPhysics, 0>::Connect(void* (*)(char const*, int*))
000306d0 t CTier1AppSystem<IPhysics, 0>::Shutdown()
00075de0 t CUtlSymbolTable::AddString(char const*)
00075ad0 t CUtlSymbolTable::RemoveAll()
000754b0 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
000754b0 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00075b30 t CUtlSymbolTable::~CUtlSymbolTable()
00075b30 t CUtlSymbolTable::~CUtlSymbolTable()
00093da0 t hk_Vector3_Util::random_vec()
00093dd0 t hk_Vector3_Util::perp_vec(hk_Vector3 const&)
00037b60 t ICollisionQuery::~ICollisionQuery()
00037a30 t ICollisionQuery::~ICollisionQuery()
00037a30 t ICollisionQuery::~ICollisionQuery()
000fcc80 t IVP_Core_Merged::set_by_merge(IVP_Core*, IVP_Core*)
000e7480 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000e7320 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000e7480 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
000e7320 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
000e7f10 t IVP_Environment::reset_time()
000e82a0 t IVP_Environment::create_ball(IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000e8e00 t IVP_Environment::do_d_events()
000ea7a0 t IVP_Environment::get_gravity()
000e79e0 t IVP_Environment::set_gravity(IVP_U_Point*)
000e7c00 t IVP_Environment::create_force(IVP_Template_Force*)
000e8ee0 t IVP_Environment::simulate_psi(IVP_Time)
000e7a80 t IVP_Environment::create_rotmot(IVP_Template_Rot_Mot*)
000e7ca0 t IVP_Environment::create_spring(IVP_Template_Spring*)
000e7b20 t IVP_Environment::create_torque(IVP_Template_Torque*)
000ea5f0 t IVP_Environment::get_env_state()
000e9120 t IVP_Environment::merge_objects(IVP_U_Vector<IVP_Real_Object>*)
000e8230 t IVP_Environment::create_polygon(IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000e8920 t IVP_Environment::fire_event_PSI()
000e7fb0 t IVP_Environment::simulate_dtime(double)
000e7e70 t IVP_Environment::simulate_until(IVP_Time)
000e8e80 t IVP_Environment::add_draw_vector(IVP_U_Point const*, IVP_U_Float_Point const*, char const*, int)
00103740 t IVP_Environment::add_revive_core(IVP_Core*)
000e8b30 t IVP_Environment::add_listener_PSI(IVP_Listener_PSI*)
000ea770 t IVP_Environment::get_current_time()
000e7e40 t IVP_Environment::get_root_cluster()
000ea6a0 t IVP_Environment::get_sim_unit_mem()
000ea790 t IVP_Environment::get_wakeup_count()
001037b0 t IVP_Environment::revive_cores_PSI()
000e8020 t IVP_Environment::set_current_time(IVP_Time)
000e7df0 t IVP_Environment::create_check_dist(IVP_Template_Check_Dist*)
000e2270 t IVP_Environment::create_constraint(IVP_Template_Constraint const*)
000e7da0 t IVP_Environment::create_stabilizer(IVP_Template_Stabilizer*)
000e7d50 t IVP_Environment::create_suspension(IVP_Template_Suspension*)
000ea560 t IVP_Environment::get_next_PSI_time()
000ea5a0 t IVP_Environment::get_delta_PSI_time()
000ea760 t IVP_Environment::get_freeze_manager()
000ea6b0 t IVP_Environment::get_short_term_mem()
001036b0 t IVP_Environment::remove_revive_core(IVP_Core*)
000e7930 t IVP_Environment::set_delta_PSI_time(double)
000e7fe0 t IVP_Environment::simulate_time_step(float)
000e8b80 t IVP_Environment::remove_listener_PSI(IVP_Listener_PSI*)
000ea5e0 t IVP_Environment::get_current_time_code()
000ea6f0 t IVP_Environment::get_statistic_manager()
000ea7c0 t IVP_Environment::get_gravity_controller()
000ea5c0 t IVP_Environment::get_inv_delta_PSI_time()
000ea690 t IVP_Environment::get_performancecounter()
000e7bb0 t IVP_Environment::create_controller_motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
000e81d0 t IVP_Environment::delete_draw_vector_debug()
000e85c0 t IVP_Environment::fire_event_object_frozen(IVP_Event_Object*)
000e8680 t IVP_Environment::fire_event_pre_collision(IVP_Event_Collision*)
000ea580 t IVP_Environment::get_old_time_of_last_PSI()
000e8500 t IVP_Environment::fire_event_object_created(IVP_Event_Object*)
000e8560 t IVP_Environment::fire_event_object_deleted(IVP_Event_Object*)
000e8620 t IVP_Environment::fire_event_object_revived(IVP_Event_Object*)
000e86f0 t IVP_Environment::fire_event_post_collision(IVP_Event_Collision*)
000e8390 t IVP_Environment::add_listener_object_global(IVP_Listener_Object*)
000ea550 t IVP_Environment::get_integrated_energy_damp()
000e8310 t IVP_Environment::add_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000e8760 t IVP_Environment::fire_event_friction_created(IVP_Event_Friction*)
000e87d0 t IVP_Environment::fire_event_friction_deleted(IVP_Event_Friction*)
000ea700 t IVP_Environment::get_betterstatisticsmanager()
000ea500 t IVP_Environment::must_perform_movement_check()
000e7ec0 t IVP_Environment::simulate_variable_time_step(float)
000e8980 t IVP_Environment::fire_event_constraint_broken(IVP_Constraint*)
000e89e0 t IVP_Environment::fire_event_constraint_broken(hk_Breakable_Constraint*)
000e8040 t IVP_Environment::force_psi_on_next_simulation()
000e8a40 t IVP_Environment::add_listener_collision_global(IVP_Listener_Collision*)
000e8460 t IVP_Environment::remove_listener_object_global(IVP_Listener_Object*)
000e8350 t IVP_Environment::add_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000e8c20 t IVP_Environment::add_listener_constraint_global(IVP_Listener_Constraint*)
000e8ec0 t IVP_Environment::get_global_collision_tolerance()
000e83e0 t IVP_Environment::install_listener_object_global(IVP_Listener_Object*)
000e8330 t IVP_Environment::remove_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
000e8e90 t IVP_Environment::set_global_collision_tolerance(double, double)
000e8840 t IVP_Environment::fire_event_friction_pair_created(IVP_Friction_Core_Pair*)
000e88b0 t IVP_Environment::fire_event_friction_pair_deleted(IVP_Friction_Core_Pair*)
000e8a90 t IVP_Environment::remove_listener_collision_global(IVP_Listener_Collision*)
000e8370 t IVP_Environment::remove_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
000e8c70 t IVP_Environment::remove_listener_constraint_global(IVP_Listener_Constraint*)
000e7980 t IVP_Environment::fire_object_is_removed_from_collision_detection(IVP_Real_Object*)
000e9360 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000e9360 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
000e9c00 t IVP_Environment::~IVP_Environment()
000e9c00 t IVP_Environment::~IVP_Environment()
00115870 t IVP_Inline_Math::save_acosf(float)
00115960 t IVP_Inline_Math::approx5_cos(float)
00115920 t IVP_Inline_Math::approx5_sin(float)
001144d0 t IVP_Inline_Math::isqrt_float(float)
00114510 t IVP_Inline_Math::isqrt_double(double)
001158e0 t IVP_Inline_Math::fast_approx_asin(float)
001159a0 t IVP_Inline_Math::upper_limit_asin(float)
00115a70 t IVP_Inline_Math::invert_2x2_matrix(double, double, double, double, double*, double*, double*, double*)
00115a20 t IVP_Inline_Math::fast_anywhere_asin(float)
001145e0 t IVP_Inline_Math::cosd(double)
001145d0 t IVP_Inline_Math::sind(double)
001145f0 t IVP_Inline_Math::acosd(double)
00114600 t IVP_Inline_Math::asind(double)
00114610 t IVP_Inline_Math::atand(double)
00114540 t IVP_Inline_Math::fabsd(double)
00114590 t IVP_Inline_Math::sqrtd(double)
00114630 t IVP_Inline_Math::atan2d(double, double)
001145c0 t IVP_Inline_Math::ivp_cosf(double)
00114620 t IVP_Inline_Math::ivp_expf(double)
001145b0 t IVP_Inline_Math::ivp_sinf(double)
001159e0 t IVP_Inline_Math::fast_asin(float)
001158c0 t IVP_Inline_Math::int_div_2(int)
00114570 t IVP_Inline_Math::ivp_sqrtf(double)
000ff1e0 t IVP_Real_Object::reset_time(IVP_Time)
000ff6f0 t IVP_Real_Object::set_pinned(IVP_BOOL)
000fed90 t IVP_Real_Object::change_mass(float)
000feeb0 t IVP_Real_Object::insert_anchor(IVP_Anchor*)
000feee0 t IVP_Real_Object::remove_anchor(IVP_Anchor*)
00101490 t IVP_Real_Object::get_ov_element()
000ff200 t IVP_Real_Object::delete_silently()
0010a6f0 t IVP_Real_Object::get_cache_object()
00101440 t IVP_Real_Object::get_first_anchor()
00101470 t IVP_Real_Object::get_hull_manager()
001006e0 t IVP_Real_Object::init_object_core(IVP_Environment*, IVP_Template_Real_Object const*)
000ff130 t IVP_Real_Object::set_extra_radius(double)
00100d40 t IVP_Real_Object::do_radar_checking(IVP_Radar*)
00100ed0 t IVP_Real_Object::convert_to_phantom(IVP_Template_Phantom const*)
000ff850 t IVP_Real_Object::disable_simulation()
001014f0 t IVP_Real_Object::get_movement_state()
000feff0 t IVP_Real_Object::recalc_core_radius()
001014a0 t IVP_Real_Object::set_movement_state(IVP_Movement_Type)
000fee50 t IVP_Real_Object::add_listener_object(IVP_Listener_Object*)
00101100 t IVP_Real_Object::async_push_object_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
001000a0 t IVP_Real_Object::calc_m_core_f_object(IVP_U_Matrix*)
001010c0 t IVP_Real_Object::ensure_in_simulation()
000ff9d0 t IVP_Real_Object::change_unmovable_flag(IVP_BOOL)
000ff2e0 t IVP_Real_Object::get_all_near_mindists()
000ff460 t IVP_Real_Object::unlink_contact_points(IVP_BOOL)
000fedf0 t IVP_Real_Object::add_listener_collision(IVP_Listener_Collision*)
00101510 t IVP_Real_Object::get_controller_phantom()
000fee80 t IVP_Real_Object::remove_listener_object(IVP_Listener_Object*)
00101450 t IVP_Real_Object::get_first_exact_synapse()
000fec10 t IVP_Real_Object::set_new_m_object_f_core(IVP_U_Matrix const*)
000ff5b0 t IVP_Real_Object::set_new_surface_manager(IVP_SurfaceManager*)
000fefd0 t IVP_Real_Object::ensure_in_simulation_now()
0010a680 t IVP_Real_Object::get_cache_object_no_lock()
000ff340 t IVP_Real_Object::recheck_collision_filter()
000fedb0 t IVP_Real_Object::recompile_values_changed()
00101210 t IVP_Real_Object::async_add_speed_object_ws(IVP_U_Float_Point const*)
000ffc10 t IVP_Real_Object::clear_internal_references()
000ff3f0 t IVP_Real_Object::delete_and_check_vicinity()
000fee20 t IVP_Real_Object::remove_listener_collision(IVP_Listener_Collision*)
000fed70 t IVP_Real_Object::change_fast_piling_allowed(IVP_BOOL)
000ff520 t IVP_Real_Object::enable_collision_detection(IVP_BOOL)
000ff370 t IVP_Real_Object::force_grow_friction_system()
00101460 t IVP_Real_Object::get_first_friction_synapse()
000fedd0 t IVP_Real_Object::recompile_material_changed()
000fea60 t IVP_Real_Object::set_new_quat_object_f_core(IVP_U_Quat const*, IVP_U_Point const*)
00100f40 t IVP_Real_Object::beam_object_to_new_position(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
000fef90 t IVP_Real_Object::revive_object_for_simulation()
001011b0 t IVP_Real_Object::async_add_rot_speed_object_cs(IVP_U_Float_Point const*)
00101500 t IVP_Real_Object::is_collision_detection_enabled()
000ff3a0 t IVP_Real_Object::revive_nearest_objects_grow_fs()
000ff290 t IVP_Real_Object::recalc_exact_mindists_of_object()
000ffba0 t IVP_Real_Object::unlink_contact_points_for_object(IVP_Real_Object*)
000ff220 t IVP_Real_Object::recalc_invalid_mindists_of_object()
00100c00 t IVP_Real_Object::get_collision_check_reference_count()
000fef10 t IVP_Real_Object::update_exact_mindist_events_of_object()
000ffea0 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000ffea0 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
000ffe10 t IVP_Real_Object::~IVP_Real_Object()
000ffc90 t IVP_Real_Object::~IVP_Real_Object()
000ffc90 t IVP_Real_Object::~IVP_Real_Object()
000b7230 t IVP_Tetra_Point::p()
000b7520 t IVP_Tetra_Point::init(IVP_Tetra_Intrude*)
000b71d0 t IVP_Tetra_Point::print(char const*)
00037c70 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
00037c70 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
0011a560 t IVP_VHash_Store::change_elem(void*, void*)
0011a420 t IVP_VHash_Store::remove_elem(void*)
0011a300 t IVP_VHash_Store::remove_elem(void*, unsigned int)
0011a0d0 t IVP_VHash_Store::untouch_all()
0011a610 t IVP_VHash_Store::touch_element(void*, unsigned int)
0011a470 t IVP_VHash_Store::check()
0011a680 t IVP_VHash_Store::print()
0011a250 t IVP_VHash_Store::rehash(int)
0011a1f0 t IVP_VHash_Store::add_elem(void*, void*)
0011a110 t IVP_VHash_Store::add_elem(void*, void*, int)
0011a510 t IVP_VHash_Store::find_elem(void*)
0011a480 t IVP_VHash_Store::find_elem(void*, unsigned int)
0011a030 t IVP_VHash_Store::IVP_VHash_Store(int)
0011a070 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
0011a030 t IVP_VHash_Store::IVP_VHash_Store(int)
0011a070 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
0011a0a0 t IVP_VHash_Store::~IVP_VHash_Store()
0011a0a0 t IVP_VHash_Store::~IVP_VHash_Store()
00055920 t vehicleparams_t::GetBaseMap()
001a5380 d vehicleparams_t::m_DataMap
000468e0 t CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
000415e0 t CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00041020 t CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00041090 t CCollisionSolver::max_collision_checks_exceeded(int)
00046680 t CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00040f30 t CCollisionSolver::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
00041040 t CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00042990 t CCollisionSolver::~CCollisionSolver()
00042910 t CCollisionSolver::~CCollisionSolver()
00042910 t CCollisionSolver::~CCollisionSolver()
0006b000 t CDataManagerBase::TargetSize()
0006b860 t CDataManagerBase::MarkAsStale(memhandle_t__*)
0006bc80 t CDataManagerBase::CreateHandle(bool)
0006b780 t CDataManagerBase::LockResource(memhandle_t__*)
0006b3f0 t CDataManagerBase::TouchByIndex(unsigned short)
0006b010 t CDataManagerBase::AvailableSize()
0006b160 t CDataManagerBase::BreakAllLocks()
0006aee0 t CDataManagerBase::SetTargetSize(unsigned int)
0006b470 t CDataManagerBase::TouchResource(memhandle_t__*)
0006b2d0 t CDataManagerBase::EnsureCapacity(unsigned int)
0006b070 t CDataManagerBase::UnlockResource(memhandle_t__*)
0006b660 t CDataManagerBase::DestroyResource(memhandle_t__*)
0006bb20 t CDataManagerBase::FlushAllUnlocked()
0006be30 t CDataManagerBase::GetLRUHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006b3d0 t CDataManagerBase::FlushToTargetSize()
0006b210 t CDataManagerBase::GetForFreeByIndex(unsigned short)
0006bdb0 t CDataManagerBase::GetLockHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0006aea0 t CDataManagerBase::NotifySizeChanged(memhandle_t__*, unsigned int, unsigned int)
0006b4e0 t CDataManagerBase::GetResource_NoLock(memhandle_t__*)
0006af70 t CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
0006aef0 t CDataManagerBase::GetResource_NoLockNoLRUTouch(memhandle_t__*)
0006bf30 t CDataManagerBase::Lock()
0006b390 t CDataManagerBase::Purge(unsigned int)
0006bf50 t CDataManagerBase::Unlock()
0006bf40 t CDataManagerBase::TryLock()
0006b920 t CDataManagerBase::FlushAll()
0006afd0 t CDataManagerBase::ToHandle(unsigned short)
0006b020 t CDataManagerBase::UsedSize()
0006b580 t CDataManagerBase::BreakLock(memhandle_t__*)
0006beb0 t CDataManagerBase::CDataManagerBase(unsigned int)
0006beb0 t CDataManagerBase::CDataManagerBase(unsigned int)
0006b050 t CDataManagerBase::~CDataManagerBase()
0006b030 t CDataManagerBase::~CDataManagerBase()
0006b030 t CDataManagerBase::~CDataManagerBase()
0006ac20 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
0006d160 t CDllDemandLoader::GetFactory()
0006d1b0 t CDllDemandLoader::Unload()
0006d140 t CDllDemandLoader::CDllDemandLoader(char const*)
0006d140 t CDllDemandLoader::CDllDemandLoader(char const*)
0006d200 t CDllDemandLoader::~CDllDemandLoader()
0006d1e0 t CDllDemandLoader::~CDllDemandLoader()
0006d1e0 t CDllDemandLoader::~CDllDemandLoader()
000341d0 t CPhysics_Airboat::IsBoosting()
00031180 t CPhysics_Airboat::do_steering(float, bool)
00031300 t CPhysics_Airboat::InitAirboat(IVP_Template_Car_System const*)
00031f80 t CPhysics_Airboat::PreRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
00032100 t CPhysics_Airboat::PostRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
00030e30 t CPhysics_Airboat::get_skid_info(IVP_Wheel_Skid_Info*)
00031b10 t CPhysics_Airboat::GetWaterDepth(Ray_t*, IPhysicsObject*)
00030d40 t CPhysics_Airboat::get_body_speed(IVP_COORDINATE_INDEX)
000341c0 t CPhysics_Airboat::set_powerslide(float, float)
00034200 t CPhysics_Airboat::update_booster(float)
00031110 t CPhysics_Airboat::update_throttle(float)
000341f0 t CPhysics_Airboat::activate_booster(float, float, float)
00032800 t CPhysics_Airboat::DoSimulationDrag(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030c60 t CPhysics_Airboat::get_wheel_torque(IVP_POS_WHEEL)
00031390 t CPhysics_Airboat::SetWheelFriction(int, float)
000310c0 t CPhysics_Airboat::do_steering_wheel(IVP_POS_WHEEL, float)
00034210 t CPhysics_Airboat::get_booster_delay()
000340b0 t CPhysics_Airboat::InitRaycastCarAxes(IVP_Template_Car_System const*)
00033c50 t CPhysics_Airboat::InitRaycastCarBody(IVP_Template_Car_System const*)
00031080 t CPhysics_Airboat::change_wheel_torque(IVP_POS_WHEEL, float)
00033440 t CPhysics_Airboat::DoSimulationGravity(IVP_Event_Sim*)
00032f90 t CPhysics_Airboat::DoSimulationTurbine(IVP_Event_Sim*)
00034190 t CPhysics_Airboat::get_controller_name()
00032030 t CPhysics_Airboat::UpdateAirborneState(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030c40 t CPhysics_Airboat::change_spring_length(IVP_POS_WHEEL, float)
00031bd0 t CPhysics_Airboat::do_raycasts_gameside(int, IVP_Ray_Solver_Template*, IVP_Raycast_Airboat_Impact*)
000326c0 t CPhysics_Airboat::DoSimulationPontoons(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000330e0 t CPhysics_Airboat::DoSimulationSteering(IVP_Event_Sim*)
00033d20 t CPhysics_Airboat::InitRaycastCarWheels(IVP_Template_Car_System const*)
00030cd0 t CPhysics_Airboat::change_body_downforce(float)
000341a0 t CPhysics_Airboat::change_max_body_force(IVP_POS_WHEEL, float)
00030f60 t CPhysics_Airboat::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
00031480 t CPhysics_Airboat::pre_raycasts_gameside(int, IVP_Ray_Solver_Template*, Ray_t*, IVP_Raycast_Airboat_Impact*)
00030e90 t CPhysics_Airboat::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
00030bb0 t CPhysics_Airboat::change_spring_constant(IVP_POS_WHEEL, float)
00034220 t CPhysics_Airboat::get_booster_time_to_go()
00034170 t CPhysics_Airboat::update_wheel_positions()
00030cc0 t CPhysics_Airboat::change_fast_turn_factor(float)
00030bd0 t CPhysics_Airboat::change_spring_dampening(IVP_POS_WHEEL, float)
00030d00 t CPhysics_Airboat::get_controller_priority()
00030df0 t CPhysics_Airboat::get_orig_axles_distance()
00033ae0 t CPhysics_Airboat::change_friction_of_wheel(IVP_POS_WHEEL, float)
00033990 t CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000341e0 t CPhysics_Airboat::set_booster_acceleration(float)
00030c10 t CPhysics_Airboat::change_spring_pre_tension(IVP_POS_WHEEL, float)
00033450 t CPhysics_Airboat::CountSurfaceContactPoints(IVP_Raycast_Airboat_Impact*)
00032620 t CPhysics_Airboat::DoSimulationPontoonsWater(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00033b00 t CPhysics_Airboat::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
000341b0 t CPhysics_Airboat::update_body_countertorque()
00030ca0 t CPhysics_Airboat::change_stabilizer_constant(IVP_POS_AXIS, float)
000324c0 t CPhysics_Airboat::DoSimulationPontoonsGround(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030d10 t CPhysics_Airboat::get_wheel_angular_velocity(IVP_POS_WHEEL)
00033700 t CPhysics_Airboat::DoSimulationKeepUprightRoll(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00032760 t CPhysics_Airboat::PerformFrictionNotification(float, float, int, IPhysicsCollisionData*)
000313b0 t CPhysics_Airboat::ComputeFrontPontoonWaveNoise(int, float)
00033490 t CPhysics_Airboat::DoSimulationKeepUprightPitch(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
00030db0 t CPhysics_Airboat::get_orig_front_wheel_distance()
00031040 t CPhysics_Airboat::get_associated_controlled_cores()
00031060 t CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
00030bf0 t CPhysics_Airboat::change_spring_dampening_compression(IVP_POS_WHEEL, float)
00034110 t CPhysics_Airboat::get_axle(IVP_POS_AXIS)
00031370 t CPhysics_Airboat::GetWheel(int)
00030c80 t CPhysics_Airboat::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
00034130 t CPhysics_Airboat::get_wheel(IVP_POS_WHEEL)
00033f70 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
00033f70 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
000312e0 t CPhysics_Airboat::~CPhysics_Airboat()
00031220 t CPhysics_Airboat::~CPhysics_Airboat()
00031220 t CPhysics_Airboat::~CPhysics_Airboat()
         U CThreadLocalBase::Set(void*)
         U CThreadLocalBase::CThreadLocalBase()
         U CThreadLocalBase::~CThreadLocalBase()
00041220 t IDeleteQueueItem::~IDeleteQueueItem()
000408d0 t IDeleteQueueItem::~IDeleteQueueItem()
000408d0 t IDeleteQueueItem::~IDeleteQueueItem()
0010a5f0 t IVP_Cache_Object::get_core_pos()
0010a5e0 t IVP_Cache_Object::remove_reference()
00109d90 t IVP_Cache_Object::update_cache_object()
001a6ed8 d IVP_Compact_Edge::next_table
001a6ec8 d IVP_Compact_Edge::prev_table
000d1280 t IVP_Compact_Edge::get_opposite()
000d0df0 t IVP_Compact_Edge::set_is_virtual(unsigned int)
000d0dd0 t IVP_Compact_Edge::set_opposite_index(int)
000d0dc0 t IVP_Compact_Edge::set_start_point_index(int)
000d1200 t IVP_Compact_Edge::get_next()
000d1240 t IVP_Compact_Edge::get_prev()
000d0ab0 t IVP_Compact_Edge::byte_swap()
000d0a90 t IVP_Compact_Edge::IVP_Compact_Edge()
000d0a90 t IVP_Compact_Edge::IVP_Compact_Edge()
000f7d10 t IVP_Hull_Manager::reset_time(IVP_Time)
000f7c40 t IVP_Hull_Manager::reset_times()
000f7c00 t IVP_Hull_Manager::delete_hull_manager()
000f7d50 t IVP_Hull_Manager::get_synapse_check_count(IVP_Environment*)
000f7d30 t IVP_Hull_Manager::too_many_synapses_checked_error_get_additional(IVP_Environment*, int)
0011c6b0 t IVP_Mindist_Base::get_ledges(IVP_Compact_Ledge const**)
0011c690 t IVP_Mindist_Base::get_objects(IVP_Real_Object**)
001200e0 t IVP_Mindist_Base::get_mindist_synapse(int)
0011c950 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
0011c950 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
0011fff0 t IVP_Mindist_Base::~IVP_Mindist_Base()
0011ff00 t IVP_Mindist_Base::~IVP_Mindist_Base()
0011ff00 t IVP_Mindist_Base::~IVP_Mindist_Base()
0011c1a0 t IVP_ov_tree_hash::node_to_index(IVP_OV_Node*)
0011c130 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
0011c110 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
0011c110 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
000b38c0 t IVP_Poly_Surface::get_surface_index()
000b38b0 t IVP_Poly_Surface::set(IVP_Template_Surface*, IVP_Object_Polygon_Tetra*)
001201f0 t IVP_Synapse_Real::get_mindist()
00120170 t IVP_Synapse_Real::init_synapse(IVP_Mindist*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
00120140 t IVP_Synapse_Real::update_synapse(IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
001201c0 t IVP_Synapse_Real::get_hull_manager()
0011c740 t IVP_Synapse_Real::print()
001201d0 t IVP_Synapse_Real::get_next()
001201e0 t IVP_Synapse_Real::get_prev()
00120160 t IVP_Synapse_Real::IVP_Synapse_Real()
00120160 t IVP_Synapse_Real::IVP_Synapse_Real()
0011ffb0 t IVP_Synapse_Real::~IVP_Synapse_Real()
0011ff80 t IVP_Synapse_Real::~IVP_Synapse_Real()
0011ff80 t IVP_Synapse_Real::~IVP_Synapse_Real()
000e8d10 t IVP_Time_Event_D::simulate_time_event(IVP_Environment*)
000e8e60 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000e8e60 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
000e8d90 t IVP_Time_Event_N::simulate_time_event(IVP_Environment*)
000e8e70 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
000e8e70 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
00108720 t IVP_Time_Manager::event_loop(IVP_Environment*, IVP_Time)
00108810 t IVP_Time_Manager::reset_time(IVP_Time)
00108340 t IVP_Time_Manager::insert_event(IVP_Time_Event*, IVP_Time)
00108560 t IVP_Time_Manager::remove_event(IVP_Time_Event*)
00108580 t IVP_Time_Manager::update_event(IVP_Time_Event*, IVP_Time)
001086a0 t IVP_Time_Manager::get_next_event(IVP_Time)
001085f0 t IVP_Time_Manager::get_next_event()
00108700 t IVP_Time_Manager::get_event_count()
001087f0 t IVP_Time_Manager::env_set_current_time(IVP_Environment*, IVP_Time)
00108780 t IVP_Time_Manager::simulate_variable_time_step(IVP_Environment*, float)
00108460 t IVP_Time_Manager::IVP_Time_Manager()
00108460 t IVP_Time_Manager::IVP_Time_Manager()
00108630 t IVP_Time_Manager::~IVP_Time_Manager()
00108630 t IVP_Time_Manager::~IVP_Time_Manager()
0010c770 t IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
0010b970 t IVP_U_Active_Add::print()
0010d980 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010d980 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010ce20 t IVP_U_Active_Add::~IVP_U_Active_Add()
0010cdc0 t IVP_U_Active_Add::~IVP_U_Active_Add()
0010cdc0 t IVP_U_Active_Add::~IVP_U_Active_Add()
0010cf90 t IVP_U_Active_Int::add_dependency(IVP_U_Active_Int_Listener*)
0010e0e0 t IVP_U_Active_Int::give_int_value()
0010c960 t IVP_U_Active_Int::update_derived()
0010cfd0 t IVP_U_Active_Int::remove_dependency(IVP_U_Active_Int_Listener*)
0010c500 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
0010c500 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
0010be70 t IVP_U_Active_Int::~IVP_U_Active_Int()
0010be10 t IVP_U_Active_Int::~IVP_U_Active_Int()
0010be10 t IVP_U_Active_Int::~IVP_U_Active_Int()
0010c720 t IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
0010b930 t IVP_U_Active_Sub::print()
0010da10 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010da10 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010cda0 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
0010cd40 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
0010cd40 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
00115620 t IVP_U_Float_Quat::set(IVP_U_Quat const*)
00114930 t IVP_U_Float_Quat::byte_swap()
000e3600 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e3460 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e3460 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
000e36d0 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e3940 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e3940 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
000e3530 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000e37a0 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000e37a0 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
00047a70 t CBuoyancyAttacher::get_parameters_per_core(IVP_Core*)
00047ba0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
00047ba0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
00048230 t CBuoyancyAttacher::~CBuoyancyAttacher()
000482d0 t CBuoyancyAttacher::~CBuoyancyAttacher()
000482d0 t CBuoyancyAttacher::~CBuoyancyAttacher()
00048690 t CFrictionSnapshot::GetMaterial(int)
00048570 t CFrictionSnapshot::GetNormalForce()
00048450 t CFrictionSnapshot::GetContactPoint(Vector&)
000485a0 t CFrictionSnapshot::GetSurfaceNormal(Vector&)
000484b0 t CFrictionSnapshot::NextFrictionData()
00048540 t CFrictionSnapshot::GetEnergyAbsorbed()
00048520 t CFrictionSnapshot::RecomputeFriction()
00048500 t CFrictionSnapshot::ClearFrictionForce()
000487c0 t CFrictionSnapshot::SetFrictionSynapse(IVP_Synapse_Friction*)
00048920 t CFrictionSnapshot::MarkContactForDelete()
000484a0 t CFrictionSnapshot::GetFrictionCoefficient()
000486d0 t CFrictionSnapshot::DeleteAllMarkedContacts(bool)
00048400 t CFrictionSnapshot::IsValid()
00048410 t CFrictionSnapshot::GetObject(int)
00048760 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
00048760 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
00048900 t CFrictionSnapshot::~CFrictionSnapshot()
000488b0 t CFrictionSnapshot::~CFrictionSnapshot()
000488b0 t CFrictionSnapshot::~CFrictionSnapshot()
00050570 t CMaterialIndexOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00050520 t CMaterialIndexOps::IsEmpty(SaveRestoreFieldInfo_t const&)
000504c0 t CMaterialIndexOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00050540 t CMaterialIndexOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00034db0 t CPhysicsCollision::ConvexFree(CPhysConvex*)
00034690 t CPhysicsCollision::CollideSize(CPhysCollide*)
00036610 t CPhysicsCollision::IsBBoxCache(CPhysCollide*)
00037720 t CPhysicsCollision::AddBBoxCache(CPhysCollideCompactSurface*, Vector const&, Vector const&)
00037650 t CPhysicsCollision::BBoxToConvex(Vector const&, Vector const&)
000347c0 t CPhysicsCollision::CollideIndex(CPhysCollide const*)
000346b0 t CPhysicsCollision::CollideWrite(char*, CPhysCollide*, bool)
000343e0 t CPhysicsCollision::ConvexVolume(CPhysConvex*)
00036680 t CPhysicsCollision::GetBBoxCache(Vector const&, Vector const&)
00034b50 t CPhysicsCollision::TraceCollide(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00037110 t CPhysicsCollision::VCollideLoad(vcollide_t*, int, char const*, int, bool)
00037950 t CPhysicsCollision::BBoxToCollide(Vector const&, Vector const&)
000368c0 t CPhysicsCollision::CollideVolume(CPhysCollide*)
00037800 t CPhysicsCollision::InitBBoxCache()
00034b30 t CPhysicsCollision::CollideGetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
00035f20 t CPhysicsCollision::DestroyCollide(CPhysCollide*)
000374d0 t CPhysicsCollision::PolysoupCreate()
00034a90 t CPhysicsCollision::VCollideUnload(vcollide_t*)
000376a0 t CPhysicsCollision::ConvexFromVerts(Vector**, int)
00036980 t CPhysicsCollision::CreateDebugMesh(CPhysCollide const*, Vector**)
00036510 t CPhysicsCollision::FastBboxCollide(CPhysCollideCompactSurface const*, Vector const&, Vector const&)
00034810 t CPhysicsCollision::OutputDebugInfo(CPhysCollide const*)
000360d0 t CPhysicsCollision::PolysoupDestroy(CPhysPolysoup*)
00035eb0 t CPhysicsCollision::CollideGetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
000358c0 t CPhysicsCollision::ConvexFromPlanes(float*, int, float)
000367b0 t CPhysicsCollision::CreateQueryModel(CPhysCollide*)
00034a70 t CPhysicsCollision::DestroyDebugMesh(int, Vector*)
00034830 t CPhysicsCollision::GetBBoxCacheSize(int*, int*)
00035f80 t CPhysicsCollision::ConvexSurfaceArea(CPhysConvex*)
00037ba0 t CPhysicsCollision::CreateVirtualMesh(virtualmeshparams_t const&)
000348a0 t CPhysicsCollision::DestroyQueryModel(ICollisionQuery*)
000346d0 t CPhysicsCollision::SetConvexGameData(CPhysConvex*, unsigned int)
00036800 t CPhysicsCollision::CollideSurfaceArea(CPhysCollide*)
00037200 t CPhysicsCollision::UnserializeCollide(char*, int, int)
00037510 t CPhysicsCollision::ConvexFromVertsFast(Vector**, int)
00034bb0 t CPhysicsCollision::PolysoupAddTriangle(CPhysPolysoup*, Vector const&, Vector const&, Vector const&, int)
00037ad0 t CPhysicsCollision::SupportsVirtualMesh()
00034740 t CPhysicsCollision::ThreadContextCreate()
00034760 t CPhysicsCollision::CollideGetMassCenter(CPhysCollide*, Vector*)
000347a0 t CPhysicsCollision::CollideSetMassCenter(CPhysCollide*, Vector const&)
00034f90 t CPhysicsCollision::PolyhedronFromConvex(CPhysConvex*, bool)
00034750 t CPhysicsCollision::ThreadContextDestroy(IPhysicsCollision*)
00034b10 t CPhysicsCollision::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
00034580 t CPhysicsCollision::ConvertConvexToCollide(CPhysConvex**, int)
000363e0 t CPhysicsCollision::RebuildConvexFromPlanes(CPhysConvex*, float)
00034a60 t CPhysicsCollision::VPhysicsKeyParserCreate(char const*)
00037230 t CPhysicsCollision::ConvertPolysoupToCollide(CPhysPolysoup*, bool)
00034a50 t CPhysicsCollision::VPhysicsKeyParserDestroy(IVPhysicsKeyParser*)
00034e40 t CPhysicsCollision::ConvexesFromConvexPolygon(Vector const&, Vector const*, int, CPhysConvex**)
00035670 t CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)
00035e60 t CPhysicsCollision::CollideGetOrthographicAreas(CPhysCollide const*)
000347e0 t CPhysicsCollision::CollideSetOrthographicAreas(CPhysCollide*, Vector const&)
00036d40 t CPhysicsCollision::ConvertConvexToCollideParams(CPhysConvex**, int, convertconvexparams_t const&)
00036b20 t CPhysicsCollision::GetConvexesUsedInCollideable(CPhysCollide const*, CPhysConvex**, int)
00037ac0 t CPhysicsCollision::ReadStat(int)
00034b70 t CPhysicsCollision::TraceBox(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000346f0 t CPhysicsCollision::TraceBox(Ray_t const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00034b90 t CPhysicsCollision::TraceBox(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00037e30 t CPhysicsCollision::~CPhysicsCollision()
00037dd0 t CPhysicsCollision::~CPhysicsCollision()
00037dd0 t CPhysicsCollision::~CPhysicsCollision()
00030410 t CPhysicsInterface::QueryInterface(char const*)
00030320 t CPhysicsInterface::FindCollisionSet(unsigned int)
000304d0 t CPhysicsInterface::CreateEnvironment()
00030370 t CPhysicsInterface::DestroyEnvironment(IPhysicsEnvironment*)
00030400 t CPhysicsInterface::CreateObjectPairHash()
00030300 t CPhysicsInterface::DestroyObjectPairHash(IPhysicsObjectPairHash*)
00030450 t CPhysicsInterface::DestroyAllCollisionSets()
00030510 t CPhysicsInterface::FindOrCreateCollisionSet(unsigned int, int)
000302d0 t CPhysicsInterface::GetActiveEnvironmentByIndex(int)
00030810 t CPhysicsInterface::~CPhysicsInterface()
00030810 t CPhysicsInterface::~CPhysicsInterface()
00050c00 t CPlayerController::IsInContact()
00051750 t CPlayerController::AttachObject()
00051870 t CPlayerController::DetachObject()
00053c10 t CPlayerController::GetLastImpulse(Vector*)
000507f0 t CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
00053cd0 t CPlayerController::GetPushMassLimit()
00053c90 t CPlayerController::SetPushMassLimit(float)
00053cf0 t CPlayerController::GetPushSpeedLimit()
00053fd0 t CPlayerController::GetShadowPosition(Vector*, QAngle*)
00050c80 t CPlayerController::GetShadowVelocity(Vector*)
00053cb0 t CPlayerController::SetPushSpeedLimit(float)
00051a00 t CPlayerController::TryTeleportObject()
00053d70 t CPlayerController::event_object_frozen(IVP_Event_Object*)
00053bc0 t CPlayerController::get_controller_name()
00053d30 t CPlayerController::event_object_created(IVP_Event_Object*)
00053d10 t CPlayerController::event_object_deleted(IVP_Event_Object*)
00053d50 t CPlayerController::event_object_revived(IVP_Event_Object*)
00053bb0 t CPlayerController::get_controller_priority()
00051b50 t CPlayerController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000507d0 t CPlayerController::Jump()
00050ef0 t CPlayerController::StepUp(float)
00051510 t CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00050d70 t CPlayerController::MaxSpeed(Vector const&)
00053c70 t CPlayerController::GetObject()
00051490 t CPlayerController::SetGround(CPhysicsObject*)
000518f0 t CPlayerController::SetObject(IPhysicsObject*)
00053be0 t CPlayerController::WasFrozen()
000517d0 t CPlayerController::CPlayerController(CPhysicsObject*)
000517d0 t CPlayerController::CPlayerController(CPhysicsObject*)
000519e0 t CPlayerController::~CPlayerController()
00051960 t CPlayerController::~CPlayerController()
00051960 t CPlayerController::~CPlayerController()
000508c0 t CShadowController::GetMaxSpeed(float*, float*)
000530a0 t CShadowController::AttachObject()
00053380 t CShadowController::DetachObject()
00053de0 t CShadowController::AllowsRotation()
00053e10 t CShadowController::GetLastImpulse(Vector*)
00053750 t CShadowController::WriteToTemplate(vphysics_save_cshadowcontroller_t&)
00053820 t CShadowController::InitFromTemplate(vphysics_save_cshadowcontroller_t const&)
00053db0 t CShadowController::AllowsTranslation()
00050900 t CShadowController::GetTargetPosition(Vector*, QAngle*)
00053ee0 t CShadowController::UseShadowMaterial(bool)
00053d90 t CShadowController::get_controller_name()
00050840 t CShadowController::GetTeleportDistance()
00050810 t CShadowController::SetTeleportDistance(float)
00053f60 t CShadowController::ObjectMaterialChanged(int)
00053eb0 t CShadowController::IsPhysicallyControlled()
00053d80 t CShadowController::get_controller_priority()
00053e70 t CShadowController::SetPhysicallyControlled(bool)
00052c80 t CShadowController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00050b70 t CShadowController::StepUp(float)
000509a0 t CShadowController::Update(Vector const&, QAngle const&, float)
00050880 t CShadowController::MaxSpeed(float, float)
00053510 t CShadowController::SetObject(IPhysicsObject*)
00053290 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
00053040 t CShadowController::CShadowController()
00053290 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
00053040 t CShadowController::CShadowController()
000534e0 t CShadowController::~CShadowController()
00053480 t CShadowController::~CShadowController()
00053480 t CShadowController::~CShadowController()
         U CThreadSpinRWLock::UnlockRead()
         U CThreadSpinRWLock::LockForRead()
         U CThreadSpinRWLock::UnlockWrite()
         U CThreadSpinRWLock::SpinLockForWrite(unsigned int)
         U CThreadSyncObject::~CThreadSyncObject()
000733c0 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
00073470 t CUtlInplaceBuffer::InplaceGetLinePtr()
00073b80 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
00073b80 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
0004a970 t CUtlSymbolTableMT::AddString(char const*)
0004a9c0 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
0004a9c0 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
00037b80 t IPhysicsCollision::~IPhysicsCollision()
00037a20 t IPhysicsCollision::~IPhysicsCollision()
00037a20 t IPhysicsCollision::~IPhysicsCollision()
000d10b0 t IVP_Compact_Ledge::is_compact()
000d0bc0 t IVP_Compact_Ledge::c_ledge_init()
000d0c50 t IVP_Compact_Ledge::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000d0fd0 t IVP_Compact_Ledge::set_is_compact(IVP_BOOL)
000d1000 t IVP_Compact_Ledge::get_point_array()
000d10e0 t IVP_Compact_Ledge::set_client_data(unsigned int)
000d1020 t IVP_Compact_Ledge::get_first_triangle()
000d0fa0 t IVP_Compact_Ledge::set_offset_ledge_points(int)
000d0fb0 t IVP_Compact_Ledge::set_size(int)
000d0bf0 t IVP_Compact_Ledge::byte_swap()
000fdb70 t IVP_Contact_Point::reset_time(IVP_Time)
000f9ef0 t IVP_Contact_Point::get_material_info(IVP_Material**)
000fae30 t IVP_Contact_Point::calc_coll_distance()
000fe8c0 t IVP_Contact_Point::get_contact_normal(IVP_U_Float_Point*)
000fe870 t IVP_Contact_Point::recompute_friction()
000fe8e0 t IVP_Contact_Point::set_contact_normal(IVP_U_Float_Point const&)
000eac80 t IVP_Contact_Point::two_values_friction(IVP_U_Float_Point*)
000fd070 t IVP_Contact_Point::p_calc_friction_s_PK(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fcf20 t IVP_Contact_Point::p_calc_friction_s_PP(IVP_U_Point const*, IVP_U_Point const*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fcce0 t IVP_Contact_Point::p_calc_friction_qr_PF(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fd470 t IVP_Contact_Point::p_calc_friction_ss_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
000fdb90 t IVP_Contact_Point::recalc_friction_s_vals()
000eb250 t IVP_Contact_Point::static_friction_single(IVP_Event_Sim const*, float, float)
000ecc40 t IVP_Contact_Point::ease_the_friction_force(IVP_U_Float_Point*)
000fada0 t IVP_Contact_Point::get_rescue_speed_impact(IVP_Environment*)
000ecbe0 t IVP_Contact_Point::set_friction_to_neutral()
000faca0 t IVP_Contact_Point::get_rot_speed_uncertainty()
000ef7c0 t IVP_Contact_Point::calc_virtual_mass_of_mindist()
000eb130 t IVP_Contact_Point::get_and_set_real_friction_len(IVP_U_Float_Point*)
000ec460 t IVP_Contact_Point::friction_force_local_constraint_1d(IVP_Event_Sim const*)
000ec0f0 t IVP_Contact_Point::friction_force_local_constraint_2d(IVP_Event_Sim const*)
000fa000 t IVP_Contact_Point::read_materials_for_contact_situation(IVP_Impact_Solver_Long_Term*)
000eb660 t IVP_Contact_Point::friction_force_local_constraint_2d_wheel(IVP_Core*, IVP_Impact_Solver_Long_Term*, IVP_Event_Sim const*, float&)
000eaa60 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
000eaa60 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
000ed3f0 t IVP_Contact_Point::~IVP_Contact_Point()
000ed3f0 t IVP_Contact_Point::~IVP_Contact_Point()
000e8140 t IVP_Debug_Manager::init_debug_manager()
000e8100 t IVP_Debug_Manager::clear_debug_manager()
000e81c0 t IVP_Debug_Manager::IVP_Debug_Manager()
000e81c0 t IVP_Debug_Manager::IVP_Debug_Manager()
000e8130 t IVP_Debug_Manager::~IVP_Debug_Manager()
000e8130 t IVP_Debug_Manager::~IVP_Debug_Manager()
00108710 t IVP_Event_Manager::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
00108260 t IVP_Event_Manager::simulate_variable_time_step(IVP_Time_Manager*, IVP_Environment*, IVP_Time_Event_PSI*, float)
00108900 t IVP_Event_Manager::~IVP_Event_Manager()
00108890 t IVP_Event_Manager::~IVP_Event_Manager()
00108890 t IVP_Event_Manager::~IVP_Event_Manager()
000fbc70 t IVP_Friction_Hash::~IVP_Friction_Hash()
000fbc70 t IVP_Friction_Hash::~IVP_Friction_Hash()
00093f70 t IVP_Halfspacesoup::add_halfspace(IVP_U_Hesse const*)
000941a0 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00093eb0 t IVP_Halfspacesoup::IVP_Halfspacesoup()
000941a0 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00093eb0 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00093ed0 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
00093ed0 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
000f83c0 t IVP_Impact_Solver::confirm_impact(int)
000f8e70 t IVP_Impact_Solver::delay_decision(IVP_Core**)
000f8550 t IVP_Impact_Solver::do_rescue_push(IVP_U_Float_Point*, IVP_BOOL)
000f8d90 t IVP_Impact_Solver::delay_of_impact(int)
000f8ca0 t IVP_Impact_Solver::do_push_on_core(IVP_U_Float_Point*, int)
000f7d60 t IVP_Impact_Solver::get_total_energy()
000f9520 t IVP_Impact_Solver::estimate_push_impulse()
000f9f70 t IVP_Impact_Solver::get_cos_sin_for_impact(float, float, float*, float*)
000f8130 t IVP_Impact_Solver::get_world_push_direction()
000f8e20 t IVP_Impact_Solver::clear_change_values_cores()
000f7dc0 t IVP_Impact_Solver::get_relative_speed_vector()
000f9400 t IVP_Impact_Solver::calc_virt_masses_impact_solver(IVP_U_Float_Point const*)
000fa960 t IVP_Impact_Solver::get_world_direction_second_friction(IVP_Contact_Point*)
000f7e60 t IVP_Impact_Solver::get_world_push_direction_two_friction(double)
000f90b0 t IVP_Impact_Solver::do_push(double)
000f95c0 t IVP_Impact_Solver::do_impact(IVP_Core**, IVP_BOOL, int, float)
000f8460 t IVP_Impact_Solver::undo_push()
000fb0a0 t IVP_Impact_System::test_loop_all_pairs()
000fa710 t IVP_Impact_System::add_pair_to_impact_system(IVP_Friction_Core_Pair*)
000fa8a0 t IVP_Impact_System::pair_is_already_in_system(IVP_Friction_Core_Pair*)
000fb2c0 t IVP_Impact_System::recalc_all_affected_cores()
000fa910 t IVP_Impact_System::invalidate_impact_mindists(IVP_Core*)
000fafe0 t IVP_Impact_System::debug_check_all_dists_at_end()
000fb5a0 t IVP_Impact_System::init_and_solve_impact_system(IVP_Mindist*, IVP_Friction_System*, IVP_Friction_Core_Pair*, IVP_Contact_Point*)
000fa670 t IVP_Impact_System::impact_system_check_start_pair(IVP_Friction_Core_Pair*, IVP_Contact_Point*)
000fa780 t IVP_Impact_System::add_pushed_core_with_pairs_except(IVP_Core*, IVP_Friction_Core_Pair*)
000fa750 t IVP_Impact_System::synchronize_core_for_impact_system(IVP_Core*)
000b1de0 t IVP_I_Point_VHash::find_point(IVP_U_Point*)
000b1d80 t IVP_I_Point_VHash::remove_point(IVP_U_Point*)
000b1b50 t IVP_I_Point_VHash::point_to_index(IVP_U_Point*)
000b1d20 t IVP_I_Point_VHash::add_point(IVP_U_Point*)
000b1e70 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000b1e70 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
000b1a90 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000b1a70 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000b1a70 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
000f7b90 t IVP_Listener_Hull::hull_manager_is_reset(float, float)
00126d10 t IVP_Range_Manager::get_coll_range_in_world(IVP_Real_Object const*)
00126da0 t IVP_Range_Manager::environment_will_be_deleted(IVP_Environment*)
00126c00 t IVP_Range_Manager::get_coll_range_intra_objects(IVP_Real_Object const*, IVP_Real_Object const*, double*, double*)
00126dc0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
00126dc0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
000d3a70 t IVP_Ray_Solver_Os::check_ray_against_compact_ledge_os(IVP_Compact_Ledge const*)
000d4190 t IVP_Ray_Solver_Os::check_ray_against_compact_surface_os(IVP_Compact_Surface const*)
000d4020 t IVP_Ray_Solver_Os::check_ray_against_ledge_tree_node_os(IVP_Compact_Ledgetree_Node const*)
000d41b0 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000d41b0 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
000b7980 t IVP_Tetra_Intrude::checkin_edge(IVP_Tri_Edge*)
000b7790 t IVP_Tetra_Intrude::point_2_bits(IVP_U_Point*, IVP_U_Point*, int*)
000b7ab0 t IVP_Tetra_Intrude::checkout_edge(IVP_Tri_Edge*)
000b8300 t IVP_Tetra_Intrude::check_intrusion(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int, IVP_Intrusion_Status*)
000b7820 t IVP_Tetra_Intrude::init_tetra_edge(IVP_Tetra_Edge*, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge*)
000b8e10 t IVP_Tetra_Intrude::calc_intrusion_status(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int)
000b76f0 t IVP_Tetra_Intrude::pe(int)
000b7530 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000b7530 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
000b76a0 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
000b76a0 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
0010c670 t IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
0010bb20 t IVP_U_Active_Mult::print()
0010db40 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010db40 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010cca0 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0010cc40 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0010cc40 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
0010c8b0 t IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
0010bcd0 t IVP_U_Active_Sine::print()
0010d770 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, double, double, double, double)
0010d770 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, double, double, double, double)
0010cf70 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
0010cf20 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
0010cf20 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
001108b0 t IVP_U_Float_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00110730 t IVP_U_Float_Hesse::mult_hesse(double)
001109d0 t IVP_U_Float_Hesse::calc_hesse_val(IVP_U_Float_Point const*)
00114680 t IVP_U_Float_Hesse::set4(IVP_U_Float_Hesse const*)
00110a10 t IVP_U_Float_Hesse::normize()
00114710 t IVP_U_Float_Hesse::byte_swap()
001146d0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(double, double, double, double)
001146c0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
001146d0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(double, double, double, double)
001146c0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
00114970 t IVP_U_Float_Point::set_to_zero()
00115790 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, double)
00114b10 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
0010f520 t IVP_U_Float_Point::fast_normize()
00115810 t IVP_U_Float_Point::set_multiple(IVP_U_Quat const*, double)
001149b0 t IVP_U_Float_Point::set_multiple(IVP_U_Float_Point const*, double)
00114a10 t IVP_U_Float_Point::set_negative(IVP_U_Float_Point const*)
0010f230 t IVP_U_Float_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
00114b90 t IVP_U_Float_Point::set_pairwise_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0010f9d0 t IVP_U_Float_Point::calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0010f890 t IVP_U_Float_Point::set_orthogonal_part(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00114c50 t IVP_U_Float_Point::inline_subtract_and_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*, double)
0010f470 t IVP_U_Float_Point::real_length_plus_normize()
001150f0 t IVP_U_Float_Point::inline_calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00116660 t IVP_U_Float_Point::inline_calc_cross_product_and_normize(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00115750 t IVP_U_Float_Point::add(IVP_U_Float_Point const*)
00114bd0 t IVP_U_Float_Point::add(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00115670 t IVP_U_Float_Point::set(float, float, float)
001156f0 t IVP_U_Float_Point::set(float const*)
00114990 t IVP_U_Float_Point::set(IVP_U_Float_Point const*)
001151a0 t IVP_U_Float_Point::inline_set_vert_to_area_defined_by_three_points(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00114a70 t IVP_U_Float_Point::mult(double)
0010ffd0 t IVP_U_Float_Point::rotate(IVP_COORDINATE_INDEX, float)
0010f5e0 t IVP_U_Float_Point::normize()
00115710 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*)
00114c10 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00114390 t IVP_U_Float_Point::byte_swap()
0010f720 t IVP_U_Float_Point::line_sqrt()
00114350 t IVP_U_Float_Point::IVP_U_Float_Point(double, double, double)
00115d10 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
00114340 t IVP_U_Float_Point::IVP_U_Float_Point()
00114350 t IVP_U_Float_Point::IVP_U_Float_Point(double, double, double)
00115d10 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
00114340 t IVP_U_Float_Point::IVP_U_Float_Point()
0010efb0 t IVP_U_String_Hash::add(char const*, void*)
0010f050 t IVP_U_String_Hash::remove(char const*)
0010ee70 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
0010ee70 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
0010eea0 t IVP_U_String_Hash::~IVP_U_String_Hash()
0010eea0 t IVP_U_String_Hash::~IVP_U_String_Hash()
00119910 t IVP_U_Vector_Base::increment_mem()
000b2440 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
000b2440 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
00067170 t CDefSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00050480 t CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
00067190 t CDefSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
00067180 t CDefSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
000671a0 t CDefSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00038060 t CPhysicsConstraint::Deactivate()
0003a8d0 t CPhysicsConstraint::InitLength(IVP_Environment*, CPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0003a550 t CPhysicsConstraint::InitPulley(IVP_Environment*, CPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003c080 t CPhysicsConstraint::InitRagdoll(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003a040 t CPhysicsConstraint::InitSliding(IVP_Environment*, CPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003d580 t CPhysicsConstraint::SetGameData(void*)
0003be00 t CPhysicsConstraint::DetachListener()
00039d70 t CPhysicsConstraint::InitBallsocket(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
00038220 t CPhysicsConstraint::SetLinearMotor(float, float)
0003d640 t CPhysicsConstraint::OutputDebugInfo()
000382b0 t CPhysicsConstraint::SetAngularMotor(float, float)
0003bfc0 t CPhysicsConstraint::SetupRagdollAxis(int, constraint_axislimit_t const&, hk_Limited_Ball_Socket_BP*)
0003d5f0 t CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003d5b0 t CPhysicsConstraint::event_object_created(IVP_Event_Object*)
0003bf30 t CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003d5d0 t CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
00038660 t CPhysicsConstraint::UpdateRagdollTransforms(matrix3x4_t const&, matrix3x4_t const&)
00038090 t CPhysicsConstraint::Activate()
00039a90 t CPhysicsConstraint::InitFixed(IVP_Environment*, CPhysicsConstraintGroup*, constraint_fixedparams_t const&)
00039510 t CPhysicsConstraint::InitHinge(IVP_Environment*, CPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
00039440 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
00039440 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
0003bf00 t CPhysicsConstraint::~CPhysicsConstraint()
0003be70 t CPhysicsConstraint::~CPhysicsConstraint()
0003be70 t CPhysicsConstraint::~CPhysicsConstraint()
00070e50 t CUtlCharConversion::FindConversion(char const*, int*)
00070ef0 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00070ef0 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000578e0 t CVehicleController::CalcEngine(float, float, bool, float, bool)
00054b30 t CVehicleController::IsBoosting()
00055b10 t CVehicleController::ResetState()
00055d90 t CVehicleController::CreateWheel(int, vehicle_axleparams_t&)
000574c0 t CVehicleController::CalcSteering(float, float, float, bool)
00057e00 t CVehicleController::UpdateEngine(vehicle_controlparams_t const&, float, float, float, bool, bool)
000589d0 t CVehicleController::GetWheelCount()
000568b0 t CVehicleController::InitCarSystem(CPhysicsObject*)
00054b60 t CVehicleController::OnVehicleExit()
00054af0 t CVehicleController::UpdateBooster(float)
00055d70 t CVehicleController::AttachListener()
00054ec0 t CVehicleController::OnVehicleEnter()
00057140 t CVehicleController::UpdateSkidding(bool)
000576e0 t CVehicleController::UpdateSteering(vehicle_controlparams_t const&, float, float)
000560c0 t CVehicleController::CreateTraceData(int, vehicle_axleparams_t&)
00056a30 t CVehicleController::InitVehicleData(vehicleparams_t const&)
00054ad0 t CVehicleController::SetSpringLength(int, float)
00057000 t CVehicleController::UpdateHandbrake(vehicle_controlparams_t const&, float, bool, bool)
000580c0 t CVehicleController::WriteToTemplate(vphysics_save_cvehiclecontroller_t&)
000565c0 t CVehicleController::CreateIVPObjects()
000589b0 t CVehicleController::GetVehicleParams()
000583a0 t CVehicleController::InitFromTemplate(CPhysicsEnvironment*, void*, IPhysicsGameTrace*, vphysics_save_cvehiclecontroller_t const&)
00058a00 t CVehicleController::IsEngineDisabled()
00054e90 t CVehicleController::SetWheelFriction(int, float)
00056c90 t CVehicleController::UpdatePowerslide(vehicle_controlparams_t const&, bool, float)
000562a0 t CVehicleController::InitCarSystemBody(IVP_Template_Car_System&)
000589e0 t CVehicleController::SetEngineDisabled(bool)
00056840 t CVehicleController::ShutdownCarSystem()
000572a0 t CVehicleController::UpdateExtraForces()
00054a20 t CVehicleController::VehicleDataReload()
000589a0 t CVehicleController::GetOperatingParams()
00058a60 t CVehicleController::event_object_frozen(IVP_Event_Object*)
00056310 t CVehicleController::InitCarSystemWheels(IVP_Template_Car_System&)
00058a20 t CVehicleController::event_object_created(IVP_Event_Object*)
00056980 t CVehicleController::event_object_deleted(IVP_Event_Object*)
00058a40 t CVehicleController::event_object_revived(IVP_Event_Object*)
00054f80 t CVehicleController::GetWheelContactPoint(int, Vector*, int*)
00057490 t CVehicleController::UpdateWheelPositions()
00054c80 t CVehicleController::GetCarSystemDebugData(vehicle_debugcarsystem_t&)
00057760 t CVehicleController::CalcEngineTransmission(float)
00056ef0 t CVehicleController::UpdateEngineTurboStart(vehicle_controlparams_t const&, float)
00056fa0 t CVehicleController::UpdateEngineTurboFinish()
000589c0 t CVehicleController::GetVehicleParamsForChange()
00057e80 t CVehicleController::Update(float, vehicle_controlparams_t&)
00054f10 t CVehicleController::GetWheel(int)
00056c30 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
00055d50 t CVehicleController::CVehicleController()
00056c30 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
00055d50 t CVehicleController::CVehicleController()
00056a10 t CVehicleController::~CVehicleController()
000569b0 t CVehicleController::~CVehicleController()
000569b0 t CVehicleController::~CVehicleController()
00090850 t hk_Rigid_Body_Core::apply_impulses(hk_Core_VMQ_Input&, float const*)
00090610 t hk_Rigid_Body_Core::add_to_mass_matrix_inv(hk_Core_VMQ_Input&, hk_Dense_Matrix&, float*)
0003d620 t IPhysicsConstraint::~IPhysicsConstraint()
0003d560 t IPhysicsConstraint::~IPhysicsConstraint()
0003d560 t IPhysicsConstraint::~IPhysicsConstraint()
000d7760 t IVP_Actuator_Extra::do_float_cam(double)
000d74f0 t IVP_Actuator_Extra::do_puck_force(double)
000d6380 t IVP_Actuator_Extra::get_float_cam_props(double*, double*, double*, double*)
000d4f40 t IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000d7660 t IVP_Actuator_Extra::calc_float_cam_matrix(IVP_U_Matrix*)
000d79f0 t IVP_Actuator_Extra::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d6360 t IVP_Actuator_Extra::get_force()
000d7140 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000d7140 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
000d6b30 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000d6a60 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000d6a60 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
000d7d00 t IVP_Actuator_Force::get_controller_name()
000d5250 t IVP_Actuator_Force::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d62d0 t IVP_Actuator_Force::set_force(double)
000d72f0 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000d72f0 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
000d6bf0 t IVP_Actuator_Force::~IVP_Actuator_Force()
000d6b50 t IVP_Actuator_Force::~IVP_Actuator_Force()
000d6b50 t IVP_Actuator_Force::~IVP_Actuator_Force()
00109370 t IVP_Anomaly_Limits::get_max_collisions_per_psi()
00108b10 t IVP_Anomaly_Limits::environment_will_be_deleted(IVP_Environment*)
00109380 t IVP_Anomaly_Limits::get_max_collision_checks_per_psi()
00108bf0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
00108bf0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
00108af0 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
00108970 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
00108970 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
000ddeb0 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000ddeb0 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
000e62a0 t IVP_Core_Collision::split_collision_merged_core_next_PSI()
000e7450 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000e7450 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
000e7920 t IVP_Freeze_Manager::init_freeze_manager()
000e7910 t IVP_Freeze_Manager::IVP_Freeze_Manager()
000e7910 t IVP_Freeze_Manager::IVP_Freeze_Manager()
00066a10 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000669a0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000669a0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
000b1940 t IVP_I_FPoint_VHash::find_point(IVP_U_Float_Point*)
000b18e0 t IVP_I_FPoint_VHash::remove_point(IVP_U_Float_Point*)
000b1840 t IVP_I_FPoint_VHash::point_to_index(IVP_U_Float_Point*)
000b1880 t IVP_I_FPoint_VHash::add_point(IVP_U_Float_Point*)
000b19d0 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000b19d0 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
000b1810 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000b17f0 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000b17f0 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
000d4e30 t IVP_Ray_Solver_Min::get_ray_hit()
000d4e50 t IVP_Ray_Solver_Min::get_ray_dist()
000d2fc0 t IVP_Ray_Solver_Min::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, double, IVP_U_Point*)
000d4e60 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000d4e60 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
000d4d40 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000d4d30 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
000d4d30 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
0010b040 t IVP_SurfaceManager::add_reference_to_ledge(IVP_Compact_Ledge const*)
0010b050 t IVP_SurfaceManager::remove_reference_to_ledge(IVP_Compact_Ledge const*)
0010b030 t IVP_SurfaceManager::get_ledge_specific_client_data(IVP_Compact_Ledge const*)
0010b010 t IVP_SurfaceManager::set_ledge_specific_client_data(IVP_Compact_Ledge*, unsigned int)
0010aff0 t IVP_SurfaceManager::~IVP_SurfaceManager()
0010afe0 t IVP_SurfaceManager::~IVP_SurfaceManager()
0010afe0 t IVP_SurfaceManager::~IVP_SurfaceManager()
000d5870 t IVP_Template_Force::IVP_Template_Force()
000d5870 t IVP_Template_Force::IVP_Template_Force()
00108380 t IVP_Time_Event_PSI::simulate_time_event(IVP_Environment*)
00108960 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
00108960 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
001a6ef0 d IVP_U_Active_Float::change_meter
0010ca60 t IVP_U_Active_Float::add_dependency(IVP_U_Active_Float_Listener*)
0010c550 t IVP_U_Active_Float::update_derived()
0010e0c0 t IVP_U_Active_Float::get_float_value()
0010e0b0 t IVP_U_Active_Float::give_double_value()
0010caa0 t IVP_U_Active_Float::remove_dependency(IVP_U_Active_Float_Listener*)
0010c4b0 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
0010c4b0 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
0010bdf0 t IVP_U_Active_Float::~IVP_U_Active_Float()
0010bd90 t IVP_U_Active_Float::~IVP_U_Active_Float()
0010bd90 t IVP_U_Active_Float::~IVP_U_Active_Float()
0010c620 t IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
0010bad0 t IVP_U_Active_Limit::print()
0010dbd0 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, double, double)
0010dbd0 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, double, double)
0010cc20 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0010cbd0 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0010cbd0 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
0010c7c0 t IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
0010bc00 t IVP_U_Active_Pulse::print()
0010d8d0 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, double, int, int, double, double)
0010d8d0 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, double, int, int, double, double)
0010ce90 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0010ce40 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0010ce40 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
0010e060 t IVP_U_Active_Value::add_reference()
0010e070 t IVP_U_Active_Value::remove_reference()
0010e0a0 t IVP_U_Active_Value::get_name()
0010c480 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
0010c480 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
0010bd70 t IVP_U_Active_Value::~IVP_U_Active_Value()
0010bd40 t IVP_U_Active_Value::~IVP_U_Active_Value()
0010bd40 t IVP_U_Active_Value::~IVP_U_Active_Value()
001156b0 t IVP_U_Float_Point3::set(double const*)
00115690 t IVP_U_Float_Point3::set(float const*)
00114310 t IVP_U_Float_Point3::byte_swap()
00133930 t IVP_U_Matrix_Cache::calc_matrix_at(IVP_Time, int)
001339a0 t IVP_U_Matrix_Cache::calc_matrix_at_now(IVP_Time, int)
00133a90 t IVP_U_Matrix_Cache::calc_calc_matrix_cache(IVP_Cache_Object*)
001afaf0 b IVP_U_Matrix_Cache::hits
001afaec b IVP_U_Matrix_Cache::misses
001339b0 t IVP_U_Matrix_Cache::p_init(IVP_Cache_Object*)
00133a20 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
00133a20 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
00049410 t CIVPMaterialManager::SetPropMap(int*, int)
0004a8c0 t CIVPMaterialManager::get_elasticity(IVP_Contact_Situation*)
0004a900 t CIVPMaterialManager::get_friction_factor(IVP_Contact_Situation*)
00048cb0 t CIVPMaterialManager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
000492b0 t CIVPMaterialManager::CIVPMaterialManager()
000492b0 t CIVPMaterialManager::CIVPMaterialManager()
0004a860 t CIVPMaterialManager::~CIVPMaterialManager()
0004a800 t CIVPMaterialManager::~CIVPMaterialManager()
0004a800 t CIVPMaterialManager::~CIVPMaterialManager()
0003e4c0 t CPhysicsEnvironment::ClearStats()
0003ed30 t CPhysicsEnvironment::PhantomAdd(CPhysicsObject*)
00067120 t CPhysicsEnvironment::PreRestore(physprerestoreparams_t const&)
0003e870 t CPhysicsEnvironment::SetGravity(Vector const&)
00066e00 t CPhysicsEnvironment::PostRestore()
0003e820 t CPhysicsEnvironment::CreateSpring(IPhysicsObject*, IPhysicsObject*, springparams_t*)
000401f0 t CPhysicsEnvironment::DestroyObject(IPhysicsObject*)
0003e190 t CPhysicsEnvironment::DestroySpring(IPhysicsSpring*)
0003ed70 t CPhysicsEnvironment::PhantomRemove(CPhysicsObject*)
0003e310 t CPhysicsEnvironment::SetAirDensity(float)
00040890 t CPhysicsEnvironment::SetQuickDelete(bool)
00040560 t CPhysicsEnvironment::TransferObject(IPhysicsObject*, IPhysicsEnvironment*)
0003e030 t CPhysicsEnvironment::GetDebugOverlay()
0003dfe0 t CPhysicsEnvironment::SetDebugOverlay(void* (*)(char const*, int*))
0003edb0 t CPhysicsEnvironment::ClearDeadObjects()
00040410 t CPhysicsEnvironment::CreatePolyObject(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003e360 t CPhysicsEnvironment::SweepCollideable(CPhysCollide const*, Vector const&, Vector const&, QAngle const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
0003eec0 t CPhysicsEnvironment::CleanupDeleteList()
0003f620 t CPhysicsEnvironment::DestroyConstraint(IPhysicsConstraint*)
000408b0 t CPhysicsEnvironment::EnableDeleteQueue(bool)
00040180 t CPhysicsEnvironment::CreateSphereObject(float, int, Vector const&, QAngle const&, objectparams_t*, bool)
0003e980 t CPhysicsEnvironment::DebugCheckContacts()
0003e1e0 t CPhysicsEnvironment::SetCollisionSolver(IPhysicsCollisionSolver*)
000404d0 t CPhysicsEnvironment::AddPlayerController(IPhysicsPlayerController*)
0003ecd0 t CPhysicsEnvironment::FindPlayerController(IPhysicsObject*)
0003e620 t CPhysicsEnvironment::ResetSimulationClock()
0003e670 t CPhysicsEnvironment::CreateConstraintGroup(constraint_groupparams_t const&)
0003e710 t CPhysicsEnvironment::CreateFixedConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
00040480 t CPhysicsEnvironment::CreateFluidController(IPhysicsObject*, fluidparams_t*)
0003e750 t CPhysicsEnvironment::CreateHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_hingeparams_t const&)
0003e220 t CPhysicsEnvironment::SetObjectEventHandler(IPhysicsObjectEvent*)
0003e5f0 t CPhysicsEnvironment::SetSimulationTimestep(float)
0003e690 t CPhysicsEnvironment::CreateLengthConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
0003e5c0 t CPhysicsEnvironment::CreateMotionController(IMotionEvent*)
00040530 t CPhysicsEnvironment::CreatePlayerController(IPhysicsObject*)
000403a0 t CPhysicsEnvironment::CreatePolyObjectStatic(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
0003e6b0 t CPhysicsEnvironment::CreatePulleyConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
0003e5d0 t CPhysicsEnvironment::CreateShadowController(IPhysicsObject*, bool, bool)
0003e1b0 t CPhysicsEnvironment::DestroyConstraintGroup(IPhysicsConstraintGroup*)
0003eab0 t CPhysicsEnvironment::DestroyFluidController(IPhysicsFluidController*)
0003e4b0 t CPhysicsEnvironment::EnableConstraintNotify(bool)
0003ec20 t CPhysicsEnvironment::RemovePlayerController(IPhysicsPlayerController*)
0003e4f0 t CPhysicsEnvironment::SetPerformanceSettings(physics_performanceparams_t const*)
0003e800 t CPhysicsEnvironment::CreateRagdollConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
0003e6f0 t CPhysicsEnvironment::CreateSlidingConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
0003e5b0 t CPhysicsEnvironment::CreateVehicleController(IPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
0003e280 t CPhysicsEnvironment::DestroyMotionController(IPhysicsMotionController*)
0003eca0 t CPhysicsEnvironment::DestroyPlayerController(IPhysicsPlayerController*)
0003e260 t CPhysicsEnvironment::DestroyShadowController(IPhysicsShadowController*)
0003e840 t CPhysicsEnvironment::SerializeObjectToBuffer(IPhysicsObject*, unsigned char*, unsigned int)
0003e2a0 t CPhysicsEnvironment::DestroyVehicleController(IPhysicsVehicleController*)
0003ebe0 t CPhysicsEnvironment::GetCollisionEventHandler()
0003ebf0 t CPhysicsEnvironment::NotifyConstraintDisabled(IPhysicsConstraint*)
0003e200 t CPhysicsEnvironment::SetCollisionEventHandler(IPhysicsCollisionEvent*)
0003e240 t CPhysicsEnvironment::SetConstraintEventHandler(IPhysicsConstraintEvent*)
0003e6d0 t CPhysicsEnvironment::CreateBallsocketConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
00040340 t CPhysicsEnvironment::UnserializeObjectFromBuffer(void*, unsigned char*, unsigned int, bool)
0003e730 t CPhysicsEnvironment::CreateLimitedHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
00066d60 t CPhysicsEnvironment::Save(physsaveparams_t const&)
00067060 t CPhysicsEnvironment::Restore(physrestoreparams_t const&)
0003f6d0 t CPhysicsEnvironment::Simulate(float)
0003e1d0 t CPhysicsEnvironment::TraceBox(CGameTrace*, Vector const&, Vector const&, Vector const&, Vector const&)
0003e350 t CPhysicsEnvironment::TraceRay(Ray_t const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
0003e400 t CPhysicsEnvironment::ReadStats(physics_stats_t*)
0003efa0 t CPhysicsEnvironment::CPhysicsEnvironment()
0003efa0 t CPhysicsEnvironment::CPhysicsEnvironment()
0003f600 t CPhysicsEnvironment::~CPhysicsEnvironment()
0003f360 t CPhysicsEnvironment::~CPhysicsEnvironment()
0003f360 t CPhysicsEnvironment::~CPhysicsEnvironment()
00078020 t CUtlConstStringBase<char>::Set(char const*)
00073c40 t CUtlNoEscConversion::FindConversion(char const*, int*)
0007fe80 t hk_Fixed_Constraint::init_constraint(void const*)
0007fb40 t hk_Fixed_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0007ffc0 t hk_Fixed_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00080050 t hk_Fixed_Constraint::get_constraint_dof()
0007fe90 t hk_Fixed_Constraint::write_to_blueprint(hk_Fixed_BP*)
00080040 t hk_Fixed_Constraint::get_constraint_type()
0007fb30 t hk_Fixed_Constraint::get_vmq_storage_size()
0007fe10 t hk_Fixed_Constraint::init_fixed_constraint(hk_Fixed_BP const*)
000800b0 t hk_Fixed_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0007ff00 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007ff60 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007ff00 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007ff60 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00080080 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00080060 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00080060 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
000816c0 t hk_Hinge_BP_Builder::set_axis_ws(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&)
00081690 t hk_Hinge_BP_Builder::set_position_os(int, hk_Vector3 const&)
00081c30 t hk_Hinge_BP_Builder::set_axis_perp_os(int, hk_Vector3 const&)
00081cd0 t hk_Hinge_BP_Builder::set_angular_motor(float, float)
00081d00 t hk_Hinge_BP_Builder::set_angular_limits(float, float)
00081d70 t hk_Hinge_BP_Builder::set_joint_friction(float)
00081da0 t hk_Hinge_BP_Builder::set_tau(float)
00084870 t hk_Hinge_Constraint::set_limits(float, float)
000848f0 t hk_Hinge_Constraint::set_friction(float)
000845a0 t hk_Hinge_Constraint::init_constraint(void const*)
00081dc0 t hk_Hinge_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
000847f0 t hk_Hinge_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00084980 t hk_Hinge_Constraint::get_constraint_dof()
000845b0 t hk_Hinge_Constraint::write_to_blueprint(hk_Hinge_BP*)
00084970 t hk_Hinge_Constraint::get_constraint_type()
00081db0 t hk_Hinge_Constraint::get_vmq_storage_size()
00083c00 t hk_Hinge_Constraint::init_hinge_constraint(hk_Hinge_BP const*)
000820c0 t hk_Hinge_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00084930 t hk_Hinge_Constraint::set_motor(float, float)
00084670 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00084730 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00084670 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00084730 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000849b0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00084990 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00084990 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
00041260 t IPhysicsEnvironment::~IPhysicsEnvironment()
00040880 t IPhysicsEnvironment::~IPhysicsEnvironment()
00040880 t IPhysicsEnvironment::~IPhysicsEnvironment()
001205b0 t IVP_3D_Solver_PK_KK::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000d8dc0 t IVP_Actuator_Spring::get_constant()
000d8b00 t IVP_Actuator_Spring::set_constant(double)
000d8dd0 t IVP_Actuator_Spring::get_damp_factor()
000d8e00 t IVP_Actuator_Spring::get_only_stretch()
000d8de0 t IVP_Actuator_Spring::get_rel_pos_damp()
000d8b60 t IVP_Actuator_Spring::set_rel_pos_damp(double)
000d8ac0 t IVP_Actuator_Spring::set_break_max_len(double)
000d8da0 t IVP_Actuator_Spring::get_controller_name()
000d8470 t IVP_Actuator_Spring::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d8420 t IVP_Actuator_Spring::fire_event_spring_broken()
000d8df0 t IVP_Actuator_Spring::get_spring_length_zero_force()
000d8940 t IVP_Actuator_Spring::set_len(double)
000d8b30 t IVP_Actuator_Spring::set_damp(double)
000d87c0 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000d87c0 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
000d8300 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000d8170 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000d8170 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
000d7e10 t IVP_Actuator_Torque::get_torque()
000d6590 t IVP_Actuator_Torque::set_torque(double)
000d7d20 t IVP_Actuator_Torque::get_controller_name()
000d6550 t IVP_Actuator_Torque::set_max_rotation_speed(double)
000d5500 t IVP_Actuator_Torque::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d6d60 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000d6d60 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
000d6860 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000d6800 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
000d6800 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
00108ee0 t IVP_Anomaly_Manager::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
00108b50 t IVP_Anomaly_Manager::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
001089c0 t IVP_Anomaly_Manager::get_push_speed_penetration(IVP_Real_Object*, IVP_Real_Object*)
00108b30 t IVP_Anomaly_Manager::environment_will_be_deleted(IVP_Environment*)
00108a20 t IVP_Anomaly_Manager::max_angular_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
001089b0 t IVP_Anomaly_Manager::max_collision_checks_exceeded(int)
00108c50 t IVP_Anomaly_Manager::solve_inter_penetration_simple(IVP_Real_Object*, IVP_Real_Object*, double)
001089a0 t IVP_Anomaly_Manager::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00108990 t IVP_Anomaly_Manager::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00108c30 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
00108c30 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
00108ad0 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
00108980 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
00108980 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
000dded0 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
000dded0 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
0012b890 t IVP_Buoyancy_Solver::compute_forces(IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_Real_Object*)
0012a730 t IVP_Buoyancy_Solver::compute_values_for_one_ball(IVP_Real_Object const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0012b640 t IVP_Buoyancy_Solver::compute_values_for_one_ledge(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0012b6a0 t IVP_Buoyancy_Solver::compute_values_for_one_polygon(IVP_Real_Object*, IVP_U_Float_Hesse const*)
0012a9d0 t IVP_Buoyancy_Solver::compute_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_Compact_Ledge const*)
001272a0 t IVP_Buoyancy_Solver::compute_disection_points_with_ball(IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, float const&, IVP_U_Float_Point*, IVP_U_Float_Point*)
001270e0 t IVP_Buoyancy_Solver::compute_buoyancy_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
00127620 t IVP_Buoyancy_Solver::compute_dampening_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
0012b9f0 t IVP_Buoyancy_Solver::compute_rotation_and_translation_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Point const**, IVP_Compact_Ledge const*, float const*, int const&, int const&, int const&)
00127010 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
00127010 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
00102c30 t IVP_Cluster_Manager::add_object(IVP_Real_Object*)
00102c40 t IVP_Cluster_Manager::remove_object(IVP_Real_Object*)
00101800 t IVP_Cluster_Manager::get_root_cluster()
00102710 t IVP_Cluster_Manager::add_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
00102830 t IVP_Cluster_Manager::add_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
00102950 t IVP_Cluster_Manager::remove_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
001019d0 t IVP_Cluster_Manager::check_for_unused_objects(IVP_Universe_Manager*)
00101dd0 t IVP_Cluster_Manager::fire_event_object_frozen(IVP_Event_Object*)
00102440 t IVP_Cluster_Manager::fire_event_pre_collision(IVP_Real_Object*, IVP_Event_Collision*)
00101c90 t IVP_Cluster_Manager::fire_event_object_created(IVP_Event_Object*)
00101f10 t IVP_Cluster_Manager::fire_event_object_deleted(IVP_Event_Object*)
00101b50 t IVP_Cluster_Manager::fire_event_object_revived(IVP_Event_Object*)
001021c0 t IVP_Cluster_Manager::fire_event_post_collision(IVP_Real_Object*, IVP_Event_Collision*)
00102ac0 t IVP_Cluster_Manager::remove_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
00102300 t IVP_Cluster_Manager::fire_event_friction_created(IVP_Real_Object*, IVP_Event_Friction*)
00102580 t IVP_Cluster_Manager::fire_event_friction_deleted(IVP_Real_Object*, IVP_Event_Friction*)
00102080 t IVP_Cluster_Manager::fire_event_collision_object_deleted(IVP_Real_Object*)
00101940 t IVP_Cluster_Manager::get_next_real_object_in_cluster_tree(IVP_Object*)
00101810 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
00101810 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
001026c0 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
001026c0 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
0010b2c0 t IVP_Compact_Surface::byte_swap_all(IVP_BOOL, int)
0010b210 t IVP_Compact_Surface::byte_swap()
001080e0 t IVP_Event_Manager_D::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001088e0 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
001088a0 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
001088a0 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
000f1670 t IVP_Friction_Solver::complex_failed(IVP_Friction_System*)
000f1b00 t IVP_Friction_Solver::calc_solver_PSI(IVP_Friction_System*, int*)
000f0830 t IVP_Friction_Solver::do_penalty_step(float*, float*, float, float)
000ecd00 t IVP_Friction_Solver::ease_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*, double)
000f0150 t IVP_Friction_Solver::factor_result_vec()
000ed150 t IVP_Friction_Solver::ease_friction_pair(IVP_Friction_Core_Pair*, IVP_U_Memory*)
000f1390 t IVP_Friction_Solver::do_inactives_pushes(IVP_Friction_System*)
000f16a0 t IVP_Friction_Solver::do_resulting_pushes(IVP_Friction_System*)
000f1a10 t IVP_Friction_Solver::setup_coords_mindists(IVP_Friction_System*)
000eccf0 t IVP_Friction_Solver::ease_test_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*)
000f0190 t IVP_Friction_Solver::normize_constraint_equ()
000f1660 t IVP_Friction_Solver::debug_distance_after_push(int)
000f2670 t IVP_Friction_Solver::solve_linear_equation_and_push(IVP_Friction_System*, int*, int, IVP_U_Memory*)
000f0010 t IVP_Friction_Solver::test_gauss_solution_suggestion(double*, int*, int, IVP_U_Memory*)
000ed6c0 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
000ed6c0 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
000ee610 t IVP_Friction_System::reset_time(IVP_Time)
000ede40 t IVP_Friction_System::add_fr_pair(IVP_Friction_Core_Pair*)
000edea0 t IVP_Friction_System::del_fr_pair(IVP_Friction_Core_Pair*)
000ee600 t IVP_Friction_System::print_all_dists()
000edfc0 t IVP_Friction_System::union_find_fr_sys()
001034c0 t IVP_Friction_System::add_core_to_system(IVP_Core*)
00103490 t IVP_Friction_System::add_dist_to_system(IVP_Contact_Point*)
000ef6e0 t IVP_Friction_System::debug_fs_out_ascii()
000f2930 t IVP_Friction_System::do_friction_system(IVP_Event_Sim const*)
000ef750 t IVP_Friction_System::find_pair_of_cores(IVP_Core*, IVP_Core*)
000edb20 t IVP_Friction_System::apply_real_friction(IVP_Event_Sim const*)
00103a50 t IVP_Friction_System::get_controller_name()
000f25e0 t IVP_Friction_System::get_max_energy_gain()
000f2590 t IVP_Friction_System::undo_complex_pushes()
000ec9c0 t IVP_Friction_System::calc_friction_forces(IVP_Event_Sim const*)
000fa8f0 t IVP_Friction_System::debug_clean_tmp_info()
000ed370 t IVP_Friction_System::ease_friction_forces()
000efa60 t IVP_Friction_System::get_controlled_cores(IVP_U_Vector<IVP_Core>*)
000f2270 t IVP_Friction_System::ivp_debug_fs_pointers()
000ee110 t IVP_Friction_System::split_friction_system(IVP_Core*)
000f2540 t IVP_Friction_System::confirm_complex_pushes()
000ef6f0 t IVP_Friction_System::core_is_found_in_pairs(IVP_Core*)
000f2350 t IVP_Friction_System::core_is_terminal_in_fs(IVP_Core*)
000edf30 t IVP_Friction_System::get_pair_info_for_objs(IVP_Core*, IVP_Core*)
000f2220 t IVP_Friction_System::exchange_friction_dists(IVP_Contact_Point*, IVP_Contact_Point*)
001ad1a8 b IVP_Friction_System::friction_global_counter
000edb50 t IVP_Friction_System::fusion_friction_systems(IVP_Friction_System*)
00103a60 t IVP_Friction_System::get_controller_priority()
00103570 t IVP_Friction_System::remove_core_from_system(IVP_Core*)
001033a0 t IVP_Friction_System::remove_dist_from_system(IVP_Contact_Point*)
000ed7e0 t IVP_Friction_System::delete_friction_distance(IVP_Contact_Point*)
000efbd0 t IVP_Friction_System::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000f1a00 t IVP_Friction_System::test_hole_fr_system_data()
000f03a0 t IVP_Friction_System::do_pushes_distance_keepers(IVP_Event_Sim const*)
000f2450 t IVP_Friction_System::kinetic_energy_of_hole_frs()
001033e0 t IVP_Friction_System::dist_added_update_pair_info(IVP_Contact_Point*)
000f2280 t IVP_Friction_System::bubble_sort_dists_importance()
000ee740 t IVP_Friction_System::clear_integrated_anti_energy()
00103200 t IVP_Friction_System::fs_recalc_all_contact_points()
000f2170 t IVP_Friction_System::reorder_mindists_for_complex()
001032d0 t IVP_Friction_System::dist_removed_update_pair_info(IVP_Contact_Point*)
000edf90 t IVP_Friction_System::debug_check_system_consistency()
000efa80 t IVP_Friction_System::get_associated_controlled_cores()
000f0370 t IVP_Friction_System::get_num_supposed_active_frdists()
000efa70 t IVP_Friction_System::get_minimum_simulation_frequency()
000f23c0 t IVP_Friction_System::static_fr_oversized_matrix_panic()
000efd30 t IVP_Friction_System::core_is_going_to_be_deleted_event(IVP_Core*)
000ef120 t IVP_Friction_System::remove_energy_gained_by_real_friction()
00103180 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
00103180 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
00103940 t IVP_Friction_System::~IVP_Friction_System()
00103850 t IVP_Friction_System::~IVP_Friction_System()
00103850 t IVP_Friction_System::~IVP_Friction_System()
000f54a0 t IVP_Incr_L_U_Matrix::normize_row(int)
000f5f20 t IVP_Incr_L_U_Matrix::add_neg_col_L(int, int, double)
000f6940 t IVP_Incr_L_U_Matrix::add_neg_row_L(int, int, double)
000f7780 t IVP_Incr_L_U_Matrix::debug_print_a()
000f6a60 t IVP_Incr_L_U_Matrix::decrement_l_u(int)
000f6190 t IVP_Incr_L_U_Matrix::increment_l_u()
000f53c0 t IVP_Incr_L_U_Matrix::normize_row_L(int)
000f6540 t IVP_Incr_L_U_Matrix::solve_lin_equ()
000f5bf0 t IVP_Incr_L_U_Matrix::subtract_row_L(int, int, double)
000f76c0 t IVP_Incr_L_U_Matrix::debug_print_l_u()
000f6040 t IVP_Incr_L_U_Matrix::mult_vec_with_L()
000f56e0 t IVP_Incr_L_U_Matrix::pivot_search_l_u(int)
000f63d0 t IVP_Incr_L_U_Matrix::solve_vec_with_U()
000f5630 t IVP_Incr_L_U_Matrix::exchange_rows_l_u(int, int)
000f5f80 t IVP_Incr_L_U_Matrix::exchange_columns_L(int, int)
000f5fe0 t IVP_Incr_L_U_Matrix::exchange_columns_U(int, int)
000f59b0 t IVP_Incr_L_U_Matrix::add_neg_row_to_row_l_u(int, int, double)
000f5770 t IVP_Incr_L_U_Matrix::add_neg_row_upwards_l_u(int, int, double)
000f5d20 t IVP_Incr_L_U_Matrix::l_u_decomposition_with_pivoting()
00103b00 t IVP_Listener_Object::~IVP_Listener_Object()
00103960 t IVP_Listener_Object::~IVP_Listener_Object()
00103960 t IVP_Listener_Object::~IVP_Listener_Object()
0010aad0 t IVP_Material_Simple::get_damping()
0010aae0 t IVP_Material_Simple::get_adhesion()
0010aac0 t IVP_Material_Simple::get_elasticity()
0010aab0 t IVP_Material_Simple::get_friction_factor()
0010ac80 t IVP_Material_Simple::get_second_friction_factor()
0010aaf0 t IVP_Material_Simple::get_name()
0010ac40 t IVP_Material_Simple::IVP_Material_Simple(double, double)
0010ac00 t IVP_Material_Simple::IVP_Material_Simple()
0010ac40 t IVP_Material_Simple::IVP_Material_Simple(double, double)
0010ac00 t IVP_Material_Simple::IVP_Material_Simple()
0010ab00 t IVP_Material_Simple::~IVP_Material_Simple()
0010aaa0 t IVP_Material_Simple::~IVP_Material_Simple()
0010aaa0 t IVP_Material_Simple::~IVP_Material_Simple()
0011ca90 t IVP_Mindist_Manager::print_mindists()
0011cc50 t IVP_Mindist_Manager::recheck_ov_element(IVP_Real_Object*)
0011dbe0 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float)
0011da90 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float, float)
0011da50 t IVP_Mindist_Manager::remove_hull_mindist(IVP_Mindist*)
0011caf0 t IVP_Mindist_Manager::insert_exact_mindist(IVP_Mindist*)
0011e650 t IVP_Mindist_Manager::mindist_left_phantom(IVP_Mindist*)
0011fc80 t IVP_Mindist_Manager::recalc_exact_mindist(IVP_Mindist*)
0011d850 t IVP_Mindist_Manager::remove_exact_mindist(IVP_Mindist*)
0011f030 t IVP_Mindist_Manager::create_exact_mindists(IVP_Real_Object*, IVP_Real_Object*, double, IVP_U_FVector<IVP_Collision>*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Collision_Delegator*)
0011cbd0 t IVP_Mindist_Manager::insert_invalid_mindist(IVP_Mindist*)
0011d9c0 t IVP_Mindist_Manager::remove_invalid_mindist(IVP_Mindist*)
0011e5f0 t IVP_Mindist_Manager::mindist_entered_phantom(IVP_Mindist*)
0011e500 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float)
0011e460 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float, float)
0011fd90 t IVP_Mindist_Manager::recalc_all_exact_mindists()
0011fdd0 t IVP_Mindist_Manager::recalc_all_exact_wheel_mindist()
0011e320 t IVP_Mindist_Manager::insert_and_recalc_exact_mindist(IVP_Mindist*)
0011e2e0 t IVP_Mindist_Manager::recalc_all_exact_mindists_events()
0011e830 t IVP_Mindist_Manager::insert_and_recalc_phantom_mindist(IVP_Mindist*)
0011d560 t IVP_Mindist_Manager::enable_collision_detection_for_object(IVP_Real_Object*)
0011fb40 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
0011fb40 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
0011fbd0 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
0011fbd0 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
0011b530 t IVP_OV_Tree_Manager::expand_tree(IVP_OV_Node const*)
0011be00 t IVP_OV_Tree_Manager::cleanup_node(IVP_OV_Node*)
0011b2e0 t IVP_OV_Tree_Manager::connect_boxes(IVP_OV_Node*, IVP_OV_Node*)
0011ad80 t IVP_OV_Tree_Manager::calc_optimal_box(IVP_OV_Element const*, double, double)
0011bb70 t IVP_OV_Tree_Manager::insert_ov_element(IVP_OV_Element*, double, double, IVP_U_Vector<IVP_OV_Element>*)
0011be70 t IVP_OV_Tree_Manager::remove_ov_element(IVP_OV_Element*)
0011c000 t IVP_OV_Tree_Manager::get_luf_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
0011c080 t IVP_OV_Tree_Manager::get_center_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
0011b8e0 t IVP_OV_Tree_Manager::collect_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*, IVP_OV_Node const*)
0011b790 t IVP_OV_Tree_Manager::collect_subbox_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*)
001af640 b IVP_OV_Tree_Manager::powerlist
0011aba0 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
0011aba0 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
0011ac80 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
0011ac80 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
00105a70 t IVP_Simulation_Unit::reset_time(IVP_Time)
00103fd0 t IVP_Simulation_Unit::clean_sim_unit()
00104c00 t IVP_Simulation_Unit::split_sim_unit(IVP_Core*)
00104500 t IVP_Simulation_Unit::add_sim_unit_core(IVP_Core*)
001045d0 t IVP_Simulation_Unit::rem_sim_unit_core(IVP_Core*)
00104650 t IVP_Simulation_Unit::sim_unit_core_exists(IVP_Core*)
001042b0 t IVP_Simulation_Unit::sim_unit_remove_core(IVP_Core*)
00104090 t IVP_Simulation_Unit::get_pos_of_controller(IVP_Controller*)
001049e0 t IVP_Simulation_Unit::add_controller_of_core(IVP_Core*, IVP_Controller*)
00105470 t IVP_Simulation_Unit::do_sim_unit_union_find()
00105c20 t IVP_Simulation_Unit::get_unit_movement_type()
00104dc0 t IVP_Simulation_Unit::perform_test_and_split()
00105c30 t IVP_Simulation_Unit::set_unit_movement_type(IVP_Movement_Type)
00103e30 t IVP_Simulation_Unit::add_controller_unit_sim(IVP_Controller*)
001041d0 t IVP_Simulation_Unit::rem_sim_unit_controller(IVP_Controller*)
00104ae0 t IVP_Simulation_Unit::sim_unit_calc_redundants()
00103ea0 t IVP_Simulation_Unit::sim_unit_union_find_test()
00104bc0 t IVP_Simulation_Unit::fusion_simulation_unities(IVP_Simulation_Unit*)
001046c0 t IVP_Simulation_Unit::remove_controller_of_core(IVP_Core*, IVP_Controller*)
00104910 t IVP_Simulation_Unit::sim_unit_sort_controllers()
001055c0 t IVP_Simulation_Unit::simulate_single_sim_unit_psi(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001054a0 t IVP_Simulation_Unit::sim_unit_calc_movement_state(IVP_Environment*)
00104540 t IVP_Simulation_Unit::throw_cores_into_my_sim_unit(IVP_Simulation_Unit*)
00105c50 t IVP_Simulation_Unit::sim_unit_ensure_in_simulation()
00104e20 t IVP_Simulation_Unit::sim_unit_exchange_controllers(int, int)
00105150 t IVP_Simulation_Unit::sim_unit_ensure_cores_movement()
00104f70 t IVP_Simulation_Unit::sim_unit_revive_for_simulation(IVP_Environment*)
00103d50 t IVP_Simulation_Unit::controller_is_known_to_sim_unit(IVP_Controller*)
00103db0 t IVP_Simulation_Unit::add_controlled_core_for_controller(IVP_Controller*, IVP_Core*)
00105c40 t IVP_Simulation_Unit::prefetch0_init_moving_core_for_psi(IVP_Core*)
00105420 t IVP_Simulation_Unit::sim_unit_clear_movement_check_values()
00104190 t IVP_Simulation_Unit::IVP_Simulation_Unit()
00104190 t IVP_Simulation_Unit::IVP_Simulation_Unit()
001040d0 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
001040d0 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
00098610 t IVP_SurMan_PS_Plane::get_area_size()
00098740 t IVP_SurMan_PS_Plane::get_len_of_all_edges()
000d7d50 t IVP_Template_Anchor::get_object()
000d7d60 t IVP_Template_Anchor::get_anchor_point_ws()
000d5d20 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, double, double, double)
000d5cb0 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, IVP_U_Float_Point const*)
000d5c00 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, double, double, double)
000d5b70 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, IVP_U_Float_Point const*)
000d5b40 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, double, double, double)
000d5b00 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, IVP_U_Point const*)
0010b0e0 t IVP_Template_Object::set_name(char const*)
0010b0a0 t IVP_Template_Object::IVP_Template_Object()
0010b0a0 t IVP_Template_Object::IVP_Template_Object()
0010b0b0 t IVP_Template_Object::~IVP_Template_Object()
0010b0b0 t IVP_Template_Object::~IVP_Template_Object()
000d8320 t IVP_Template_Spring::IVP_Template_Spring()
000d8320 t IVP_Template_Spring::IVP_Template_Spring()
000d5900 t IVP_Template_Torque::IVP_Template_Torque()
000d5900 t IVP_Template_Torque::IVP_Template_Torque()
0010c840 t IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
0010bc70 t IVP_U_Active_Square::print()
0010d830 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, double, double, double)
0010d830 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, double, double, double)
0010cf00 t IVP_U_Active_Square::~IVP_U_Active_Square()
0010ceb0 t IVP_U_Active_Square::~IVP_U_Active_Square()
0010ceb0 t IVP_U_Active_Square::~IVP_U_Active_Square()
0010b910 t IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
0010c5b0 t IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
0010b9f0 t IVP_U_Active_Switch::print()
0010dd00 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010dd00 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010d0f0 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
0010d070 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
0010d070 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
00036150 t physcollideheader_t::GetBaseMap()
001a3260 d physcollideheader_t::m_DataMap
00034250 t CAirboatFrictionData::GetContactPoint(Vector&)
00034270 t CAirboatFrictionData::GetContactSpeed(Vector&)
00034230 t CAirboatFrictionData::GetSurfaceNormal(Vector&)
00030660 t CPhysicsCollisionSet::ShouldCollide(int, int)
000305d0 t CPhysicsCollisionSet::EnableCollisions(int, int)
00030610 t CPhysicsCollisionSet::DisableCollisions(int, int)
00041700 t CPhysicsFrictionData::GetContactPoint(Vector&)
000409d0 t CPhysicsFrictionData::GetContactSpeed(Vector&)
00041650 t CPhysicsFrictionData::GetSurfaceNormal(Vector&)
0004a7e0 t CPhysicsSurfaceProps::GetIVPManager()
00048ed0 t CPhysicsSurfaceProps::GetIVPMaterial(int)
00048ee0 t CPhysicsSurfaceProps::GetSurfaceData(int)
00049980 t CPhysicsSurfaceProps::ParseSurfaceData(char const*, char const*)
000498c0 t CPhysicsSurfaceProps::AddFileToDatabase(char const*)
00048e80 t CPhysicsSurfaceProps::GetInternalSurface(int)
00049270 t CPhysicsSurfaceProps::CopyPhysicsProperties(CSurface*, int)
00048bd0 t CPhysicsSurfaceProps::SetWorldMaterialIndexTable(int*, int)
00049650 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
00049650 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
00049630 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
000494d0 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
000494d0 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
000923e0 t hk_Dense_Matrix_Util::invert_2x2(hk_Dense_Matrix const&, hk_Dense_Matrix&, float)
00091d40 t hk_Dense_Matrix_Util::invert_4x4(hk_Fixed_Dense_Matrix<4>&, float)
00091780 t hk_Dense_Matrix_Util::invert_5x5(hk_Fixed_Dense_Matrix<5>&, float)
000910f0 t hk_Dense_Matrix_Util::invert_6x6(hk_Fixed_Dense_Matrix<6>&, float)
00092200 t hk_Dense_Matrix_Util::invert_3x3_symmetric(hk_Dense_Matrix&, float)
00091060 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, float const*, float*)
00090fa0 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, hk_Dense_Vector const&, hk_Dense_Vector&)
00092790 t hk_Dense_Matrix_Util::print(hk_Dense_Matrix const&)
00092480 t hk_Dense_Matrix_Util::solve(hk_Dense_Matrix&, hk_Dense_Vector&, float)
000884f0 t hk_Pulley_Constraint::set_length(float)
00088500 t hk_Pulley_Constraint::set_gearing(float)
000883a0 t hk_Pulley_Constraint::init_constraint(void const*)
00088100 t hk_Pulley_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00088540 t hk_Pulley_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
000885a0 t hk_Pulley_Constraint::get_constraint_dof()
000883b0 t hk_Pulley_Constraint::write_to_blueprint(hk_Pulley_BP*)
00088590 t hk_Pulley_Constraint::get_constraint_type()
000880f0 t hk_Pulley_Constraint::get_vmq_storage_size()
00088510 t hk_Pulley_Constraint::set_worldspace_point(int, hk_Vector3 const&)
00088320 t hk_Pulley_Constraint::init_pulley_constraint(hk_Pulley_BP const*)
00088600 t hk_Pulley_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00088430 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088490 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088430 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00088490 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
000885d0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
000885b0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
000885b0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0004a8a0 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
0004a730 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
0004a730 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
00120750 t IVP_3D_Solver_PF_NPF::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00120350 t IVP_3D_Solver_S_VALS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000d6460 t IVP_Actuator_Rot_Mot::set_max_torque(double)
000d7d10 t IVP_Actuator_Rot_Mot::get_controller_name()
000d63e0 t IVP_Actuator_Rot_Mot::set_max_rotation_speed(double)
000d5630 t IVP_Actuator_Rot_Mot::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d7e00 t IVP_Actuator_Rot_Mot::get_power()
000d6420 t IVP_Actuator_Rot_Mot::set_power(double)
000d6f40 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000d6f40 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
000d6980 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000d6920 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000d6920 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
000d03d0 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d0270 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d0270 t IVP_Collision_Filter::~IVP_Collision_Filter()
000d0f90 t IVP_Compact_Triangle::get_next_tri()
000d0e60 t IVP_Compact_Triangle::set_tri_index(int)
000d0f50 t IVP_Compact_Triangle::get_first_edge()
000d0ec0 t IVP_Compact_Triangle::set_is_virtual(unsigned int)
000d0e80 t IVP_Compact_Triangle::set_pierce_index(int)
000d0ea0 t IVP_Compact_Triangle::set_material_index(int)
000d0b40 t IVP_Compact_Triangle::byte_swap()
000d0b10 t IVP_Compact_Triangle::IVP_Compact_Triangle()
000d0b10 t IVP_Compact_Triangle::IVP_Compact_Triangle()
0012fcb0 t IVP_Constraint_Local::get_objectA()
0012fca0 t IVP_Constraint_Local::get_objectR()
0012f590 t IVP_Constraint_Local::fix_rotation_axis(IVP_COORDINATE_INDEX)
0012fcc0 t IVP_Constraint_Local::constraint_changed()
0012f540 t IVP_Constraint_Local::free_rotation_axis(IVP_COORDINATE_INDEX)
0012f4d0 t IVP_Constraint_Local::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
0012f2d0 t IVP_Constraint_Local::fix_translation_axis(IVP_COORDINATE_INDEX)
0012f280 t IVP_Constraint_Local::free_translation_axis(IVP_COORDINATE_INDEX)
0012f320 t IVP_Constraint_Local::sort_rotation_mapping()
0012f210 t IVP_Constraint_Local::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
0012cbd0 t IVP_Constraint_Local::change_fixing_point_Ros(IVP_U_Point const*)
0012c7f0 t IVP_Constraint_Local::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
0012cd90 t IVP_Constraint_Local::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0012f0d0 t IVP_Constraint_Local::sort_translation_mapping()
0012c5b0 t IVP_Constraint_Local::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0012c9c0 t IVP_Constraint_Local::change_translation_axes_Ros(IVP_U_Matrix3 const*)
0012c660 t IVP_Constraint_Local::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
0012cae0 t IVP_Constraint_Local::change_target_fixing_point_Ros(IVP_U_Point const*)
0012c4e0 t IVP_Constraint_Local::change_Aos_to_relaxe_constraint()
0012c410 t IVP_Constraint_Local::change_Ros_to_relaxe_constraint()
0012c710 t IVP_Constraint_Local::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
0012c3f0 t IVP_Constraint_Local::core_is_going_to_be_deleted_event(IVP_Core*)
0012c930 t IVP_Constraint_Local::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
0012f5e0 t IVP_Constraint_Local::init(IVP_Template_Constraint const&)
0012fc10 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
0012f050 t IVP_Constraint_Local::IVP_Constraint_Local()
0012fc10 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
0012f050 t IVP_Constraint_Local::IVP_Constraint_Local()
0012cd70 t IVP_Constraint_Local::~IVP_Constraint_Local()
0012cd00 t IVP_Constraint_Local::~IVP_Constraint_Local()
0012cd00 t IVP_Constraint_Local::~IVP_Constraint_Local()
0012fd10 t IVP_Controller_Golem::reset_time(IVP_Time)
00131090 t IVP_Controller_Golem::set_prime_position(IVP_U_Point const*, IVP_U_Float_Point const*, IVP_Time const&)
00131110 t IVP_Controller_Golem::set_prime_orientation(IVP_U_Quat const*, IVP_Time const&, IVP_U_Quat const*, float)
001302c0 t IVP_Controller_Golem::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00131060 t IVP_Controller_Golem::beam_object_to_target_position(IVP_Event_Sim*)
00130f70 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
00130f70 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
00130270 t IVP_Controller_Golem::~IVP_Controller_Golem()
00130250 t IVP_Controller_Golem::~IVP_Controller_Golem()
00130250 t IVP_Controller_Golem::~IVP_Controller_Golem()
00100d00 t IVP_Controller_VHash::controller_to_index(IVP_Controller*)
000feaf0 t IVP_Controller_VHash::~IVP_Controller_VHash()
000fead0 t IVP_Controller_VHash::~IVP_Controller_VHash()
000fead0 t IVP_Controller_VHash::~IVP_Controller_VHash()
000e7560 t IVP_Core_Fast_Static::get_inv_masses()
000e7850 t IVP_Core_Fast_Static::~IVP_Core_Fast_Static()
000e7850 t IVP_Core_Fast_Static::~IVP_Core_Fast_Static()
000fe9b0 t IVP_Friction_Manager::generate_contact_point(IVP_Mindist*, IVP_BOOL*)
000fe900 t IVP_Friction_Manager::get_associated_contact_point(IVP_Mindist*)
000fe970 t IVP_Friction_Manager::delete_all_contact_points_of_object(IVP_Real_Object*)
000b7490 t IVP_Intrusion_Status::p()
000b7420 t IVP_Intrusion_Status::print(char const*)
000b74b0 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000b74b0 t IVP_Intrusion_Status::IVP_Intrusion_Status()
000b74d0 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000b74d0 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
000e3870 t IVP_Listener_Phantom::IVP_Listener_Phantom()
000e3870 t IVP_Listener_Phantom::IVP_Listener_Phantom()
0010aa20 t IVP_Material_Manager::get_damping(IVP_Contact_Situation*)
0010aa60 t IVP_Material_Manager::get_adhesion(IVP_Contact_Situation*)
0010a9e0 t IVP_Material_Manager::get_elasticity(IVP_Contact_Situation*)
0010a9a0 t IVP_Material_Manager::get_friction_factor(IVP_Contact_Situation*)
0010ab40 t IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
0010acc0 t IVP_Material_Manager::environment_will_be_deleted(IVP_Environment*)
0010abe0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
0010abe0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
0010aca0 t IVP_Material_Manager::~IVP_Material_Manager()
0010ac90 t IVP_Material_Manager::~IVP_Material_Manager()
0010ac90 t IVP_Material_Manager::~IVP_Material_Manager()
0011c780 t IVP_Mindist_Settings::set_collision_tolerance(double, double)
0011c8e0 t IVP_Mindist_Settings::set_event_queue_min_delta_time_base(double)
0011c900 t IVP_Mindist_Settings::IVP_Mindist_Settings()
0011c900 t IVP_Mindist_Settings::IVP_Mindist_Settings()
000ee7e0 t IVP_Mutual_Energizer::calc_energy_potential(double, double, double, double, double)
000eebb0 t IVP_Mutual_Energizer::calc_energy_potential()
000ee870 t IVP_Mutual_Energizer::init_mutual_energizer(IVP_Core*, IVP_Core*)
000eecd0 t IVP_Mutual_Energizer::destroy_percent_energy(double)
000ee780 t IVP_Mutual_Energizer::calc_impulse_to_reduce_energy_level(double, double, double, double)
000d4d80 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d4d10 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d4d10 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
000d39b0 t IVP_Ray_Solver_Group::check_ray_group_against_cube(IVP_U_Float_Point const*, float)
000d49a0 t IVP_Ray_Solver_Group::check_ray_group_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
000d4660 t IVP_Ray_Solver_Group::check_ray_group_against_object(IVP_Real_Object*)
000d4b60 t IVP_Ray_Solver_Group::check_ray_group_against_all_objects_in_sim(IVP_Environment const*)
000d4b90 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
000d4b90 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
00101550 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
00101550 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
00101310 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
00101290 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
00101290 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
000e22e0 t IVP_Template_Phantom::IVP_Template_Phantom()
000e22e0 t IVP_Template_Phantom::IVP_Template_Phantom()
0009a170 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009a0d0 t IVP_Template_Polygon::IVP_Template_Polygon()
0009a170 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0009a0d0 t IVP_Template_Polygon::IVP_Template_Polygon()
0009a260 t IVP_Template_Polygon::~IVP_Template_Polygon()
0009a260 t IVP_Template_Polygon::~IVP_Template_Polygon()
000d5980 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
000d5980 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
0009a350 t IVP_Template_Surface::init_surface(int)
0009a220 t IVP_Template_Surface::close_surface()
0009a390 t IVP_Template_Surface::get_surface_index()
0009a2e0 t IVP_Template_Surface::calc_surface_normal_template(int, int, int)
0009a110 t IVP_Template_Surface::IVP_Template_Surface()
0009a110 t IVP_Template_Surface::IVP_Template_Surface()
0009a3b0 t IVP_Template_Surface::~IVP_Template_Surface()
0009a3b0 t IVP_Template_Surface::~IVP_Template_Surface()
0010e280 t IVP_U_BigVector_Base::increment_mem()
001017e0 t IVP_Universe_Manager::event_object_deleted(IVP_Real_Object*)
001017d0 t IVP_Universe_Manager::object_no_longer_needed(IVP_Real_Object*)
001017f0 t IVP_Universe_Manager::provide_universe_settings()
001017c0 t IVP_Universe_Manager::ensure_objects_in_environment(IVP_Real_Object*, IVP_U_Float_Point*, double)
0009a830 t IVV_Cluster_Min_Hash::remove_min()
0009a760 t IVV_Cluster_Min_Hash::change_value(void*, double)
0009a4c0 t IVV_Cluster_Min_Hash::min_added_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009a510 t IVV_Cluster_Min_Hash::min_removed_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0009a5e0 t IVV_Cluster_Min_Hash::add(void*, double)
0009a6a0 t IVV_Cluster_Min_Hash::remove(void*)
0009a7b0 t IVV_Cluster_Min_Hash::is_elem(void*)
0009a3c0 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009a3c0 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0009a440 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
0009a440 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
000556b0 t vehicle_axleparams_t::GetBaseMap()
001a53e0 d vehicle_axleparams_t::m_DataMap
000553d0 t vehicle_bodyparams_t::GetBaseMap()
001a5440 d vehicle_bodyparams_t::m_DataMap
00040910 t CPhysicsCollisionData::GetContactPoint(Vector&)
00040980 t CPhysicsCollisionData::GetContactSpeed(Vector&)
000408e0 t CPhysicsCollisionData::GetSurfaceNormal(Vector&)
00070e10 t CUtlCStringConversion::FindConversion(char const*, int*)
00070ff0 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00070ff0 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00041110 t CVPhysicsDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
00041130 t CVPhysicsDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, bool, float)
00041140 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, float, char const*, ...)
00041150 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*, ...)
00041180 t CVPhysicsDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, float, float, float, float, char const*, ...)
00041170 t CVPhysicsDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
00041120 t CVPhysicsDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
00041100 t CVPhysicsDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*, ...)
00041160 t CVPhysicsDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
00089f50 t hk_Ragdoll_Constraint::init_constraint(void const*)
0008b390 t hk_Ragdoll_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008a3e0 t hk_Ragdoll_Constraint::update_friction(float)
0008a330 t hk_Ragdoll_Constraint::update_transforms(hk_Transform const&, hk_Transform const&)
0008a630 t hk_Ragdoll_Constraint::apply_angular_part(hk_PSI_Info&, hk_Ragdoll_Constraint_Work&, float, float)
0008b6d0 t hk_Ragdoll_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0008b780 t hk_Ragdoll_Constraint::get_constraint_dof()
00089f80 t hk_Ragdoll_Constraint::write_to_blueprint(hk_Ragdoll_Constraint_BP*)
0008b770 t hk_Ragdoll_Constraint::get_constraint_type()
00089bf0 t hk_Ragdoll_Constraint::get_vmq_storage_size()
00089c00 t hk_Ragdoll_Constraint::init_ragdoll_constraint(hk_Ragdoll_Constraint_BP const*, hk_Local_Constraint_System*)
0008b7e0 t hk_Ragdoll_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008a440 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a540 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a440 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008a540 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008b7b0 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008b790 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0008b790 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
001208f0 t IVP_3D_Solver_KK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001203f0 t IVP_3D_Solver_PF_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001207c0 t IVP_3D_Solver_PK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
0010c1a0 t IVP_Active_Value_Hash::object_to_index(IVP_U_Active_Value*)
0010e1c0 t IVP_Active_Value_Hash::add_active_value(IVP_U_Active_Value*)
0010e120 t IVP_Active_Value_Hash::find_active_value(IVP_U_Active_Value*)
0010e160 t IVP_Active_Value_Hash::remove_active_value(IVP_U_Active_Value*)
0010e0f0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
0010e0f0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
0010c180 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
0010c110 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
0010c110 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
000d5f20 t IVP_Anchor_Check_Dist::init_anchor_check_dist(IVP_Real_Object*, IVP_U_Point*, IVP_Actuator_Check_Dist*)
000d62b0 t IVP_Anchor_Check_Dist::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
000d7ba0 t IVP_Anchor_Check_Dist::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
000d7d30 t IVP_Anchor_Check_Dist::get_type()
000d7e20 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000d7e20 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
000d5230 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000d4f20 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000d4f20 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
00048080 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_added(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00048040 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_removed(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
00047f00 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::pset_is_going_to_be_deleted(IVP_U_Set_Active<IVP_Core>*)
00048360 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
00047fb0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
00047fb0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
0010a630 t IVP_Cache_Ledge_Point::get_object_cache()
0010a660 t IVP_Cache_Ledge_Point::remove_reference()
0010a620 t IVP_Cache_Ledge_Point::get_compact_ledge()
0010a760 t IVP_Cache_Ledge_Point::init_cache_ledge_point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010a640 t IVP_Cache_Ledge_Point::get_core()
0010a7f0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010a670 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
0010a7f0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
0010a670 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
000b10b0 t IVP_Compact_Recursive::add_compact_ledge(IVP_Compact_Ledge const*)
000b1160 t IVP_Compact_Recursive::build_convex_hull()
000b1140 t IVP_Compact_Recursive::add_compact_surface(IVP_Compact_Surface const*)
000b1380 t IVP_Compact_Recursive::set_rekursive_convex_hull()
000b10f0 t IVP_Compact_Recursive::add_compact_ledge_treenode(IVP_Compact_Ledgetree_Node const*)
000b1790 t IVP_Compact_Recursive::compile()
000b1040 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000b1040 t IVP_Compact_Recursive::IVP_Compact_Recursive()
000b1070 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000b1070 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
000ed5d0 t IVP_Contact_Point_API::get_vert_force(IVP_Contact_Point*)
000ed5b0 t IVP_Contact_Point_API::get_eliminated_energy(IVP_Contact_Point*)
000ed5e0 t IVP_Contact_Point_API::get_surface_normal_ws(IVP_Contact_Point*, IVP_U_Float_Point*)
000ed5c0 t IVP_Contact_Point_API::reset_eliminated_energy(IVP_Contact_Point*)
000fbc60 t IVP_Contact_Situation::IVP_Contact_Situation()
000fbc60 t IVP_Contact_Situation::IVP_Contact_Situation()
00130cc0 t IVP_Controller_Motion::set_max_torque(IVP_U_Float_Point const*)
001312b0 t IVP_Controller_Motion::set_damp_factor(float)
001312a0 t IVP_Controller_Motion::set_force_factor(float)
001312c0 t IVP_Controller_Motion::set_torque_factor(float)
00130d10 t IVP_Controller_Motion::set_target_position_ws(IVP_U_Point const*)
00131210 t IVP_Controller_Motion::get_controller_priority()
001312d0 t IVP_Controller_Motion::set_angular_damp_factor(float)
0012fd30 t IVP_Controller_Motion::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00130cf0 t IVP_Controller_Motion::set_max_translation_force(IVP_U_Float_Point const*)
00130e80 t IVP_Controller_Motion::set_target_q_world_f_core(IVP_U_Quat const*)
00130db0 t IVP_Controller_Motion::set_target_object_position_ws(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*)
0012fcf0 t IVP_Controller_Motion::core_is_going_to_be_deleted_event(IVP_Core*)
00130c00 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
00130c00 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
001302a0 t IVP_Controller_Motion::~IVP_Controller_Motion()
00130210 t IVP_Controller_Motion::~IVP_Controller_Motion()
00130210 t IVP_Controller_Motion::~IVP_Controller_Motion()
000e8070 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000e8070 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
000e80d0 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
000e80d0 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
000f7ba0 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
000f7ba0 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
000f7bf0 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
000f7bf0 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
0011ffa0 t IVP_Mindist_Recursive::is_recursive()
00125b80 t IVP_Mindist_Recursive::delete_all_children()
00125b70 t IVP_Mindist_Recursive::mindist_rescue_push()
00125e60 t IVP_Mindist_Recursive::recheck_recursive_childs(double)
001265b0 t IVP_Mindist_Recursive::get_spawned_mindist_count()
00125f90 t IVP_Mindist_Recursive::exact_mindist_went_invalid(IVP_Mindist_Manager*)
001263a0 t IVP_Mindist_Recursive::invalid_mindist_went_exact()
00126580 t IVP_Mindist_Recursive::change_spawned_mindist_count(int)
001263f0 t IVP_Mindist_Recursive::rec_hull_limit_exceeded_event()
00125dd0 t IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
001260f0 t IVP_Mindist_Recursive::do_impact()
00125c30 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
00125c30 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
00125da0 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00125cb0 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00125cb0 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00105be0 t IVP_Sim_Units_Manager::reset_time(IVP_Time)
00104ea0 t IVP_Sim_Units_Manager::add_unit_to_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
00104f00 t IVP_Sim_Units_Manager::rem_unit_from_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
00105b00 t IVP_Sim_Units_Manager::simulate_sim_units_psi(IVP_Environment*, IVP_U_Vector<IVP_Core>*)
00104ec0 t IVP_Sim_Units_Manager::add_sim_unit_to_manager(IVP_Simulation_Unit*)
00104f30 t IVP_Sim_Units_Manager::rem_sim_unit_from_manager(IVP_Simulation_Unit*)
00104e60 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
00104e60 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
00101620 t IVP_Statistic_Manager::clear_statistic()
001015b0 t IVP_Statistic_Manager::output_statistic()
00101690 t IVP_Statistic_Manager::IVP_Statistic_Manager()
00101690 t IVP_Statistic_Manager::IVP_Statistic_Manager()
000dde30 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
000dde30 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
000e7540 t IVP_Vector_of_Objects::reset()
000e7520 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
000e7520 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
000554a0 t vehicle_wheelparams_t::GetBaseMap()
001a5420 d vehicle_wheelparams_t::m_DataMap
000766c0 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
000766c0 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
00036220 t compactsurfaceheader_t::GetBaseMap()
001a3240 d compactsurfaceheader_t::m_DataMap
00140b20 t CPolyhedron_AllocByNew::Release()
00140b40 t CPolyhedron_AllocByNew::Allocate(unsigned short, unsigned short, unsigned short, unsigned short)
00143890 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00143840 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00143840 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
00143850 t CPolyhedron_TempMemory::Release()
00143870 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
00143860 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
00143860 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
00041240 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000408c0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000408c0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000d7dc0 t IVP_Actuator_Two_Point::get_actuator_anchor(int)
000d5fa0 t IVP_Actuator_Two_Point::ensure_actuator_in_simulation()
000d6c40 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000d6c40 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
000d6c20 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000d6780 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
000d6780 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
001093c0 t IVP_BetterDebugmanager::output_function(IVP_DEBUG_CLASS, char const*)
00109420 t IVP_BetterDebugmanager::is_debug_enabled(IVP_DEBUG_CLASS)
001093e0 t IVP_BetterDebugmanager::enable_debug_output(IVP_DEBUG_CLASS)
00109400 t IVP_BetterDebugmanager::disable_debug_output(IVP_DEBUG_CLASS)
00109450 t IVP_BetterDebugmanager::dprint(IVP_DEBUG_CLASS, char const*, ...)
001094a0 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
001094a0 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
001093a0 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
00109390 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
00109390 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
000d0da0 t IVP_Compact_Poly_Point::set_client_data(void*)
000d0d60 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
000d0d60 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
00104ac0 t IVP_Controller_Manager::add_controller_to_core(IVP_Controller_Independent*, IVP_Core*)
001046a0 t IVP_Controller_Manager::ensure_core_in_simulation(IVP_Core*)
001048f0 t IVP_Controller_Manager::remove_controller_from_core(IVP_Controller_Independent*, IVP_Core*)
001051a0 t IVP_Controller_Manager::ensure_controller_in_simulation(IVP_Controller_Dependent*)
00105020 t IVP_Controller_Manager::announce_controller_to_environment(IVP_Controller_Dependent*)
00105200 t IVP_Controller_Manager::remove_controller_from_environment(IVP_Controller_Dependent*, IVP_BOOL)
00103c00 t IVP_Controller_Manager::IVP_Controller_Manager(IVP_Environment*)
00103c00 t IVP_Controller_Manager::IVP_Controller_Manager(IVP_Environment*)
000e2430 t IVP_Controller_Phantom::add_sleeping_object(IVP_Real_Object*)
000e3300 t IVP_Controller_Phantom::event_object_frozen(IVP_Event_Object*)
000e2a00 t IVP_Controller_Phantom::mindist_left_volume(IVP_Mindist*)
000e2370 t IVP_Controller_Phantom::add_listener_phantom(IVP_Listener_Phantom*)
000e32f0 t IVP_Controller_Phantom::event_object_created(IVP_Event_Object*)
000e22d0 t IVP_Controller_Phantom::event_object_deleted(IVP_Event_Object*)
000e2650 t IVP_Controller_Phantom::event_object_revived(IVP_Event_Object*)
000e2600 t IVP_Controller_Phantom::fire_event_core_left(IVP_Core*)
000e38a0 t IVP_Controller_Phantom::get_intruding_mindists()
000e26f0 t IVP_Controller_Phantom::mindist_entered_volume(IVP_Mindist*)
000e2490 t IVP_Controller_Phantom::remove_sleeping_object(IVP_Real_Object*)
000e25b0 t IVP_Controller_Phantom::fire_event_core_entered(IVP_Core*)
000e23b0 t IVP_Controller_Phantom::remove_listener_phantom(IVP_Listener_Phantom*)
000e24f0 t IVP_Controller_Phantom::wake_all_sleeping_objects()
000e2ce0 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000e2ce0 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
000e32d0 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000e3010 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000e3010 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
000ef5c0 t IVP_Friction_Core_Pair::debug_printf_pair()
000edd70 t IVP_Friction_Core_Pair::number_of_pair_dists()
000ef2a0 t IVP_Friction_Core_Pair::set_friction_vectors(IVP_U_Float_Point*)
000edd80 t IVP_Friction_Core_Pair::add_fr_dist_obj_pairs(IVP_Contact_Point*)
000eddc0 t IVP_Friction_Core_Pair::del_fr_dist_obj_pairs(IVP_Contact_Point*)
000eefd0 t IVP_Friction_Core_Pair::destroy_mutual_energy(double)
000ef3b0 t IVP_Friction_Core_Pair::get_average_friction_vector(IVP_U_Float_Point*)
000ef600 t IVP_Friction_Core_Pair::debug_read_vector_after_ease()
000ef5d0 t IVP_Friction_Core_Pair::debug_store_vector_before_ease()
000ee6a0 t IVP_Friction_Core_Pair::check_all_fr_mindists_to_be_valid(IVP_Friction_System*)
000ef080 t IVP_Friction_Core_Pair::remove_energy_gained_by_real_friction()
000ef260 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
000ef260 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
000ef220 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
000ef220 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
00101770 t IVP_Listener_Collision::event_pre_collision(IVP_Event_Collision*)
00101780 t IVP_Listener_Collision::event_post_collision(IVP_Event_Collision*)
00103b40 t IVP_Listener_Collision::get_enabled_callbacks()
001017a0 t IVP_Listener_Collision::event_friction_created(IVP_Event_Friction*)
001017b0 t IVP_Listener_Collision::event_friction_deleted(IVP_Event_Friction*)
00103970 t IVP_Listener_Collision::event_friction_pair_created(IVP_Friction_Core_Pair*)
00103980 t IVP_Listener_Collision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
00101790 t IVP_Listener_Collision::event_collision_object_deleted(IVP_Real_Object*)
00103b50 t IVP_Listener_Collision::IVP_Listener_Collision(int)
00103b50 t IVP_Listener_Collision::IVP_Listener_Collision(int)
00103ae0 t IVP_Listener_Collision::~IVP_Listener_Collision()
00103990 t IVP_Listener_Collision::~IVP_Listener_Collision()
00103990 t IVP_Listener_Collision::~IVP_Listener_Collision()
0010afd0 t IVP_PerformanceCounter::IVP_PerformanceCounter()
0010afd0 t IVP_PerformanceCounter::IVP_PerformanceCounter()
0010afb0 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
0010afa0 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
0010afa0 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
000b6c50 t IVP_Rot_Inertia_Solver::find_center_given_xyz(IVP_U_BigVector<IVP_Compact_Ledge>*, int, int, int, IVP_U_Matrix const*, double*, double*, double*)
000b70d0 t IVP_Rot_Inertia_Solver::calc_mass_center_and_rotation_inertia(IVP_Compact_Surface const*, IVP_U_Point*, IVP_U_Point*)
000d5850 t IVP_Template_Two_Point::IVP_Template_Two_Point()
000d5850 t IVP_Template_Two_Point::IVP_Template_Two_Point()
00055850 t vehicle_engineparams_t::GetBaseMap()
001a53a0 d vehicle_engineparams_t::m_DataMap
00040a80 t CEmptyCollisionListener::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
00040a50 t CEmptyCollisionListener::PreCollision(vcollisionevent_t*)
00040ab0 t CEmptyCollisionListener::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
00040a60 t CEmptyCollisionListener::PostCollision(vcollisionevent_t*)
00040aa0 t CEmptyCollisionListener::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
00040ac0 t CEmptyCollisionListener::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
00040ad0 t CEmptyCollisionListener::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
00040ae0 t CEmptyCollisionListener::PostSimulationFrame()
00040a90 t CEmptyCollisionListener::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
00040a70 t CEmptyCollisionListener::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
00059150 t CPhysCollideVirtualMesh::BuildLedges()
0005a070 t CPhysCollideVirtualMesh::SetMassCenter(Vector const&)
00059780 t CPhysCollideVirtualMesh::BuildBoundingLedge()
00059630 t CPhysCollideVirtualMesh::CreateMeshBoundingHull(virtualmeshlist_t const&)
0005a610 t CPhysCollideVirtualMesh::GetAllLedgesWithinRadius(IVP_U_Point const*, double, IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_Compact_Ledge const*)
00059340 t CPhysCollideVirtualMesh::CreateBoundingSurfaceFromRange(virtualmeshlist_t const&, int, int)
00059230 t CPhysCollideVirtualMesh::AddRef()
00059040 t CPhysCollideVirtualMesh::Release()
00058ca0 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
00058c50 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
00058c50 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
000381b0 t CPhysicsConstraintGroup::GetErrorParams(constraint_groupparams_t*)
00037f50 t CPhysicsConstraintGroup::IsInErrorState()
00037f90 t CPhysicsConstraintGroup::SetErrorParams(constraint_groupparams_t const&)
00037f70 t CPhysicsConstraintGroup::ClearErrorState()
00038170 t CPhysicsConstraintGroup::SolvePenetration(IPhysicsObject*, IPhysicsObject*)
000380c0 t CPhysicsConstraintGroup::Activate()
00038b80 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00038b80 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
00038020 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00037fc0 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00037fc0 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
00047950 t CPhysicsFluidController::SetGameData(void*)
00047b80 t CPhysicsFluidController::GetIVPObject()
00047b30 t CPhysicsFluidController::WakeAllSleepingObjects()
00047b50 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00047b50 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
00047af0 t CPhysicsFluidController::~CPhysicsFluidController()
00047910 t CPhysicsFluidController::~CPhysicsFluidController()
00047910 t CPhysicsFluidController::~CPhysicsFluidController()
000623d0 t CTraceSolverSweptObject::SweepLedgeTree_r(IVP_Compact_Ledgetree_Node const*)
00063020 t CTraceSolverSweptObject::DoSweep()
0005c710 t CTraceSolverSweptObject::InitOSRay()
0005c650 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
0005c650 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
000757f0 t CUtlFilenameSymbolTable::FindFileName(char const*)
00076070 t CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
00075a00 t CUtlFilenameSymbolTable::String(void* const&, char*, int)
00075fb0 t CUtlFilenameSymbolTable::RemoveAll()
00075740 t CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
00075740 t CUtlFilenameSymbolTable::CUtlFilenameSymbolTable()
00076010 t CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
00076010 t CUtlFilenameSymbolTable::~CUtlFilenameSymbolTable()
00066dd0 t CVPhysPtrSaveRestoreOps::PreRestore()
00066de0 t CVPhysPtrSaveRestoreOps::PostRestore()
00066af0 t CVPhysPtrSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00066bb0 t CVPhysPtrSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00066dc0 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
00066dc0 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
0007ea30 t hk_Breakable_Constraint::init_constraint(void const*)
0007ec90 t hk_Breakable_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0007ec50 t hk_Breakable_Constraint::FireEventIfBroken()
0007f300 t hk_Breakable_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007f330 t hk_Breakable_Constraint::get_constraint_dof()
0007ec20 t hk_Breakable_Constraint::write_to_blueprint(hk_Breakable_Constraint_BP*)
0007f310 t hk_Breakable_Constraint::get_constraint_type()
0007ea60 t hk_Breakable_Constraint::get_vmq_storage_size()
0007ebf0 t hk_Breakable_Constraint::init_breakable_constraint(hk_Breakable_Constraint_BP const*)
0007f3c0 t hk_Breakable_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0007eaf0 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
0007eb70 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
0007eaf0 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
0007eb70 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
0007ead0 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
0007ea80 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
0007ea80 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00086070 t hk_Prismatic_Constraint::set_limits(float, float)
000860e0 t hk_Prismatic_Constraint::set_friction(float)
00085df0 t hk_Prismatic_Constraint::init_constraint(void const*)
000849f0 t hk_Prismatic_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00085ff0 t hk_Prismatic_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
00086150 t hk_Prismatic_Constraint::get_constraint_dof()
000858e0 t hk_Prismatic_Constraint::reset_linear_limit()
00085e20 t hk_Prismatic_Constraint::write_to_blueprint(hk_Prismatic_BP*)
00086140 t hk_Prismatic_Constraint::get_constraint_type()
000849e0 t hk_Prismatic_Constraint::get_vmq_storage_size()
00085c40 t hk_Prismatic_Constraint::init_prismatic_constraint(hk_Prismatic_BP const*, hk_Local_Constraint_System*)
000861b0 t hk_Prismatic_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00086110 t hk_Prismatic_Constraint::set_motor(float, float)
00085ea0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00085f50 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00085ea0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00085f50 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00086180 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00086160 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00086160 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
0007db50 t hk_Rigid_Body_Binary_EF::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
00090950 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
00090950 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
0003d600 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003d570 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
0003d570 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
00047f90 t IPhysicsFluidController::~IPhysicsFluidController()
00047ee0 t IPhysicsFluidController::~IPhysicsFluidController()
00047ee0 t IPhysicsFluidController::~IPhysicsFluidController()
000d5fd0 t IVP_Actuator_Check_Dist::fire_check_dist_event(IVP_BOOL)
000d6070 t IVP_Actuator_Check_Dist::hull_limit_exceeded_event()
000d6020 t IVP_Actuator_Check_Dist::fire_check_dist_is_going_to_be_deleted_event()
000d6290 t IVP_Actuator_Check_Dist::set_range(double)
000d7be0 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000d7be0 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
000d7ad0 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000d7ad0 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
000d7de0 t IVP_Actuator_Four_Point::get_actuator_anchor(int)
000d73d0 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000d73d0 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
000d6760 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000d6680 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000d6680 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
000d7a90 t IVP_Actuator_Stabilizer::set_stabi_constant(double)
000d7d40 t IVP_Actuator_Stabilizer::get_controller_name()
000d4f50 t IVP_Actuator_Stabilizer::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d7a40 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000d7a40 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
000d6730 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000d6710 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000d6710 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
000d8d70 t IVP_Actuator_Suspension::set_max_body_force(float)
000d8db0 t IVP_Actuator_Suspension::get_controller_name()
000d7e70 t IVP_Actuator_Suspension::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d8d30 t IVP_Actuator_Suspension::set_spring_damp_compression(float)
000d8cd0 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000d8cd0 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
000d8200 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000d81e0 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
000d81e0 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
0011c470 t IVP_Collision_Delegator::get_spawned_mindist_count()
0011c460 t IVP_Collision_Delegator::change_spawned_mindist_count(int)
0011c500 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
0011c450 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
0011c450 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
000dc9b0 t IVP_Controller_Buoyancy::apply_dampening(IVP_Real_Object*, float, double, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
000ddcd0 t IVP_Controller_Buoyancy::get_controller_name()
000dc8c0 t IVP_Controller_Buoyancy::use_buoyancy_solver(IVP_Buoyancy_Input const*, IVP_Template_Buoyancy const*, IVP_Buoyancy_Output*, IVP_U_Float_Point const*, int)
000dcde0 t IVP_Controller_Buoyancy::apply_buoyancy_impulse(IVP_Real_Object*, IVP_Template_Buoyancy*, double, float, IVP_U_Float_Point*)
000ddcc0 t IVP_Controller_Buoyancy::get_controller_priority()
000dd010 t IVP_Controller_Buoyancy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dc7a0 t IVP_Controller_Buoyancy::calculate_future_extrapolation(IVP_Controller_Buoyancy::Attacher_Interpolator::Last_IO const*, IVP_MI_Vector const*, IVP_MI_Vector const*, double, IVP_Time, IVP_MI_Vector*, IVP_MI_Vector*)
000ddcb0 t IVP_Controller_Buoyancy::get_minimum_simulation_frequency()
000ddc90 t IVP_Controller_Buoyancy::core_is_going_to_be_deleted_event(IVP_Core*)
000dd760 t IVP_Controller_Buoyancy::provide_new_input_solution_combination(IVP_Controller_Buoyancy::Attacher_Interpolator*, IVP_Template_Buoyancy*, IVP_MI_Vector const*, IVP_MI_Vector const*, double, IVP_Time)
000dd9e0 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000dd9e0 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
000dc780 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000dc710 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000dc710 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
000e9ba0 t IVP_Environment_Manager::create_environment(IVP_Application_Environment*, char const*, unsigned int)
000e7e60 t IVP_Environment_Manager::get_environment_manager()
001ad19c b IVP_Environment_Manager::static_environment_manager
000e7a50 t IVP_Environment_Manager::IVP_Environment_Manager()
000e7a50 t IVP_Environment_Manager::IVP_Environment_Manager()
000e78d0 t IVP_Environment_Manager::~IVP_Environment_Manager()
000e78d0 t IVP_Environment_Manager::~IVP_Environment_Manager()
000eff70 t IVP_Friction_Sys_Energy::get_controller_name()
000eff60 t IVP_Friction_Sys_Energy::get_controller_priority()
000ef170 t IVP_Friction_Sys_Energy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000eaa50 t IVP_Friction_Sys_Energy::core_is_going_to_be_deleted_event(IVP_Core*)
000effd0 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000eff80 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000eff80 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
000effa0 t IVP_Friction_Sys_Static::get_controller_name()
000eff90 t IVP_Friction_Sys_Static::get_controller_priority()
000efb10 t IVP_Friction_Sys_Static::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000efa90 t IVP_Friction_Sys_Static::do_simulation_single_friction(IVP_Event_Sim*)
000effc0 t IVP_Friction_Sys_Static::get_minimum_simulation_frequency()
000eda40 t IVP_Friction_Sys_Static::core_is_going_to_be_deleted_event(IVP_Core*)
000efff0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000effb0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000effb0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
000d3040 t IVP_Ray_Solver_Min_Hash::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, double, IVP_U_Point*)
000d4e20 t IVP_Ray_Solver_Min_Hash::get_result_min_hash()
000d4e90 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000d4e90 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
000d4de0 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000d4da0 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
000d4da0 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
001314f0 t IVP_SurfaceManager_Ball::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00131550 t IVP_SurfaceManager_Ball::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00131480 t IVP_SurfaceManager_Ball::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
00131420 t IVP_SurfaceManager_Ball::get_type()
001315d0 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
00131430 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
00131430 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
000daa00 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000daa00 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
000d57f0 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000d57f0 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
000e1740 t IVP_Template_Constraint::sort_coordinates(IVP_Template_Constraint const&)
000e2100 t IVP_Template_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
000e1610 t IVP_Template_Constraint::set_constraint_ws(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000e2120 t IVP_Template_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
000e1310 t IVP_Template_Constraint::set_constraint_Ros(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
000e2140 t IVP_Template_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
000e1f20 t IVP_Template_Constraint::set_attached_object(IVP_Real_Object*)
000e1fd0 t IVP_Template_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
000e1f40 t IVP_Template_Constraint::set_fixing_point_Ros(IVP_U_Point const*)
000e1f10 t IVP_Template_Constraint::set_reference_object(IVP_Real_Object*)
000e1ff0 t IVP_Template_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
000e20a0 t IVP_Template_Constraint::set_rotation_axes_Ros(IVP_U_Matrix3 const*)
000e2010 t IVP_Template_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
000e21b0 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000e2170 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000e1f80 t IVP_Template_Constraint::set_translation_axes_Ros(IVP_U_Matrix3 const*)
000e2250 t IVP_Template_Constraint::set_constraint_is_relaxed()
000e2080 t IVP_Template_Constraint::set_max_translation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
000e2040 t IVP_Template_Constraint::set_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
000e2210 t IVP_Template_Constraint::set_attached_fixing_point_Aos(IVP_U_Point const*)
000e1720 t IVP_Template_Constraint::set_stiffness_for_limited_axis(float)
000e21d0 t IVP_Template_Constraint::set_attached_translation_axes_Aos(IVP_U_Matrix3 const*)
000e1fb0 t IVP_Template_Constraint::set_translation_axes_as_object_space()
000e20e0 t IVP_Template_Constraint::set_rotation_axes_as_translation_axes()
000e11a0 t IVP_Template_Constraint::IVP_Template_Constraint()
000e11a0 t IVP_Template_Constraint::IVP_Template_Constraint()
000d59f0 t IVP_Template_Four_Point::IVP_Template_Four_Point()
000d59f0 t IVP_Template_Four_Point::IVP_Template_Four_Point()
000d5a20 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000d5a20 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
000d83a0 t IVP_Template_Suspension::IVP_Template_Suspension()
000d83a0 t IVP_Template_Suspension::IVP_Template_Suspension()
0010c9c0 t IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
0010ba60 t IVP_U_Active_Test_Range::print()
0010dc60 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010dc60 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
0010cbb0 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0010cb40 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
0010cb40 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
000ea7f0 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ea7f0 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
000ea7d0 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
000ea7d0 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
0010b060 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
0010b060 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
000480f0 t CLiquidSurfaceDescriptor::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
00047f70 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
00047ef0 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
00047ef0 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
0004bb70 t CPhysicsMotionController::GetObjects(IPhysicsObject**)
0004b620 t CPhysicsMotionController::RemoveCore(IVP_Core*)
0004ad80 t CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
0004bbe0 t CPhysicsMotionController::WakeObjects()
0004b8d0 t CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
0004bc80 t CPhysicsMotionController::ClearObjects()
0004bb50 t CPhysicsMotionController::CountObjects()
0004b690 t CPhysicsMotionController::DetachObject(IPhysicsObject*)
0004add0 t CPhysicsMotionController::SetEventHandler(IMotionEvent*)
0004b990 t CPhysicsMotionController::WriteToTemplate(vphysics_save_motioncontroller_t&)
0004b570 t CPhysicsMotionController::InitFromTemplate(vphysics_save_motioncontroller_t const&)
0004bb30 t CPhysicsMotionController::get_controller_name()
0004ad60 t CPhysicsMotionController::get_controller_priority()
0004ade0 t CPhysicsMotionController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0004bcc0 t CPhysicsMotionController::core_is_going_to_be_deleted_event(IVP_Core*)
0004b520 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
0004b520 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
0004b790 t CPhysicsMotionController::~CPhysicsMotionController()
0004b6c0 t CPhysicsMotionController::~CPhysicsMotionController()
0004b6c0 t CPhysicsMotionController::~CPhysicsMotionController()
000489c0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
000489b0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
000489b0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
0004bbb0 t IPhysicsMotionController::~IPhysicsMotionController()
0004bb20 t IPhysicsMotionController::~IPhysicsMotionController()
0004bb20 t IPhysicsMotionController::~IPhysicsMotionController()
00053f80 t IPhysicsPlayerController::~IPhysicsPlayerController()
00053ba0 t IPhysicsPlayerController::~IPhysicsPlayerController()
00053ba0 t IPhysicsPlayerController::~IPhysicsPlayerController()
00053fa0 t IPhysicsShadowController::~IPhysicsShadowController()
00053b90 t IPhysicsShadowController::~IPhysicsShadowController()
00053b90 t IPhysicsShadowController::~IPhysicsShadowController()
0010a600 t IVP_Cache_Object_Manager::cache_object_at(int)
0010a0b0 t IVP_Cache_Object_Manager::get_cache_object(IVP_Real_Object*)
00109ca0 t IVP_Cache_Object_Manager::invalid_cache_object(IVP_Real_Object*)
00109cc0 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
00109cc0 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
00109d20 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
00109d20 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
001324c0 t IVP_Calc_Next_PSI_Solver::set_transformation(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
00131830 t IVP_Calc_Next_PSI_Solver::calc_next_PSI_matrix(IVP_Event_Sim*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00131680 t IVP_Calc_Next_PSI_Solver::calc_psi_rotation_axis(IVP_U_Quat const*)
00132ab0 t IVP_Calc_Next_PSI_Solver::commit_one_hull_manager(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00132b80 t IVP_Calc_Next_PSI_Solver::commit_all_hull_managers(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00132980 t IVP_Calc_Next_PSI_Solver::commit_all_calc_next_PSI_matrix(IVP_Environment*, IVP_U_Vector<IVP_Core>*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
00131640 t IVP_Calc_Next_PSI_Solver::get_longest_time_step_dependent_on_rot()
000d2d70 t IVP_Compact_Ledge_Solver::calc_qlen_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
000d1520 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Surface const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000d1420 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Ledgetree_Node const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000d12c0 t IVP_Compact_Ledge_Solver::calc_bounding_box(IVP_Compact_Ledge const*, IVP_U_Point*, IVP_U_Point*)
000d1dc0 t IVP_Compact_Ledge_Solver::calc_hesse_object(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Hesse*)
000d1540 t IVP_Compact_Ledge_Solver::calc_pos_other_space(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d2940 t IVP_Compact_Ledge_Solver::calc_qlen_PF_F_space(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, IVP_U_Point const*)
000d2bb0 t IVP_Compact_Ledge_Solver::calc_qlen_PK_K_space(IVP_U_Point const*, IVP_Compact_Ledge const*, IVP_Compact_Edge const*)
000d2b40 t IVP_Compact_Ledge_Solver::calc_qlen_PP_P_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000d2d50 t IVP_Compact_Ledge_Solver::give_world_coords_AT(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d2400 t IVP_Compact_Ledge_Solver::calc_unscaled_KK_vals(IVP_KK_Input const&, IVP_Unscaled_KK_Result*)
00124860 t IVP_Compact_Ledge_Solver::minimize_on_other_side(IVP_Compact_Edge const*, IVP_U_Point const*)
000d1770 t IVP_Compact_Ledge_Solver::transform_pos_other_space(IVP_U_Float_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d1680 t IVP_Compact_Ledge_Solver::transform_vec_other_space(IVP_U_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
000d1480 t IVP_Compact_Ledge_Solver::calc_geom_center_and_radius(IVP_Compact_Ledge const*, IVP_U_Point*, double*)
000d1f00 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Ledge const*, IVP_U_Point const*, double*, double*)
000d20b0 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Surface const*, IVP_U_Point const*, double*, double*)
000d18b0 t IVP_Compact_Ledge_Solver::calc_unscaled_s_val_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_S_Result*)
000d1a00 t IVP_Compact_Ledge_Solver::calc_unscaled_qr_vals_F_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_QR_Result*)
000d2280 t IVP_Compact_Ledge_Solver::quad_dist_edge_to_point_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
000d1e20 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Point*)
000d2190 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Float_Point*)
00103aa0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00103a70 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00103a70 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
00122a50 t IVP_Mindist_Event_Solver::next_event_BB(IVP_Mindist_Event_Solver*)
00123f10 t IVP_Mindist_Event_Solver::next_event_B_POLY(IVP_Mindist_Event_Solver*)
00122810 t IVP_Mindist_Event_Solver::calc_next_event_BB(IVP_Cache_Object*, IVP_Cache_Object*)
001211c0 t IVP_Mindist_Event_Solver::calc_next_event_BF(IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
001238b0 t IVP_Mindist_Event_Solver::calc_next_event_BK(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
001222a0 t IVP_Mindist_Event_Solver::calc_next_event_BP(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
00121400 t IVP_Mindist_Event_Solver::calc_next_event_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00120bb0 t IVP_Mindist_Event_Solver::calc_next_event_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00122b60 t IVP_Mindist_Event_Solver::calc_next_event_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00121ba0 t IVP_Mindist_Event_Solver::calc_next_event_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001afa60 b IVP_Mindist_Event_Solver::mim_function_table
001202b0 t IVP_Mindist_Event_Solver::next_event_illegal(IVP_Mindist_Event_Solver*)
00124140 t IVP_Mindist_Event_Solver::init_mim_function_table()
001235a0 t IVP_Mindist_Event_Solver::next_event_default_poly_poly(IVP_Mindist_Event_Solver*)
000b44c0 t IVP_Object_Polygon_Tetra::p_link_edge(IVP_Tri_Edge*, IVP_Tri_Edge*)
000b4460 t IVP_Object_Polygon_Tetra::hide_triangle(IVP_Triangle*)
000b3f40 t IVP_Object_Polygon_Tetra::rate_tri_edge(IVP_Tri_Edge*)
000b3e60 t IVP_Object_Polygon_Tetra::free_triangles()
000b4750 t IVP_Object_Polygon_Tetra::make_triangles()
000b5800 t IVP_Object_Polygon_Tetra::pop_concav_edge(IVP_Tri_Edge*)
000b4200 t IVP_Object_Polygon_Tetra::calc_concavities()
000b6360 t IVP_Object_Polygon_Tetra::insert_pierce_info()
000b3f90 t IVP_Object_Polygon_Tetra::add_edge_to_min_list(IVP_Tri_Edge*, P_HASH_CLASS, double)
000b4f90 t IVP_Object_Polygon_Tetra::calc_extrusion_point(IVP_Tri_Edge const*, IVP_U_Point*)
000b4e00 t IVP_Object_Polygon_Tetra::link_triangle_couple(IVP_Triangle*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*)
000b5220 t IVP_Object_Polygon_Tetra::pop_problematic_edge(IVP_Tri_Edge*)
000b38e0 t IVP_Object_Polygon_Tetra::final_convexify_check()
000b57b0 t IVP_Object_Polygon_Tetra::link_existing_pop_edge(IVP_Tri_Edge*)
000b4600 t IVP_Object_Polygon_Tetra::get_an_edge_with_points(IVP_Poly_Point*, IVP_Poly_Point*)
000b4ca0 t IVP_Object_Polygon_Tetra::generate_double_triangle(IVP_Poly_Point*, IVP_Poly_Point*, IVP_Poly_Point*)
000b4050 t IVP_Object_Polygon_Tetra::move_edge_to_normal_hash(IVP_Tri_Edge*)
000b40f0 t IVP_Object_Polygon_Tetra::move_edge_to_epsilon_hash(IVP_Tri_Edge*)
000b4390 t IVP_Object_Polygon_Tetra::move_edge_to_problem_hash(IVP_Tri_Edge*)
000b3fe0 t IVP_Object_Polygon_Tetra::remove_edge_from_min_list(IVP_Tri_Edge*)
000b4190 t IVP_Object_Polygon_Tetra::check_concavity_and_manage(IVP_Tri_Edge*, P_CONVEXIFY_STATE)
000b5720 t IVP_Object_Polygon_Tetra::record_intruding_convex_edges(IVP_Intrusion_Status*)
000b3a30 t IVP_Object_Polygon_Tetra::check_konsistency_of_triangles()
000b4dc0 t IVP_Object_Polygon_Tetra::make_double_triangle_permanent(IVP_Triangle*)
000b4640 t IVP_Object_Polygon_Tetra::add_edge_into_point_to_edge_hash(IVP_Tri_Edge*)
000b42f0 t IVP_Object_Polygon_Tetra::move_edge_to_convex_intrude_hash(IVP_Tri_Edge*)
000b5c70 t IVP_Object_Polygon_Tetra::convexify()
000b3780 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000b3780 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
000b3ef0 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
000b3ef0 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
00106440 t IVP_Solver_Core_Reaction::init_rot_ws(IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
00105c90 t IVP_Solver_Core_Reaction::init_trans_ws(IVP_U_Point const*, IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
00108080 t IVP_Solver_Core_Reaction::invert_3x3_matrix()
001076e0 t IVP_Solver_Core_Reaction::exert_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107250 t IVP_Solver_Core_Reaction::exert_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00106ba0 t IVP_Solver_Core_Reaction::exert_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107f30 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107cd0 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00107960 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
00106a70 t IVP_Solver_Core_Reaction::init_reaction_solver_rotation_ws(IVP_Core*, IVP_Core*, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
001068f0 t IVP_Solver_Core_Reaction::init_reaction_solver_translation_ws(IVP_Core*, IVP_Core*, IVP_U_Point&, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
0010b120 t IVP_Template_Real_Object::IVP_Template_Real_Object()
0010b120 t IVP_Template_Real_Object::IVP_Template_Real_Object()
0010b200 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
0010b200 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
0010b080 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
0010b080 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
00120270 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
00120270 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
00055780 t vehicle_steeringparams_t::GetBaseMap()
001a53c0 d vehicle_steeringparams_t::m_DataMap
0007f350 t BreakableConstraintHelper::~BreakableConstraintHelper()
0007f350 t BreakableConstraintHelper::~BreakableConstraintHelper()
00040e70 t CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
00040f00 t CPhysicsListenerCollision::CorePairLessFunc(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&)
00040df0 t CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
000417c0 t CPhysicsListenerCollision::event_pre_collision(IVP_Event_Collision*)
00040dd0 t CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040af0 t CPhysicsListenerCollision::event_post_collision(IVP_Event_Collision*)
00040b90 t CPhysicsListenerCollision::event_friction_created(IVP_Event_Friction*)
00040cd0 t CPhysicsListenerCollision::event_friction_deleted(IVP_Event_Friction*)
00040db0 t CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040010 t CPhysicsListenerCollision::event_friction_pair_created(IVP_Friction_Core_Pair*)
0003fed0 t CPhysicsListenerCollision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
00040b80 t CPhysicsListenerCollision::event_collision_object_deleted(IVP_Real_Object*)
00040ef0 t CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
0003eb80 t CPhysicsListenerCollision::CPhysicsListenerCollision()
0003eb80 t CPhysicsListenerCollision::CPhysicsListenerCollision()
00042880 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00042840 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00042840 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
0007d5e0 t hk_Ball_Socket_Constraint::init_constraint(void const*)
0007d630 t hk_Ball_Socket_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0007da90 t hk_Ball_Socket_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007daf0 t hk_Ball_Socket_Constraint::get_constraint_dof()
0007da50 t hk_Ball_Socket_Constraint::write_to_blueprint(hk_Ball_Socket_BP*)
0007dae0 t hk_Ball_Socket_Constraint::get_constraint_type()
0007d620 t hk_Ball_Socket_Constraint::get_vmq_storage_size()
0007dbd0 t hk_Ball_Socket_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0007da10 t hk_Ball_Socket_Constraint::init_ball_socket_constraint(hk_Ball_Socket_BP const*)
0007d910 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007d990 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007d910 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007d990 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0007db20 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
0007db00 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
0007db00 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
00058a70 t IPhysicsVehicleController::~IPhysicsVehicleController()
00058990 t IPhysicsVehicleController::~IPhysicsVehicleController()
00058990 t IPhysicsVehicleController::~IPhysicsVehicleController()
00120a40 t IVP_3D_Solver_KK_PARALLEL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
000d6320 t IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
000d7350 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000d7350 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
000d6bd0 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000d6b70 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000d6b70 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
000dac00 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000dac00 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
000dad10 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000dad10 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
000dc6a0 t IVP_Constraint_Solver_Car::get_controller_name()
000dc1e0 t IVP_Constraint_Solver_Car::init_constraint_system(IVP_Environment*, IVP_Real_Object*, IVP_U_Vector<IVP_Real_Object>&, IVP_U_Vector<IVP_U_Float_Point>&)
000dc6c0 t IVP_Constraint_Solver_Car::get_controller_priority()
000db040 t IVP_Constraint_Solver_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dc690 t IVP_Constraint_Solver_Car::get_associated_controlled_cores()
000dc6b0 t IVP_Constraint_Solver_Car::get_minimum_simulation_frequency()
000dab50 t IVP_Constraint_Solver_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000dad30 t IVP_Constraint_Solver_Car::do_simulation_controller_rotation(IVP_Event_Sim*, IVP_Core*, IVP_U_Matrix const*)
000dc460 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000dc460 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
000dc670 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000dc500 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000dc500 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
000d0900 t IVP_Meta_Collision_Filter::add_collision_filter(IVP_Collision_Filter*)
000d0940 t IVP_Meta_Collision_Filter::remove_collision_filter(IVP_Collision_Filter*)
000d0510 t IVP_Meta_Collision_Filter::environment_will_be_deleted(IVP_Environment*)
000d0310 t IVP_Meta_Collision_Filter::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000d09c0 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000d09c0 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
000d0450 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000d03f0 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
000d03f0 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
00101b10 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
00101b10 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
0010c6c0 t IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
0010bb90 t IVP_U_Active_Add_Multiple::print()
0010daa0 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, double)
0010daa0 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, double)
0010cd20 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
0010ccc0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
0010ccc0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
0010ca30 t IVP_U_Active_Terminal_Int::update_int()
0010b9b0 t IVP_U_Active_Terminal_Int::print()
0010bf10 t IVP_U_Active_Terminal_Int::set_int(int, IVP_BOOL)
0010d4c0 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
0010d4c0 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
0010e030 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
0010dfc0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
0010dfc0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
00116fc0 t IVP_U_Min_Hash_Enumerator::get_next_element()
00117020 t IVP_U_Min_Hash_Enumerator::get_next_element_lt(double)
00116fa0 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
00116fa0 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
001176e0 t IVP_U_Min_List_Enumerator::get_next_element()
00117740 t IVP_U_Min_List_Enumerator::get_next_element_lt(float)
00117710 t IVP_U_Min_List_Enumerator::get_next_element_header()
001176c0 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
001176c0 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
0009a410 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
0009a410 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
000552b0 t vehicle_operatingparams_t::GetBaseMap()
001a5460 d vehicle_operatingparams_t::m_DataMap
00034350 t CPhysCollideCompactSurface::SetMassCenter(Vector const&)
00036c00 t CPhysCollideCompactSurface::InitCollideMap()
000343c0 t CPhysCollideCompactSurface::SetOrthographicAreas(Vector const&)
000359e0 t CPhysCollideCompactSurface::ComputeOrthographicAreas(float)
00036e80 t CPhysCollideCompactSurface::Init(char const*, unsigned int, int, bool)
00036ce0 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
00036f20 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00036f90 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
00036ce0 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
00036f20 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
00036f90 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
00034e20 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00034dd0 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
00034dd0 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
000410c0 t CPhysicsListenerConstraint::event_constraint_broken(IVP_Constraint*)
00041590 t CPhysicsListenerConstraint::event_constraint_broken(hk_Breakable_Constraint*)
0002f6a0 t CVPhysicsVirtualMeshWriter::LedgeCanBePacked(IVP_Compact_Ledge const*, virtualmeshlist_t const&)
0002f400 t CVPhysicsVirtualMeshWriter::DestroyPackedHull(virtualmeshhull_t*)
0002f420 t CVPhysicsVirtualMeshWriter::UnpackLedgeListFromHull(unsigned char*, virtualmeshhull_t*, IVP_Compact_Poly_Point*)
0002f2f0 t CVPhysicsVirtualMeshWriter::InitTwoSidedTriangleLege(triangleledge_t*, IVP_Compact_Poly_Point const*, int, int, int, int)
0002ff70 t CVPhysicsVirtualMeshWriter::CreatePackedHullFromLedges(virtualmeshlist_t const&, IVP_Compact_Ledge const**, int)
0002efb0 t CVPhysicsVirtualMeshWriter::UnpackCompactLedgeFromHull(IVP_Compact_Ledge*, int, IVP_Compact_Poly_Point const*, virtualmeshhull_t const*, int, bool)
0007c670 t hk_Local_Constraint_System::deactivate()
0007c9f0 t hk_Local_Constraint_System::get_epsilon()
0007c6b0 t hk_Local_Constraint_System::add_constraint(hk_Constraint*, int)
0007cbc0 t hk_Local_Constraint_System::sort_constraints()
0007c930 t hk_Local_Constraint_System::solve_penetration(IVP_Real_Object*, IVP_Real_Object*)
0007cde0 t hk_Local_Constraint_System::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0007c500 t hk_Local_Constraint_System::write_to_blueprint(hk_Local_Constraint_System_BP*)
0007c800 t hk_Local_Constraint_System::deactivate_silently()
0007c540 t hk_Local_Constraint_System::recalc_storage_size()
0007ca00 t hk_Local_Constraint_System::report_square_error(float)
0007c3a0 t hk_Local_Constraint_System::entity_deletion_event(hk_Rigid_Body*)
0007c830 t hk_Local_Constraint_System::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
0007d4c0 t hk_Local_Constraint_System::get_effector_priority()
0007c5a0 t hk_Local_Constraint_System::constraint_deletion_event(hk_Constraint*)
0007c8b0 t hk_Local_Constraint_System::get_constraints_in_system(hk_Array<hk_Constraint*>&)
0007c330 t hk_Local_Constraint_System::core_is_going_to_be_deleted_event(IVP_Core*)
0007c630 t hk_Local_Constraint_System::activate()
0007c470 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007c470 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0007cba0 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007ca20 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0007ca20 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0008efb0 t hk_Stiff_Spring_Constraint::set_length(float)
0008eb70 t hk_Stiff_Spring_Constraint::init_constraint(void const*)
0008ebd0 t hk_Stiff_Spring_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0008efc0 t hk_Stiff_Spring_Constraint::apply_effector_PSI(hk_PSI_Info&, hk_Array<hk_Rigid_Body*>*)
0008f020 t hk_Stiff_Spring_Constraint::get_constraint_dof()
0008ee40 t hk_Stiff_Spring_Constraint::write_to_blueprint(hk_Stiff_Spring_BP*)
0008f010 t hk_Stiff_Spring_Constraint::get_constraint_type()
0008ebc0 t hk_Stiff_Spring_Constraint::get_vmq_storage_size()
0008f080 t hk_Stiff_Spring_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0008edf0 t hk_Stiff_Spring_Constraint::init_stiff_spring_constraint(hk_Stiff_Spring_BP const*)
0008ee90 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008ef20 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008ee90 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008ef20 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0008f050 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
0008f030 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
0008f030 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
000d8990 t IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000d8b90 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000d8b90 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
000d82e0 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000d8230 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000d8230 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
000d65e0 t IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000d6e70 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000d6e70 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
000d6900 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000d6880 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000d6880 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
000d9bf0 t IVP_Car_System_Real_Wheels::do_steering(float, bool)
000d8f80 t IVP_Car_System_Real_Wheels::get_skid_info(IVP_Wheel_Skid_Info*)
000d8e50 t IVP_Car_System_Real_Wheels::get_body_speed(IVP_COORDINATE_INDEX)
000d91a0 t IVP_Car_System_Real_Wheels::set_powerslide(float, float)
000d94e0 t IVP_Car_System_Real_Wheels::update_booster(float)
000da9d0 t IVP_Car_System_Real_Wheels::update_throttle(float)
000d9540 t IVP_Car_System_Real_Wheels::activate_booster(float, float, float)
000d8e30 t IVP_Car_System_Real_Wheels::get_wheel_torque(IVP_POS_WHEEL)
000d9280 t IVP_Car_System_Real_Wheels::do_steering_wheel(IVP_POS_WHEEL, float)
000d8ff0 t IVP_Car_System_Real_Wheels::get_booster_delay()
000d93b0 t IVP_Car_System_Real_Wheels::change_wheel_torque(IVP_POS_WHEEL, float)
000d9410 t IVP_Car_System_Real_Wheels::change_spring_length(IVP_POS_WHEEL, float)
000d9b10 t IVP_Car_System_Real_Wheels::event_object_deleted(IVP_Event_Object*)
000d9220 t IVP_Car_System_Real_Wheels::change_body_downforce(float)
000d9490 t IVP_Car_System_Real_Wheels::change_max_body_force(IVP_POS_WHEEL, float)
000d9080 t IVP_Car_System_Real_Wheels::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000d9070 t IVP_Car_System_Real_Wheels::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000d9250 t IVP_Car_System_Real_Wheels::change_spring_constant(IVP_POS_WHEEL, float)
000da9f0 t IVP_Car_System_Real_Wheels::get_booster_time_to_go()
000da9e0 t IVP_Car_System_Real_Wheels::update_wheel_positions()
000d8e10 t IVP_Car_System_Real_Wheels::change_fast_turn_factor(float)
000d94b0 t IVP_Car_System_Real_Wheels::change_spring_dampening(IVP_POS_WHEEL, float)
000d8f10 t IVP_Car_System_Real_Wheels::get_orig_axles_distance()
000d9840 t IVP_Car_System_Real_Wheels::set_booster_acceleration(float)
000d95f0 t IVP_Car_System_Real_Wheels::set_booster_acceleration(float) [clone .part.13]
000d9440 t IVP_Car_System_Real_Wheels::change_spring_pre_tension(IVP_POS_WHEEL, float)
000d9350 t IVP_Car_System_Real_Wheels::update_body_countertorque()
000d93e0 t IVP_Car_System_Real_Wheels::change_stabilizer_constant(IVP_POS_AXIS, float)
000d8f50 t IVP_Car_System_Real_Wheels::get_wheel_angular_velocity(IVP_POS_WHEEL)
000d9040 t IVP_Car_System_Real_Wheels::environment_will_be_deleted(IVP_Environment*)
000d9af0 t IVP_Car_System_Real_Wheels::change_wheel_speed_dampening(IVP_POS_WHEEL, float)
000d8ed0 t IVP_Car_System_Real_Wheels::get_orig_front_wheel_distance()
000d9470 t IVP_Car_System_Real_Wheels::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000d9a80 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000d98b0 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL) [clone .part.17]
000d9e20 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000d9e20 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
000d9150 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000d9000 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000d9000 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
000d0d20 t IVP_Compact_Ledgetree_Node::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
000d0cd0 t IVP_Compact_Ledgetree_Node::byte_swap()
001ad1d8 b IVP_Controller_Independent::empty_list
001039f0 t IVP_Controller_Independent::get_associated_controlled_cores()
00103a80 t IVP_Controller_Independent::~IVP_Controller_Independent()
00103a20 t IVP_Controller_Independent::~IVP_Controller_Independent()
00103a20 t IVP_Controller_Independent::~IVP_Controller_Independent()
000de460 t IVP_Controller_Raycast_Car::do_steering(float, bool)
000de1a0 t IVP_Controller_Raycast_Car::get_skid_info(IVP_Wheel_Skid_Info*)
000de0b0 t IVP_Controller_Raycast_Car::get_body_speed(IVP_COORDINATE_INDEX)
000dfd20 t IVP_Controller_Raycast_Car::set_powerslide(float, float)
000dfd30 t IVP_Controller_Raycast_Car::update_booster(float)
000dfd00 t IVP_Controller_Raycast_Car::update_throttle(float)
000de410 t IVP_Controller_Raycast_Car::activate_booster(float, float, float)
000ddfc0 t IVP_Controller_Raycast_Car::get_wheel_torque(IVP_POS_WHEEL)
000de3d0 t IVP_Controller_Raycast_Car::do_steering_wheel(IVP_POS_WHEEL, float)
000de080 t IVP_Controller_Raycast_Car::get_booster_delay()
000ded80 t IVP_Controller_Raycast_Car::CalcSteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000dea40 t IVP_Controller_Raycast_Car::DoSimulationShocks(IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, IVP_Event_Sim*, IVP_Core*)
000de5a0 t IVP_Controller_Raycast_Car::DoSimulationWheels(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, float*, IVP_Core*)
000dfc40 t IVP_Controller_Raycast_Car::InitRaycastCarAxes(IVP_Template_Car_System const*)
000df8c0 t IVP_Controller_Raycast_Car::InitRaycastCarBody(IVP_Template_Car_System const*)
000de4e0 t IVP_Controller_Raycast_Car::SetupWheelRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*)
000df0a0 t IVP_Controller_Raycast_Car::ApplySteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
000de3a0 t IVP_Controller_Raycast_Car::change_wheel_torque(IVP_POS_WHEEL, float)
000dec40 t IVP_Controller_Raycast_Car::DoSimulationBooster(IVP_Event_Sim*, IVP_Core*)
000ddfa0 t IVP_Controller_Raycast_Car::change_spring_length(IVP_POS_WHEEL, float)
000df4b0 t IVP_Controller_Raycast_Car::DoSimulationSteering(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*)
000df970 t IVP_Controller_Raycast_Car::InitRaycastCarWheels(IVP_Template_Car_System const*)
000de020 t IVP_Controller_Raycast_Car::change_body_downforce(float)
000dfcf0 t IVP_Controller_Raycast_Car::change_max_body_force(IVP_POS_WHEEL, float)
000de2d0 t IVP_Controller_Raycast_Car::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000de200 t IVP_Controller_Raycast_Car::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000ddf10 t IVP_Controller_Raycast_Car::change_spring_constant(IVP_POS_WHEEL, float)
000dfd40 t IVP_Controller_Raycast_Car::get_booster_time_to_go()
000de010 t IVP_Controller_Raycast_Car::change_fast_turn_factor(float)
000ddf30 t IVP_Controller_Raycast_Car::change_spring_dampening(IVP_POS_WHEEL, float)
000de940 t IVP_Controller_Raycast_Car::DoSimulationStabilizers(IVP_Raycast_Car_Wheel_Temp*)
000de050 t IVP_Controller_Raycast_Car::get_controller_priority()
000de160 t IVP_Controller_Raycast_Car::get_orig_axles_distance()
000df530 t IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000de060 t IVP_Controller_Raycast_Car::set_booster_acceleration(float)
000ddf70 t IVP_Controller_Raycast_Car::change_spring_pre_tension(IVP_POS_WHEEL, float)
000df7e0 t IVP_Controller_Raycast_Car::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
000dfd10 t IVP_Controller_Raycast_Car::update_body_countertorque()
000ddff0 t IVP_Controller_Raycast_Car::change_stabilizer_constant(IVP_POS_AXIS, float)
000de090 t IVP_Controller_Raycast_Car::get_wheel_angular_velocity(IVP_POS_WHEEL)
000de120 t IVP_Controller_Raycast_Car::get_orig_front_wheel_distance()
000dfce0 t IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000dfcb0 t IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000ddf50 t IVP_Controller_Raycast_Car::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000dfd80 t IVP_Controller_Raycast_Car::get_axis(IVP_POS_AXIS)
000ddfd0 t IVP_Controller_Raycast_Car::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000dfd70 t IVP_Controller_Raycast_Car::get_wheel(IVP_POS_WHEEL)
000dfb60 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000dfb60 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
000df7c0 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000df710 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000df710 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
001081a0 t IVP_Event_Manager_Standard::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001088c0 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
001088b0 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
001088b0 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
000ed6b0 t IVP_Friction_Info_For_Core::dist_number()
000ecbf0 t IVP_Friction_Info_For_Core::set_all_dists_of_obj_neutral()
000ed630 t IVP_Friction_Info_For_Core::friction_info_delete_friction_dist(IVP_Contact_Point*)
000ed5f0 t IVP_Friction_Info_For_Core::friction_info_insert_friction_dist(IVP_Contact_Point*)
000f5290 t IVP_Great_Matrix_Many_Zero::lu_inverse(IVP_Great_Matrix_Many_Zero*, int*)
000f2e00 t IVP_Great_Matrix_Many_Zero::copy_matrix(double*, double*)
000f2d90 t IVP_Great_Matrix_Many_Zero::copy_matrix(IVP_Great_Matrix_Many_Zero*)
000f33c0 t IVP_Great_Matrix_Many_Zero::test_result(double*, double*)
000f3760 t IVP_Great_Matrix_Many_Zero::mult_aligned()
000f2e70 t IVP_Great_Matrix_Many_Zero::exchange_rows(int, int)
000f2d30 t IVP_Great_Matrix_Many_Zero::debug_fill_zero()
000f2bf0 t IVP_Great_Matrix_Many_Zero::add_multiple_line(int, int, double)
000f35b0 t IVP_Great_Matrix_Many_Zero::copy_to_sub_matrix(double*, IVP_Great_Matrix_Many_Zero*, int*)
000f2df0 t IVP_Great_Matrix_Many_Zero::align_matrix_values()
000f2ee0 t IVP_Great_Matrix_Many_Zero::find_pivot_in_column(int)
000f32f0 t IVP_Great_Matrix_Many_Zero::matrix_multiplication(double*, double*)
000f2bd0 t IVP_Great_Matrix_Many_Zero::matrix_test_unequation()
000f3460 t IVP_Great_Matrix_Many_Zero::fill_from_bigger_matrix(IVP_Great_Matrix_Many_Zero*, int*, int)
000f2be0 t IVP_Great_Matrix_Many_Zero::matrix_out_before_gauss()
000f3080 t IVP_Great_Matrix_Many_Zero::solve_lower_null_matrix()
000f2ad0 t IVP_Great_Matrix_Many_Zero::matrix_check_unequation_line(int)
000f32d0 t IVP_Great_Matrix_Many_Zero::solve_great_matrix_many_zero()
000f2f70 t IVP_Great_Matrix_Many_Zero::transform_to_lower_null_triangle()
000f3870 t IVP_Great_Matrix_Many_Zero::mult()
000f5360 t IVP_Great_Matrix_Many_Zero::invert(IVP_Great_Matrix_Many_Zero*)
000f4ae0 t IVP_Great_Matrix_Many_Zero::lu_crout(int*, double*)
000f4ee0 t IVP_Great_Matrix_Many_Zero::lu_solve(int*)
000f3620 t IVP_Great_Matrix_Many_Zero::set_value(double, int, int)
000f33d0 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
000f3430 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
000f33d0 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
000f3430 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
000b7400 t IVP_Intrusion_Intersection::p()
000b7340 t IVP_Intrusion_Intersection::print(char const*)
0010b3f0 t IVP_SurfaceManager_Polygon::add_reference_to_ledge(IVP_Compact_Ledge const*)
0010b510 t IVP_SurfaceManager_Polygon::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
0010b400 t IVP_SurfaceManager_Polygon::remove_reference_to_ledge(IVP_Compact_Ledge const*)
0010b750 t IVP_SurfaceManager_Polygon::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
0010b530 t IVP_SurfaceManager_Polygon::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
0010b3e0 t IVP_SurfaceManager_Polygon::get_type()
0010b890 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
0010b870 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
0010b890 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
0010b870 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
0010b430 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
0010b410 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
0010b410 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
0010bfe0 t IVP_U_Active_Value_Manager::delay_active_int(IVP_U_Active_Int_Delayed*)
0010d5b0 t IVP_U_Active_Value_Manager::create_active_int(char const*, int)
0010c3b0 t IVP_U_Active_Value_Manager::insert_active_int(IVP_U_Active_Int*)
0010c270 t IVP_U_Active_Value_Manager::remove_active_int(IVP_U_Active_Int*)
0010bf60 t IVP_U_Active_Value_Manager::delay_active_float(IVP_U_Active_Float_Delayed*)
0010d500 t IVP_U_Active_Value_Manager::install_active_int(char const*, int)
0010d160 t IVP_U_Active_Value_Manager::create_active_float(char const*, double)
0010c2e0 t IVP_U_Active_Value_Manager::insert_active_float(IVP_U_Active_Float*)
0010c200 t IVP_U_Active_Value_Manager::remove_active_float(IVP_U_Active_Float*)
0010d230 t IVP_U_Active_Value_Manager::install_active_float(char const*, double)
0010d670 t IVP_U_Active_Value_Manager::get_active_int_by_name(char const*)
0010d300 t IVP_U_Active_Value_Manager::get_active_float_by_name(char const*)
0010b8b0 t IVP_U_Active_Value_Manager::refresh_psi_active_values(IVP_Environment*)
0010d400 t IVP_U_Active_Value_Manager::init_active_values_generic()
0010dfe0 t IVP_U_Active_Value_Manager::environment_will_be_deleted(IVP_Environment*)
0010c060 t IVP_U_Active_Value_Manager::update_delayed_active_values()
0010dea0 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
0010dea0 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
0010de80 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
0010dda0 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
0010dda0 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
000555e0 t vehicle_suspensionparams_t::GetBaseMap()
001a5400 d vehicle_suspensionparams_t::m_DataMap
000d64b0 t IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
000d7020 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000d7020 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
000d6a40 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000d69a0 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
000d69a0 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
001016f0 t IVP_Application_Environment::IVP_Application_Environment()
001016f0 t IVP_Application_Environment::IVP_Application_Environment()
001099e0 t IVP_BetterStatisticsmanager::remove_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
001099a0 t IVP_BetterStatisticsmanager::install_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
00109950 t IVP_BetterStatisticsmanager::set_simulation_time(double)
00109ad0 t IVP_BetterStatisticsmanager::remove_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
00109a90 t IVP_BetterStatisticsmanager::install_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
001098c0 t IVP_BetterStatisticsmanager::print()
00109b80 t IVP_BetterStatisticsmanager::enable()
00109b90 t IVP_BetterStatisticsmanager::disable()
00109ba0 t IVP_BetterStatisticsmanager::get_state()
00109bb0 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
00109bb0 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
00109c00 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
00109c00 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
000b0a60 t IVP_Compact_Ledge_Generator::prepare_compact_ledge(IVP_U_Vector<IVP_Triangle>*)
000b0de0 t IVP_Compact_Ledge_Generator::generate_compact_ledge(unsigned char*)
000b09d0 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000b09d0 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
000b0ec0 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
000b0ec0 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
0012f020 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
0012f020 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
0012f040 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
0012f040 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
000fab00 t IVP_Impact_Solver_Long_Term::do_impact_long_term(IVP_Core**, float, IVP_Contact_Point*)
000fa5a0 t IVP_Impact_Solver_Long_Term::get_best_merge_core(IVP_Core*, IVP_Core*, IVP_Core*)
000fb750 t IVP_Impact_Solver_Long_Term::do_impact_of_two_objects(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*)
000fa520 t IVP_Impact_Solver_Long_Term::find_second_critical_impact_core(IVP_Core*, IVP_Core*)
00124220 t IVP_Mindist_Minimize_Solver::minimize_BB(IVP_Mindist_Minimize_Solver*)
00124660 t IVP_Mindist_Minimize_Solver::minimize_FB(IVP_Mindist_Minimize_Solver*)
001246b0 t IVP_Mindist_Minimize_Solver::minimize_KB(IVP_Mindist_Minimize_Solver*)
00124700 t IVP_Mindist_Minimize_Solver::minimize_PB(IVP_Mindist_Minimize_Solver*)
00134660 t IVP_Mindist_Minimize_Solver::p_minimize_BF(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00134170 t IVP_Mindist_Minimize_Solver::p_minimize_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00134240 t IVP_Mindist_Minimize_Solver::p_minimize_BP(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00124d50 t IVP_Mindist_Minimize_Solver::p_minimize_FF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001359e0 t IVP_Mindist_Minimize_Solver::p_minimize_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00136ea0 t IVP_Mindist_Minimize_Solver::p_minimize_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00135910 t IVP_Mindist_Minimize_Solver::p_minimize_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00135330 t IVP_Mindist_Minimize_Solver::p_minimize_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00124750 t IVP_Mindist_Minimize_Solver::init_loop_hash()
00124950 t IVP_Mindist_Minimize_Solver::pierce_mindist()
00124760 t IVP_Mindist_Minimize_Solver::check_loop_hash(IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*)
00124490 t IVP_Mindist_Minimize_Solver::minimize_B_POLY(IVP_Mindist_Minimize_Solver*)
001241f0 t IVP_Mindist_Minimize_Solver::minimize_illegal(IVP_Mindist_Minimize_Solver*)
001afaa0 b IVP_Mindist_Minimize_Solver::mms_function_table
00133b30 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
00136470 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_KK_Input const&, IVP_Unscaled_KK_Result const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00135dd0 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PF(IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00134960 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00124c20 t IVP_Mindist_Minimize_Solver::init_mms_function_table()
001257c0 t IVP_Mindist_Minimize_Solver::minimize_default_poly_poly(IVP_Mindist_Minimize_Solver*)
00125a90 t IVP_Mindist_Minimize_Solver::minimize_swapped_poly_poly(IVP_Mindist_Minimize_Solver*)
00101520 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
00101520 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
001012e0 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00101270 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00101270 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00037d30 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
00037d30 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
0004a880 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0004a7f0 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0004a7f0 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
00102040 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
00102040 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
0011c4e0 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
0011c4b0 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
0011c4b0 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
000f6590 t IVP_Linear_Constraint_Solver::full_setup()
000f3c50 t IVP_Linear_Constraint_Solver::alloc_memory(IVP_U_Memory*)
000f7910 t IVP_Linear_Constraint_Solver::debug_dep_var(int)
000f4450 t IVP_Linear_Constraint_Solver::debug_out_lcs()
000f6cb0 t IVP_Linear_Constraint_Solver::startup_setup(int)
000f6760 t IVP_Linear_Constraint_Solver::get_fdirection()
000f4370 t IVP_Linear_Constraint_Solver::start_debug_lcs()
000f5e90 t IVP_Linear_Constraint_Solver::setup_l_u_solver()
000f4280 t IVP_Linear_Constraint_Solver::update_step_vars(double)
000f74e0 t IVP_Linear_Constraint_Solver::init_and_solve_lc(double*, double*, double*, int, int, IVP_U_Memory*)
000f40c0 t IVP_Linear_Constraint_Solver::increase_step_count(int*)
000f6c60 t IVP_Linear_Constraint_Solver::decrement_sub_solver(int)
000f6300 t IVP_Linear_Constraint_Solver::increment_sub_solver()
000f48d0 t IVP_Linear_Constraint_Solver::move_variable_to_end(int)
000f4a40 t IVP_Linear_Constraint_Solver::debug_test_all_values()
000f47f0 t IVP_Linear_Constraint_Solver::get_values_when_setup()
000f4230 t IVP_Linear_Constraint_Solver::exchange_activ_inactiv(int)
000f40d0 t IVP_Linear_Constraint_Solver::exchange_lcs_variables(int, int)
000f4920 t IVP_Linear_Constraint_Solver::full_setup_test_ranges()
000f4730 t IVP_Linear_Constraint_Solver::lcs_bubble_sort_x_vals()
000f3b90 t IVP_Linear_Constraint_Solver::numerical_stability_ok()
000f3990 t IVP_Linear_Constraint_Solver::mult_active_x_for_accel()
000f3a40 t IVP_Linear_Constraint_Solver::mult_x_with_full_A_minus_b()
000f4120 t IVP_Linear_Constraint_Solver::do_a_little_random_permutation()
000f6e60 t IVP_Linear_Constraint_Solver::move_not_necessary_actives_to_inactives()
000f6ef0 t IVP_Linear_Constraint_Solver::solve_lc()
000987c0 t IVP_SurfaceBuilder_Pointsoup::error_output(IVP_Template_Polygon*)
001ab9b0 b IVP_SurfaceBuilder_Pointsoup::single_tri_ledge
000980c0 t IVP_SurfaceBuilder_Pointsoup::planes_to_template(IVP_U_Vector<IVP_U_Point>*, IVP_U_Vector<IVP_SurMan_PS_Plane>*)
00098050 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_lineslist(IVP_Template_Line*, int, int, int, char*)
00098000 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_pointlist(IVP_Template_Point*, int, IVP_U_Point*)
00098e40 t IVP_SurfaceBuilder_Pointsoup::convert_triangle_to_compace_ledge(IVP_U_Point*, IVP_U_Point*, IVP_U_Point*)
00099060 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge(IVP_U_Vector<IVP_U_Point>*)
00099800 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_surface(IVP_U_Vector<IVP_U_Point>*)
000990b0 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge_internal(IVP_U_Vector<IVP_U_Point>*)
00098920 t IVP_SurfaceBuilder_Pointsoup::try_to_build_convex_ledge_from_qhull_result(IVP_U_Vector<IVP_U_Point>*, IVP_BOOL*, char*, char*)
00098e10 t IVP_SurfaceBuilder_Pointsoup::cleanup()
0010bec0 t IVP_U_Active_Terminal_Double::set_double(double, IVP_BOOL)
0010c930 t IVP_U_Active_Terminal_Double::update_float()
0010b9d0 t IVP_U_Active_Terminal_Double::print()
0010d110 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, double)
0010d110 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, double)
0010e000 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
0010dfa0 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
0010dfa0 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
001a8970 b vehicleparams_t_DataDescInit::g_DataMapHolder
000b7320 t IVP_Intrusion_Included_Points::p()
000b72e0 t IVP_Intrusion_Included_Points::print(char const*)
0010a970 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010a930 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010a930 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
0010ad50 t IVP_PerformanceCounter_Simple::stop_pcount()
0010ad40 t IVP_PerformanceCounter_Simple::start_pcount()
0010ad00 t IVP_PerformanceCounter_Simple::environment_is_going_to_be_deleted(IVP_Environment*)
0010ad80 t IVP_PerformanceCounter_Simple::reset_and_print_performance_counters(IVP_Time)
0010ad30 t IVP_PerformanceCounter_Simple::pcount(IVP_PERFORMANCE_ELEMENT)
0010af20 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0010af20 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
0010ad60 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
0010ad20 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
0010ad20 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
00094900 t IVP_SurfaceBuilder_Ledge_Soup::insert_ledge(IVP_Compact_Ledge*)
000966e0 t IVP_SurfaceBuilder_Ledge_Soup::build_ledgetree(IVV_Sphere*)
00094bb0 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_spheres()
00095800 t IVP_SurfaceBuilder_Ledge_Soup::build_minimal_sphere(IVV_Sphere*, IVV_Sphere*)
000960a0 t IVP_SurfaceBuilder_Ledge_Soup::calculate_boundingbox(IVP_U_Vector<IVV_Sphere>*, IVP_U_Float_Point*, IVP_U_Float_Point*)
00096390 t IVP_SurfaceBuilder_Ledge_Soup::insert_compact_ledges()
00094a00 t IVP_SurfaceBuilder_Ledge_Soup::build_root_convex_hull()
00096490 t IVP_SurfaceBuilder_Ledge_Soup::allocate_compact_surface()
00095bf0 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_bottomup(double)
000969c0 t IVP_SurfaceBuilder_Ledge_Soup::create_compact_ledgetree()
000954e0 t IVP_SurfaceBuilder_Ledge_Soup::combine_spheres_in_vector(IVV_Cluster_Min_Hash*)
00095410 t IVP_SurfaceBuilder_Ledge_Soup::generate_interval_minhash(float)
00096a00 t IVP_SurfaceBuilder_Ledge_Soup::convert_ledges_to_templates(IVP_U_BigVector<IVP_Compact_Ledge>&, IVP_U_Vector<IVP_Template_Polygon>*)
00094f60 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_boxes_and_spheres()
00096820 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_array_debug_output()
00094990 t IVP_SurfaceBuilder_Ledge_Soup::add_ledge_tree_to_convex_hull(IVP_Compact_Recursive&, IVV_Sphere*)
000968e0 t IVP_SurfaceBuilder_Ledge_Soup::insert_radius_in_compact_surface()
00097ad0 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut(double)
00096220 t IVP_SurfaceBuilder_Ledge_Soup::recompile_point_indizes_of_compact_ledge(IVP_Compact_Ledge*, char*)
00096dd0 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut_recursively(IVP_U_Vector<IVV_Sphere>*)
00095780 t IVP_SurfaceBuilder_Ledge_Soup::remove_all_further_spherecombinations_from_hash(IVV_Cluster_Min_Hash*, int)
00095b20 t IVP_SurfaceBuilder_Ledge_Soup::replace_childspheres_in_spherelist_with_motherspheres()
00094af0 t IVP_SurfaceBuilder_Ledge_Soup::cleanup()
00097bc0 t IVP_SurfaceBuilder_Ledge_Soup::compile(IVP_Template_Surbuild_LedgeSoup*)
00097e60 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00097e60 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00097cd0 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00097cd0 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
00130f30 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
00130f30 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
00101af0 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
00101af0 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
000ddcf0 t IVP_Attacher_To_Cores_Buoyancy::get_buoyancy_surface(IVP_Real_Object*)
000ddce0 t IVP_Attacher_To_Cores_Buoyancy::get_parameters_per_core(IVP_Core*)
000ddac0 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000ddac0 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000ddd90 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
000ddd00 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
000ddd00 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
00101410 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
00101410 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
00101420 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
00101420 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
00132fc0 t IVP_Object_Callback_Table_Hash::find_table(IVP_Real_Object*)
00132f30 t IVP_Object_Callback_Table_Hash::remove_table(IVP_Real_Object*)
00132ea0 t IVP_Object_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
00132ee0 t IVP_Object_Callback_Table_Hash::add_table(IVP_Object_Callback_Table*)
00133050 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
00133050 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
00132e80 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00132e00 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00132e00 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
00059320 t IVP_SurfaceManager_VirtualMesh::add_reference_to_ledge(IVP_Compact_Ledge const*)
00058be0 t IVP_SurfaceManager_VirtualMesh::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00059060 t IVP_SurfaceManager_VirtualMesh::remove_reference_to_ledge(IVP_Compact_Ledge const*)
000599d0 t IVP_SurfaceManager_VirtualMesh::get_all_ledges_within_radius(IVP_U_Point const*, double, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00059c40 t IVP_SurfaceManager_VirtualMesh::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
0005a000 t IVP_SurfaceManager_VirtualMesh::get_type()
00059890 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
00059890 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
00058c20 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00058c00 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00058c00 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
00130b60 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
00130b60 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
0004f8e0 t vphysics_save_cphysicsobject_t::GetBaseMap()
001a44c0 d vphysics_save_cphysicsobject_t::m_DataMap
00054260 t vphysics_save_cphysicsspring_t::GetBaseMap()
001a50e0 d vphysics_save_cphysicsspring_t::m_DataMap
001202e0 t IVP_3D_Solver_VEC_PARALLEL_AREA::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00103a10 t IVP_Standard_Gravity_Controller::get_controller_name()
001052c0 t IVP_Standard_Gravity_Controller::set_standard_gravity(IVP_U_Point*)
00103a00 t IVP_Standard_Gravity_Controller::get_controller_priority()
00105300 t IVP_Standard_Gravity_Controller::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00103a40 t IVP_Standard_Gravity_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
00103b20 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00103a30 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00103a30 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
00038e90 t vphysics_save_constraintfixed_t::GetBaseMap()
001a3500 d vphysics_save_constraintfixed_t::m_DataMap
00038f60 t vphysics_save_constrainthinge_t::GetBaseMap()
001a34e0 d vphysics_save_constrainthinge_t::m_DataMap
00066b40 t CVPhysPtrUtlVectorSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00066e10 t CVPhysPtrUtlVectorSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
0008e2e0 t hk_Ragdoll_Constraint_BP_Builder::set_ragdoll_constraint(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Interval<float> const&, hk_Interval<float> const&, hk_Interval<float> const&, bool)
0008cd90 t hk_Ragdoll_Constraint_BP_Builder::initialize_from_limited_ball_socket_bp(hk_Limited_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00094310 t IVP_SurfaceBuilder_Halfspacesoup::insert_point_into_list(IVP_U_Point*, IVP_U_Vector<IVP_U_Point>*, double)
000943d0 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_points(IVP_Halfspacesoup*, double, IVP_U_Vector<IVP_U_Point>*)
000946f0 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_ledge(IVP_Halfspacesoup*, double)
000947b0 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_surface(IVP_Halfspacesoup*, double)
001a8024 b physcollideheader_t_DataDescInit::g_DataMapHolder
000391d0 t vphysics_save_constraintlength_t::GetBaseMap()
001a3480 d vphysics_save_constraintlength_t::m_DataMap
00039100 t vphysics_save_constraintpulley_t::GetBaseMap()
001a34a0 d vphysics_save_constraintpulley_t::m_DataMap
0004b450 t vphysics_save_motioncontroller_t::GetBaseMap()
001a43e0 d vphysics_save_motioncontroller_t::m_DataMap
0011c650 t IVP_Collision_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
0011c630 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
0011c5b0 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
0011c5b0 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
000db7b0 t IVP_Constraint_Solver_Car_Builder::disable_constraint(int)
000db7e0 t IVP_Constraint_Solver_Car_Builder::calc_pushing_behavior(int, int)
000dc080 t IVP_Constraint_Solver_Car_Builder::calc_constraint_matrix()
000db700 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000db700 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
000e07a0 t IVP_Multidimensional_Interpolator::sort_vectors(int)
000e1190 t IVP_Multidimensional_Interpolator::get_nr_occupied()
000e1180 t IVP_Multidimensional_Interpolator::get_nr_of_vectors()
000e0aa0 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_stochastic(IVP_MI_Vector const*, IVP_MI_Vector const*)
000e0880 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_conventional(IVP_MI_Vector const*, IVP_MI_Vector const*)
000e0380 t IVP_Multidimensional_Interpolator::linfit(int, int, IVP_MI_Vector**, float*, float*)
000e0cb0 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000e0cb0 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
000e10d0 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
000e10d0 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
00099b60 t IVP_SurfaceBuilder_Polygon_Convex::convert_template_to_ledge(IVP_Template_Polygon*)
00099900 t IVP_SurfaceBuilder_Polygon_Convex::fill_list_with_all_triangles(IVP_U_Vector<IVP_Triangle>*)
0009a070 t IVP_SurfaceBuilder_Polygon_Convex::get_and_remove_compact_ledge()
00099960 t IVP_SurfaceBuilder_Polygon_Convex::init_surface_manager_polygon()
0009a020 t IVP_SurfaceBuilder_Polygon_Convex::convert_templateledgepolygonsoup_to_ledge(IVP_Template_Ledge_Polygon_Soup*)
00099ad0 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
00099bb0 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
00099ad0 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
00099bb0 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
00099880 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
00099880 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
0010b570 t IVP_SurfaceManager_Polygon_Solver::traverse_cluster(IVP_Compact_Ledgetree_Node const*, IVP_U_Point const*, double, IVP_U_BigVector<IVP_Compact_Ledge>*)
001a897c b vehicle_axleparams_t_DataDescInit::g_DataMapHolder
001a8988 b vehicle_bodyparams_t_DataDescInit::g_DataMapHolder
00039370 t vphysics_save_constraintragdoll_t::GetBaseMap()
001a3440 d vphysics_save_constraintragdoll_t::m_DataMap
00039030 t vphysics_save_constraintsliding_t::GetBaseMap()
001a34c0 d vphysics_save_constraintsliding_t::m_DataMap
00053630 t vphysics_save_cshadowcontroller_t::GetBaseMap()
001a4bc0 d vphysics_save_cshadowcontroller_t::m_DataMap
0003dc30 t CPhysics_Car_System_Raycast_Wheels::do_raycasts(IVP_Event_Sim*, int, IVP_Ray_Solver_Template*, IVP_Ray_Hit*, float*)
0003dfd0 t CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003def0 t CPhysics_Car_System_Raycast_Wheels::InitCarSystemWheels(IVP_Template_Car_System const*)
0003d900 t CPhysics_Car_System_Raycast_Wheels::update_wheel_positions()
0003dfa0 t CPhysics_Car_System_Raycast_Wheels::GetWheel(int)
0003df40 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003df40 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
0003dc10 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003dbe0 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003dbe0 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000b6bb0 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledge(IVP_Compact_Ledge const*)
000b6c00 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
000b6920 t IVP_Compact_Ledge_Find_Mass_Center::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*)
000b6440 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
000b6440 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
001a8984 b vehicle_wheelparams_t_DataDescInit::g_DataMapHolder
00038c20 t vphysics_save_cphysicsconstraint_t::GetBaseMap()
001a3560 d vphysics_save_cphysicsconstraint_t::m_DataMap
000551e0 t vphysics_save_cvehiclecontroller_t::GetBaseMap()
001a5480 d vphysics_save_cvehiclecontroller_t::m_DataMap
001a8020 b compactsurfaceheader_t_DataDescInit::g_DataMapHolder
000d0770 t IVP_Collision_Filter_Exclusive_Pair::generate_hash_entry(IVP_Real_Object*, IVP_Real_Object*, IVP_CFEP_Objectpair*)
000d02b0 t IVP_Collision_Filter_Exclusive_Pair::environment_will_be_deleted(IVP_Environment*)
000d0840 t IVP_Collision_Filter_Exclusive_Pair::enable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000d07a0 t IVP_Collision_Filter_Exclusive_Pair::disable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
000d0700 t IVP_Collision_Filter_Exclusive_Pair::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000d08a0 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000d08a0 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
000d0380 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000d02d0 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
000d02d0 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
001a8974 b vehicle_engineparams_t_DataDescInit::g_DataMapHolder
00038dc0 t vphysics_save_constraintaxislimit_t::GetBaseMap()
001a3520 d vphysics_save_constraintaxislimit_t::m_DataMap
00038cf0 t vphysics_save_constraintbreakable_t::GetBaseMap()
001a3540 d vphysics_save_constraintbreakable_t::m_DataMap
00053560 t vphysics_save_shadowcontrolparams_t::GetBaseMap()
001a4be0 d vphysics_save_shadowcontrolparams_t::m_DataMap
00120ae0 t IVP_3D_Solver_DISTANCE_OF_TWO_POINTS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
0011c2b0 t IVP_Collision_Delegator_Root_Mindist::delegate_collisions_for_object(IVP_Real_Object*, IVP_Real_Object*)
0011c250 t IVP_Collision_Delegator_Root_Mindist::collision_is_going_to_be_deleted_event(IVP_Collision*)
0011c230 t IVP_Collision_Delegator_Root_Mindist::environment_is_going_to_be_deleted_event(IVP_Environment*)
0011c1e0 t IVP_Collision_Delegator_Root_Mindist::object_is_removed_from_collision_detection(IVP_Real_Object*)
0011c440 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
0011c440 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
0011c420 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
0011c410 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
0011c410 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
000b6460 t IVP_Compact_Ledge_Mass_Center_Solver::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, int, int, int)
000b6420 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
000b6420 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
0010a880 t IVP_Liquid_Surface_Descriptor_Simple::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
0010a8d0 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0010a8d0 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
0010a950 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
0010a940 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
0010a940 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
000392a0 t vphysics_save_constraintballsocket_t::GetBaseMap()
001a3460 d vphysics_save_constraintballsocket_t::m_DataMap
001a8978 b vehicle_steeringparams_t_DataDescInit::g_DataMapHolder
001a898c b vehicle_operatingparams_t_DataDescInit::g_DataMapHolder
00109730 t IVP_BetterStatisticsmanager_Data_Entity::set_position(int, int)
00109560 t IVP_BetterStatisticsmanager_Data_Entity::set_int_value(int)
00109590 t IVP_BetterStatisticsmanager_Data_Entity::set_array_size(int)
00109570 t IVP_BetterStatisticsmanager_Data_Entity::set_double_value(double)
00109620 t IVP_BetterStatisticsmanager_Data_Entity::set_int_array_latest_value(int)
00109670 t IVP_BetterStatisticsmanager_Data_Entity::set_double_array_latest_value(double)
001096c0 t IVP_BetterStatisticsmanager_Data_Entity::enable()
001096d0 t IVP_BetterStatisticsmanager_Data_Entity::disable()
001096f0 t IVP_BetterStatisticsmanager_Data_Entity::set_text(char const*)
001096e0 t IVP_BetterStatisticsmanager_Data_Entity::get_state()
00109750 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
00109750 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
00109890 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
00109890 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
001a8980 b vehicle_suspensionparams_t_DataDescInit::g_DataMapHolder
00038ab0 t vphysics_save_cphysicsconstraintgroup_t::GetBaseMap()
001a3580 d vphysics_save_cphysicsconstraintgroup_t::m_DataMap
001a87c0 b vphysics_save_cphysicsobject_t_DataDescInit::g_DataMapHolder
001a8900 b vphysics_save_cphysicsspring_t_DataDescInit::g_DataMapHolder
000dfd50 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000dfd50 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000dfda0 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::~IVP_Controller_Raycast_Car_Vector_of_Cores_1()
000dfda0 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::~IVP_Controller_Raycast_Car_Vector_of_Cores_1()
001a8118 b vphysics_save_constraintfixed_t_DataDescInit::g_DataMapHolder
001a8114 b vphysics_save_constrainthinge_t_DataDescInit::g_DataMapHolder
001a8108 b vphysics_save_constraintlength_t_DataDescInit::g_DataMapHolder
001a810c b vphysics_save_constraintpulley_t_DataDescInit::g_DataMapHolder
001a8750 b vphysics_save_motioncontroller_t_DataDescInit::g_DataMapHolder
001a8100 b vphysics_save_constraintragdoll_t_DataDescInit::g_DataMapHolder
001a8110 b vphysics_save_constraintsliding_t_DataDescInit::g_DataMapHolder
001a8850 b vphysics_save_cshadowcontroller_t_DataDescInit::g_DataMapHolder
001a8124 b vphysics_save_cphysicsconstraint_t_DataDescInit::g_DataMapHolder
001a8990 b vphysics_save_cvehiclecontroller_t_DataDescInit::g_DataMapHolder
00034150 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00034150 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00034290 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00034290 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
001a811c b vphysics_save_constraintaxislimit_t_DataDescInit::g_DataMapHolder
001a8120 b vphysics_save_constraintbreakable_t_DataDescInit::g_DataMapHolder
001a8854 b vphysics_save_shadowcontrolparams_t_DataDescInit::g_DataMapHolder
001a8104 b vphysics_save_constraintballsocket_t_DataDescInit::g_DataMapHolder
001a8128 b vphysics_save_cphysicsconstraintgroup_t_DataDescInit::g_DataMapHolder
00144dd0 t CWrap::~CWrap() [clone .constprop.2]
00069730 t ConVar::ClampValue(float&)
0006a490 t ConVar::SetDefault(char const*)
00069360 t ConVar::InternalSetValue(char const*)
000695e0 t ConVar::ChangeStringValue(char const*, float)
00069770 t ConVar::InternalSetIntValue(int)
0006a3e0 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float))
00069270 t ConVar::InternalSetFloatValue(float)
00069180 t ConVar::Init()
00069480 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006a420 t ConVar::Revert()
00069120 t ConVar::AddFlags(int)
000691e0 t ConVar::SetValue(float)
00069210 t ConVar::SetValue(int)
000691b0 t ConVar::SetValue(char const*)
0006a0c0 t ConVar::ConVar(char const*, char const*, int)
0006a160 t ConVar::ConVar(char const*, char const*, int, char const*)
0006a200 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006a340 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006a2a0 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0006a0c0 t ConVar::ConVar(char const*, char const*, int)
0006a160 t ConVar::ConVar(char const*, char const*, int, char const*)
0006a200 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0006a340 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0006a2a0 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
000695c0 t ConVar::~ConVar()
00069580 t ConVar::~ConVar()
00069580 t ConVar::~ConVar()
000671b0 t CDefOps<void*>::LessFunc(void* const&, void* const&)
0005a3e0 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
0005a3e0 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
00063d70 t CTSPool<CVisitHash>::~CTSPool()
00063d70 t CTSPool<CVisitHash>::~CTSPool()
00067300 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
00067300 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
001a6e90 d hk_Math::hk_random_seed
00092850 t hk_Math::rand01()
00092840 t hk_Math::srand01(unsigned int)
00069c10 t CCommand::DefaultBreakSet()
00069bf0 t CCommand::Reset()
00069c20 t CCommand::Tokenize(char const*, characterset_t*)
00069ab0 t CCommand::CCommand(int, char const**)
00069a60 t CCommand::CCommand()
00069ab0 t CCommand::CCommand(int, char const**)
00069a60 t CCommand::CCommand()
00125ac0 t CFmtStrN<256, false>::InitQuietTruncation()
00125ad0 t CFmtStrN<256, false>::sprintf(char const*, ...)
0004a7a0 t CSurface::get_damping()
0004a790 t CSurface::get_adhesion()
0004a760 t CSurface::get_elasticity()
0004a740 t CSurface::get_friction_factor()
0004a780 t CSurface::get_second_friction_factor()
00048dd0 t CSurface::get_name()
0004a830 t CSurface::~CSurface()
0004a810 t CSurface::~CSurface()
0004a810 t CSurface::~CSurface()
0007d590 t hk_Array<hk_Constraint*>::~hk_Array()
0007d590 t hk_Array<hk_Constraint*>::~hk_Array()
00131330 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00131330 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00131300 t IVP_Ball::~IVP_Ball()
001312e0 t IVP_Ball::~IVP_Ball()
001312e0 t IVP_Ball::~IVP_Ball()
000e53f0 t IVP_Core::reset_time(IVP_Time)
000e4160 t IVP_Core::set_radius(float, float)
000e43e0 t IVP_Core::damp_object(double, IVP_U_Float_Point const*, double)
000e4710 t IVP_Core::push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000e7750 t IVP_Core::clip_velocity(IVP_U_Float_Point*, IVP_U_Float_Point*)
000e4e60 t IVP_Core::async_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e7640 t IVP_Core::get_environment()
000e7660 t IVP_Core::get_position_PSI()
000e5080 t IVP_Core::get_rot_speed_cs(IVP_U_Float_Point const*)
000e4630 t IVP_Core::global_damp_core(double)
000e5220 t IVP_Core::rot_push_core_cs(IVP_U_Float_Point const*)
000e6860 t IVP_Core::add_friction_info(IVP_Friction_Info_For_Core*)
000e6810 t IVP_Core::get_friction_info(IVP_Friction_System*)
000e4900 t IVP_Core::async_push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
000e40d0 t IVP_Core::get_energy_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e5030 t IVP_Core::get_rot_inertia_cs(IVP_U_Float_Point const*)
00104a50 t IVP_Core::add_core_controller(IVP_Controller*)
000e5d50 t IVP_Core::calc_movement_state(IVP_Time)
000e75d0 t IVP_Core::fast_piling_allowed()
00104840 t IVP_Core::rem_core_controller(IVP_Controller*)
000e6530 t IVP_Core::apply_velocity_limit()
000e75e0 t IVP_Core::calc_next_PSI_matrix(IVP_U_Vector<IVP_Core>*, IVP_Event_Sim*)
000e5460 t IVP_Core::core_add_link_to_obj(IVP_Real_Object*)
000e67a0 t IVP_Core::core_plausible_check()
000e6980 t IVP_Core::delete_friction_info(IVP_Friction_Info_For_Core*)
000e3b70 t IVP_Core::get_surface_speed_ws(IVP_U_Point const*, IVP_U_Float_Point*)
000ef8e0 t IVP_Core::grow_friction_system()
000e5b30 t IVP_Core::set_rotation_inertia(IVP_U_Float_Point const*)
000e6940 t IVP_Core::unlink_friction_info(IVP_Friction_Info_For_Core*)
000edfa0 t IVP_Core::union_find_get_father()
000e4290 t IVP_Core::abort_all_async_pushes()
001030c0 t IVP_Core::freeze_simulation_core()
000e7650 t IVP_Core::get_m_world_f_core_PSI()
00102e30 t IVP_Core::revive_simulation_core()
000e62b0 t IVP_Core::set_matrizes_and_speed(IVP_Core_Merged*, IVP_U_Matrix*)
000e5540 t IVP_Core::stop_physical_movement()
000e5730 t IVP_Core::synchronize_with_rot_z()
000e5990 t IVP_Core::undo_synchronize_rot_z()
000e5280 t IVP_Core::commit_all_async_pushes()
001030e0 t IVP_Core::debug_out_movement_vars()
000e75b0 t IVP_Core::set_fast_piling_allowed(IVP_BOOL)
00103170 t IVP_Core::debug_vec_movement_state()
00103040 t IVP_Core::fire_event_object_frozen()
000e5680 t IVP_Core::init_core_for_simulation()
000e5650 t IVP_Core::reset_freeze_check_values()
000e5170 t IVP_Core::rot_push_core_multiple_cs(IVP_U_Float_Point const*, double)
000e4ba0 t IVP_Core::rot_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e67f0 t IVP_Core::rot_speed_plausible_check(IVP_U_Float_Point const*)
000e5b60 t IVP_Core::transform_PSI_matrizes_core(IVP_U_Matrix const*)
000e42b0 t IVP_Core::center_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e6a70 t IVP_Core::revive_adjacent_to_unmoveable()
000e4fb0 t IVP_Core::test_rot_push_core_multiple_cs(IVP_U_Float_Point const*, double, IVP_U_Float_Point*)
000e50d0 t IVP_Core::async_rot_push_core_multiple_cs(IVP_U_Float_Point const*, double)
000e4ad0 t IVP_Core::async_rot_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e5320 t IVP_Core::calc_next_PSI_matrix_zero_speed(IVP_Event_Sim*)
000e69e0 t IVP_Core::ensure_core_to_be_in_simulation()
000e6850 t IVP_Core::moveable_core_has_friction_info()
000e6bd0 t IVP_Core::values_changed_recalc_redundants()
000e6290 t IVP_Core::create_collision_merged_core_with(IVP_Core*)
000e7620 t IVP_Core::ensure_core_in_simulation_delayed()
000e4350 t IVP_Core::async_center_push_core_multiple_ws(IVP_U_Float_Point const*, double)
000e6a20 t IVP_Core::ensure_all_core_objs_in_simulation()
000e6900 t IVP_Core::unmovable_core_debug_friction_hash()
000e3c90 t IVP_Core::get_diff_surface_speed_of_two_cores(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000e6460 t IVP_Core::update_exact_mindist_events_of_core()
000e6e40 t IVP_Core::ensure_all_core_objs_in_simulation_now()
000e6fc0 t IVP_Core::unlink_obj_from_core_and_maybe_destroy(IVP_Real_Object*)
000e54a0 t IVP_Core::stop_movement_without_collision_recheck()
000e3d60 t IVP_Core::get_diff_surface_speed_of_two_cores_on_test(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000e5c30 t IVP_Core::init(IVP_Real_Object*, bool)
000e64c0 t IVP_Core::set_mass(float)
000e5a30 t IVP_Core::calc_calc()
000e4da0 t IVP_Core::push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
000e7280 t IVP_Core::IVP_Core(IVP_Real_Object*)
000e7080 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000e7280 t IVP_Core::IVP_Core(IVP_Real_Object*)
000e7080 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
000e6e90 t IVP_Core::~IVP_Core()
000e6e90 t IVP_Core::~IVP_Core()
0010ed20 t IVP_Hash::add(char const*, void*)
0010edb0 t IVP_Hash::remove(char const*)
0010ebe0 t IVP_Hash::IVP_Hash(int, int, void*)
0010ebe0 t IVP_Hash::IVP_Hash(int, int, void*)
0010ec20 t IVP_Hash::~IVP_Hash()
0010ec20 t IVP_Hash::~IVP_Hash()
00119550 t P_String::string_cmp(char const*, char const*, IVP_BOOL)
00118e60 t P_String::find_string(char const*, char const*, int)
00118e30 t P_String::uppercase(char*)
000b2c60 t P_Sur_2D::calc_line_representation()
000b30c0 t P_Sur_2D::calc_triangle_representation()
000b2ad0 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000b2ad0 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
000b2b70 t P_Sur_2D::~P_Sur_2D()
000b2b70 t P_Sur_2D::~P_Sur_2D()
00068b70 t CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
00068af0 t CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
0006a4b0 t ConVarRef::Init(char const*, bool)
0006a5b0 t ConVarRef::ConVarRef(IConVar*)
0006a580 t ConVarRef::ConVarRef(char const*)
0006a570 t ConVarRef::ConVarRef(char const*, bool)
0006a5b0 t ConVarRef::ConVarRef(IConVar*)
0006a580 t ConVarRef::ConVarRef(char const*)
0006a570 t ConVarRef::ConVarRef(char const*, bool)
0005c170 t CTraceIVP::BuildLeafmapCache(leafmap_t const*)
0005be70 t CTraceIVP::BuildLeafmapCacheRLE(leafmap_t const*)
0005bc10 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
0005bc10 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
0005c3b0 t CTraceRay::Init(Vector const&, Vector const&)
0005c580 t CTraceRay::Reset(float)
0005c4f0 t CTraceRay::CTraceRay(Ray_t const&)
0005c520 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005c4a0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
0005c4f0 t CTraceRay::CTraceRay(Ray_t const&)
0005c520 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
0005c4a0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
00090c80 t hk_Memory::deallocate(void*, int, hk_MEMORY_CLASS)
00090b40 t hk_Memory::init_memory(char*, int)
00090f20 t hk_Memory::aligned_free(void*)
00090f30 t hk_Memory::get_instance()
00090ce0 t hk_Memory::allocate_real(int)
00090f10 t hk_Memory::aligned_malloc(unsigned int, unsigned int)
00090e60 t hk_Memory::allocate_debug(int, char const*, int)
00090e70 t hk_Memory::deallocate_debug(void*, int, char const*, int)
00090ed0 t hk_Memory::deallocate_stored_size(void*, hk_MEMORY_CLASS)
00090e90 t hk_Memory::allocate_and_store_size(int, hk_MEMORY_CLASS)
00090df0 t hk_Memory::allocate(int, hk_MEMORY_CLASS)
00090c70 t hk_Memory::hk_Memory(char*, int)
00090c40 t hk_Memory::hk_Memory()
00090c70 t hk_Memory::hk_Memory(char*, int)
00090c40 t hk_Memory::hk_Memory()
00090b30 t hk_Memory::~hk_Memory()
00090b30 t hk_Memory::~hk_Memory()
00146b30 t hk_String::memcpy(void*, void const*, int)
00146b20 t hk_String::strcmp(char const*, char const*)
000e3390 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e3370 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e3370 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
000e33e0 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e33c0 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e33c0 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
000e3430 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
000e3410 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
000e3410 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
00119a70 t IVP_VHash::deactivate()
00119d10 t IVP_VHash::remove_elem(void const*, unsigned int)
00119ae0 t IVP_VHash::untouch_all()
00119f20 t IVP_VHash::touch_element(void const*, unsigned int)
00119cc0 t IVP_VHash::garbage_collection(int)
00119e80 t IVP_VHash::check()
00119c10 t IVP_VHash::rehash(int)
00119a30 t IVP_VHash::activate(int)
00119b20 t IVP_VHash::add_elem(void const*, int)
001199f0 t IVP_VHash::IVP_VHash(int)
00119ab0 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
001199f0 t IVP_VHash::IVP_VHash(int)
00119ab0 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
001199d0 t IVP_VHash::~IVP_VHash()
00119990 t IVP_VHash::~IVP_VHash()
00119990 t IVP_VHash::~IVP_VHash()
0005e450 t simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)
0005f2f0 t simplex_t::ClipRayToTriangle(Vector const&, float)
0005c8c0 t simplex_t::SolveVoronoiRegion2(simplexvert_t const&, Vector*)
0005ca40 t simplex_t::SolveVoronoiRegion3(simplexvert_t const&, Vector*)
0005cf90 t simplex_t::SolveVoronoiRegion4(simplexvert_t const&, Vector*)
0005ee90 t simplex_t::ClipRayToTetrahedron(Vector const&)
0005e750 t simplex_t::ClipRayToTetrahedronBase(Vector const&)
         U operator new[](unsigned int)@@GLIBCXX_3.4
000690c0 t ConCommand::IsCommand() const
0005a9c0 t CTraceAABB::SupportMap(Vector const&, Vector*) const
0005a900 t CTraceAABB::GetVertByIndex(int) const
00063b90 t CTraceAABB::Radius() const
00063bb0 t CTraceCone::SupportMap(Vector const&, Vector*) const
00063b40 t CTraceCone::GetVertByIndex(int) const
00063b60 t CTraceCone::Radius() const
00041970 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
00041e20 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Find(CPhysicsListenerCollision::corepair_t const&) const
00074f70 t CUtlString::GetExtension() const
00074ea0 t CUtlString::StripFilename() const
000742f0 t CUtlString::MatchesPattern(CUtlString const&, int) const
00074e40 t CUtlString::StripExtension() const
00074f10 t CUtlString::GetBaseFilename() const
00074d70 t CUtlString::UnqualifiedFilename() const
00073f50 t CUtlString::IsEqual_CaseSensitive(char const*) const
00073fa0 t CUtlString::IsEqual_CaseInsensitive(char const*) const
00073d90 t CUtlString::Get() const
00074920 t CUtlString::Left(int) const
00074960 t CUtlString::Right(int) const
00074830 t CUtlString::Slice(int, int) const
00074d00 t CUtlString::AbsPath(char const*) const
00074db0 t CUtlString::DirName() const
000749a0 t CUtlString::Replace(char, char) const
00074a80 t CUtlString::Replace(char const*, char const*) const
000740b0 t CUtlString::operator==(CUtlString const&) const
00073df0 t CUtlString::operator[](int) const
000750d0 t CUtlString::operator+(int) const
00075030 t CUtlString::operator+(char const*) const
00075080 t CUtlString::operator+(CUtlString const&) const
00075cd0 t CUtlSymbol::String() const
00075db0 t CUtlSymbol::operator==(char const*) const
000929a0 t hk_Matrix3::is_identity_rotation() const
001013a0 t IVP_Object::get_environment() const
00101390 t IVP_Object::get_name() const
00101380 t IVP_Object::get_type() const
00117d60 t IVP_U_Quat::set_matrix(IVP_U_Matrix3*) const
00117c30 t IVP_U_Quat::set_matrix(double (*) [4]) const
001165f0 t IVP_U_Quat::inline_estimate_q_diff_to(IVP_U_Float_Quat const*) const
001152a0 t IVP_U_Quat::acos_quat(IVP_U_Quat const*) const
00120200 t IVP_Mindist::get_synapse(int) const
00120210 t IVP_Mindist::get_sorted_synapse(int) const
00120070 t IVP_Synapse::get_status() const
00120090 t IVP_Synapse::get_synapse_mindist() const
00120080 t IVP_Synapse::get_edge() const
0011ca70 t IVP_Synapse::get_ledge() const
001103c0 t IVP_U_Hesse::proj_on_plane(IVP_U_Point const*, IVP_U_Point*) const
0010e6d0 t IVP_U_Hesse::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*) const
00114d70 t IVP_U_Hesse::get_dist(IVP_U_Float_Point const*) const
0010e850 t IVP_U_Plain::calc_intersect_with(IVP_U_Hesse const*, IVP_U_Straight*) const
00114410 t IVP_U_Point::dot_product(IVP_U_Float_Point const*) const
001143d0 t IVP_U_Point::dot_product(IVP_U_Point const*) const
0010fc60 t IVP_U_Point::is_parallel(IVP_U_Point const*, double) const
0010f310 t IVP_U_Point::real_length() const
0010fd50 t IVP_U_Point::fast_real_length() const
0006acc0 t CEmptyConVar::GetName() const
0006ace0 t CEmptyConVar::IsFlagSet(int) const
00037ab0 t CPhysCollide::GetCollideMap() const
00037a80 t CPhysCollide::GetSphereRadius() const
00037a50 t CPhysCollide::GetCompactSurface() const
00037a60 t CPhysCollide::GetOrthographicAreas() const
00093a40 t hk_Transform::get_4x4_column_major(float*) const
00114810 t IVP_U_Matrix::get_position() const
00116060 t IVP_U_Matrix::inline_mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00115030 t IVP_U_Matrix::inline_vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001162d0 t IVP_U_Matrix::inline_mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00114e10 t IVP_U_Matrix::inline_vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00116520 t IVP_U_Matrix::get_4x4_column_major(float*) const
00112880 t IVP_U_Matrix::mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00113940 t IVP_U_Matrix::vmult4(IVP_U_Point const*, IVP_U_Point*) const
001139e0 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Point*) const
00113880 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00112af0 t IVP_U_Matrix::mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00113670 t IVP_U_Matrix::vimult4(IVP_U_Point const*, IVP_U_Float_Point*) const
00113720 t IVP_U_Matrix::vimult4(IVP_U_Point const*, IVP_U_Point*) const
001137c0 t IVP_U_Matrix::vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001131e0 t IVP_U_Matrix::mi2mult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
00075240 t unsigned int CUtlHashtable<CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::IndirectIndex, empty_t, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::HashProxy, CUtlStableHashtable<CUtlConstStringBase<char>, empty_t, DefaultHashFunctor<CUtlConstStringBase<char> >, DefaultEqualFunctor<CUtlConstStringBase<char> >, unsigned short, char const*>::EqualProxy, char const*>::DoLookup<char const*>(char const*, unsigned int, unsigned int*) const [clone .part.56] [clone .constprop.58]
00042020 t CUtlMultiList<void*, unsigned short>::IsValidList(unsigned short) const
000d0280 t IVP_CFEP_Hash::compare(void*, void*) const
0011c520 t IVP_Collision::get_fvector_index(int) const
000e1050 t IVP_MI_Vector::print() const
000e01e0 t IVP_MI_Vector::length() const
00115ef0 t IVP_U_Matrix3::inline_mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00114ed0 t IVP_U_Matrix3::inline_vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00115d30 t IVP_U_Matrix3::inline_mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00114f80 t IVP_U_Matrix3::inline_vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00110d90 t IVP_U_Matrix3::get_determinante() const
00112d40 t IVP_U_Matrix3::mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00113b30 t IVP_U_Matrix3::vmult3(IVP_U_Point const*, IVP_U_Point*) const
00113a80 t IVP_U_Matrix3::vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00115b90 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Point*) const
00115bc0 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
00115b10 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Point*) const
00115b40 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
00112eb0 t IVP_U_Matrix3::mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00113bc0 t IVP_U_Matrix3::vimult3(IVP_U_Point const*, IVP_U_Point*) const
00113c50 t IVP_U_Matrix3::vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00114760 t IVP_U_Matrix3::get_elem(int, int) const
00113070 t IVP_U_Matrix3::mi2mult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00069080 t ConCommandBase::GetHelpText() const
00069090 t ConCommandBase::IsRegistered() const
00068fa0 t ConCommandBase::GetDLLIdentifier() const
00069040 t ConCommandBase::GetName() const
000699d0 t ConCommandBase::GetNext() const
00068f90 t ConCommandBase::IsCommand() const
00069050 t ConCommandBase::IsFlagSet(int) const
0004c2e0 t CPhysicsObject::GetCollide() const
0004c160 t CPhysicsObject::GetDamping(float*, float*) const
0004c0c0 t CPhysicsObject::GetInertia() const
0004c0a0 t CPhysicsObject::GetInvMass() const
0004bfd0 t CPhysicsObject::IsMoveable() const
000504b0 t CPhysicsObject::GetContents() const
0004c070 t CPhysicsObject::GetGameData() const
0004d1c0 t CPhysicsObject::GetPosition(Vector*, QAngle*) const
0004dd50 t CPhysicsObject::GetVelocity(Vector*, Vector*) const
0004bec0 t CPhysicsObject::GetGameFlags() const
0004bee0 t CPhysicsObject::GetGameIndex() const
0004d5d0 t CPhysicsObject::LocalToWorld(Vector*, Vector const&) const
0004d570 t CPhysicsObject::WorldToLocal(Vector*, Vector const&) const
0004c110 t CPhysicsObject::GetInvInertia() const
0004e640 t CPhysicsObject::IsControlling(IVP_Controller const*) const
0004e0e0 t CPhysicsObject::IsDragEnabled() const
0004ccb0 t CPhysicsObject::GetContactPoint(Vector*, IPhysicsObject**) const
0004de40 t CPhysicsObject::GetSphereRadius() const
0004bfb0 t CPhysicsObject::IsMotionEnabled() const
0004c5d0 t CPhysicsObject::OutputDebugInfo() const
0004bea0 t CPhysicsObject::GetCallbackFlags() const
000504a0 t CPhysicsObject::GetMaterialIndex() const
0004e160 t CPhysicsObject::IsGravityEnabled() const
0004d270 t CPhysicsObject::GetPositionMatrix(matrix3x4_t*) const
0004cbe0 t CPhysicsObject::GetShadowPosition(Vector*, QAngle*) const
0004f310 t CPhysicsObject::GetSurfaceManager() const
0004f330 t CPhysicsObject::GetDragInDirection(IVP_U_Float_Point const&) const
0004cfe0 t CPhysicsObject::GetVelocityAtPoint(Vector const&, Vector*) const
0004c4d0 t CPhysicsObject::IsCollisionEnabled() const
0004e9b0 t CPhysicsObject::IsControlledByGame() const
0004d510 t CPhysicsObject::LocalToWorldVector(Vector*, Vector const&) const
0004d4b0 t CPhysicsObject::WorldToLocalVector(Vector*, Vector const&) const
0004f3d0 t CPhysicsObject::CalculateLinearDrag(Vector const&) const
0004db90 t CPhysicsObject::GetImplicitVelocity(Vector*, Vector*) const
0004c2d0 t CPhysicsObject::GetShadowController() const
0004c3d0 t CPhysicsObject::CalculateAngularDrag(Vector const&) const
0004d2b0 t CPhysicsObject::CalculateForceOffset(Vector const&, Vector const&, Vector*, Vector*) const
0004e9f0 t CPhysicsObject::IsMassCenterAtDefault() const
0004e620 t CPhysicsObject::GetVPhysicsEnvironment() const
0004c4f0 t CPhysicsObject::IsAttachedToConstraint(bool) const
0004e2e0 t CPhysicsObject::CalculateVelocityOffset(Vector const&, Vector const&, Vector*, Vector*) const
0004dcd0 t CPhysicsObject::GetMassCenterLocalSpace() const
0004f410 t CPhysicsObject::GetAngularDragInDirection(IVP_U_Float_Point const&) const
0004c080 t CPhysicsObject::GetMass() const
0004c2f0 t CPhysicsObject::GetName() const
0004c4b0 t CPhysicsObject::IsFluid() const
0004d900 t CPhysicsObject::IsAsleep() const
00050490 t CPhysicsObject::IsHinged() const
0004bef0 t CPhysicsObject::IsStatic() const
0004c300 t CPhysicsObject::GetEnergy() const
0004ecf0 t CPhysicsObject::GetVolume() const
0004c490 t CPhysicsObject::IsTrigger() const
000b1cc0 t IVP_point_hash::element_at(int) const
000b1cb0 t IVP_point_hash::len() const
000b1d10 t IVP_point_hash::print() const
000b1a40 t IVP_point_hash::compare(void*, void*) const
00116ed0 t IVP_U_Min_Hash::is_elem(void*) const
0010e3a0 t IVP_U_Straight::get_quad_dist_to_point(IVP_U_Point*) const
0010e2f0 t IVP_U_Straight::calc_orthogonal_vec_from_point(IVP_U_Point const*, IVP_U_Point*) const
000756b0 t CUtlSymbolTable::FindPoolWithSpace(int) const
00075540 t CUtlSymbolTable::Find(char const*) const
000753c0 t CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
00075700 t CUtlSymbolTable::String(CUtlSymbol) const
000ea600 t IVP_Environment::get_time_manager() const
000ea670 t IVP_Environment::get_debug_manager() const
000ea6c0 t IVP_Environment::get_range_manager() const
000ea750 t IVP_Environment::get_static_object() const
000ea740 t IVP_Environment::get_anomaly_limits() const
000ea7b0 t IVP_Environment::get_gravity_length() const
000ea680 t IVP_Environment::get_memory_manager() const
000ea730 t IVP_Environment::get_anomaly_manager() const
000ea660 t IVP_Environment::get_cluster_manager() const
000ea620 t IVP_Environment::get_mindist_manager() const
000ea650 t IVP_Environment::get_ov_tree_manager() const
000ea6e0 t IVP_Environment::get_collision_filter() const
000ea6d0 t IVP_Environment::get_material_manager() const
000ea720 t IVP_Environment::get_universe_manager() const
000ea630 t IVP_Environment::get_sim_units_manager() const
000ea610 t IVP_Environment::get_controller_manager() const
000ea710 t IVP_Environment::get_active_value_manager() const
000ea640 t IVP_Environment::get_cache_object_manager() const
001014c0 t IVP_Real_Object::to_nonconst() const
001001f0 t IVP_Real_Object::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
00100c60 t IVP_Real_Object::get_geom_radius() const
001014b0 t IVP_Real_Object::get_extra_radius() const
001014e0 t IVP_Real_Object::get_original_core() const
00100440 t IVP_Real_Object::calc_at_quaternion(IVP_Time, IVP_U_Quat*, IVP_U_Point*) const
00101480 t IVP_Real_Object::get_surface_manager() const
00100c80 t IVP_Real_Object::get_geom_center_speed() const
00100410 t IVP_Real_Object::get_m_world_f_object_AT(IVP_U_Matrix*) const
00100cc0 t IVP_Real_Object::get_geom_center_speed_vec(IVP_U_Point*) const
001006a0 t IVP_Real_Object::get_quat_world_f_object_AT(IVP_U_Quat*, IVP_U_Point*) const
00100c20 t IVP_Real_Object::get_geom_center_world_space(IVP_U_Point*) const
001014d0 t IVP_Real_Object::get_core() const
         U CThreadLocalBase::Get() const
0010a4a0 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Point const*, IVP_U_Point*) const
0010a530 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0010a360 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
0010a3f0 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
0010a2b0 t IVP_Cache_Object::transform_position_to_world_coords(IVP_U_Float_Point const*, IVP_U_Point*) const
0010a1f0 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Float_Point*) const
0010a150 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
000d1260 t IVP_Compact_Edge::get_opposite() const
000d1170 t IVP_Compact_Edge::get_triangle() const
000d11e0 t IVP_Compact_Edge::get_edge_index() const
000d0e40 t IVP_Compact_Edge::get_is_virtual() const
000d11a0 t IVP_Compact_Edge::get_start_point(IVP_Compact_Ledge const*) const
000d1180 t IVP_Compact_Edge::get_compact_ledge() const
000d0e20 t IVP_Compact_Edge::get_opposite_index() const
000d0e10 t IVP_Compact_Edge::get_start_point_index() const
000d11c0 t IVP_Compact_Edge::get_next() const
000d1220 t IVP_Compact_Edge::get_prev() const
00120100 t IVP_Mindist_Base::get_length() const
001200f0 t IVP_Mindist_Base::get_mindist_synapse(int) const
0011c160 t IVP_ov_tree_hash::compare(void*, void*) const
0011ca60 t IVP_Synapse_Real::check_consistency_of_ledge(IVP_Compact_Edge const*) const
001201a0 t IVP_Synapse_Real::get_core() const
000d1030 t IVP_Compact_Ledge::is_terminal() const
000d1070 t IVP_Compact_Ledge::get_n_points() const
000d10d0 t IVP_Compact_Ledge::get_client_data() const
000d1060 t IVP_Compact_Ledge::get_n_triangles() const
000d0ff0 t IVP_Compact_Ledge::get_point_array() const
000d1010 t IVP_Compact_Ledge::get_first_triangle() const
000d1050 t IVP_Compact_Ledge::get_ledgetree_node() const
000d1090 t IVP_Compact_Ledge::get_size() const
000efe80 t IVP_Contact_Point::is_same_as(IVP_Mindist const*) const
000b1e50 t IVP_I_Point_VHash::element_at(int) const
000b1e40 t IVP_I_Point_VHash::len() const
000b1ea0 t IVP_I_Point_VHash::print() const
000b1a10 t IVP_I_Point_VHash::compare(void*, void*) const
001107a0 t IVP_U_Float_Hesse::proj_on_plane(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00114dc0 t IVP_U_Float_Hesse::get_dist(IVP_U_Float_Point const*) const
00114ad0 t IVP_U_Float_Point::dot_product(IVP_U_Float_Point const*) const
00114cd0 t IVP_U_Float_Point::quad_length() const
0010f2d0 t IVP_U_Float_Point::real_length() const
0010fd90 t IVP_U_Float_Point::fast_real_length() const
00114d10 t IVP_U_Float_Point::quad_distance_to(IVP_U_Float_Point const*) const
0010fe50 t IVP_U_Float_Point::print(char const*) const
0010ef10 t IVP_U_String_Hash::find(char const*) const
0003acb0 t CPhysicsConstraint::WriteFixed(constraint_fixedparams_t&) const
0003afd0 t CPhysicsConstraint::WriteHinge(constraint_hingeparams_t&) const
0003d590 t CPhysicsConstraint::GetGameData() const
0003b740 t CPhysicsConstraint::WriteLength(constraint_lengthparams_t&) const
0003b4c0 t CPhysicsConstraint::WritePulley(constraint_pulleyparams_t&) const
0003ad80 t CPhysicsConstraint::WriteRagdoll(constraint_ragdollparams_t&) const
0003b240 t CPhysicsConstraint::WriteSliding(constraint_slidingparams_t&) const
0003b8f0 t CPhysicsConstraint::WriteBallsocket(constraint_ballsocketparams_t&) const
0003ba70 t CPhysicsConstraint::WriteToTemplate(vphysics_save_cphysicsconstraint_t&, vphysics_save_constraint_t&) const
00038010 t CPhysicsConstraint::GetAttachedObject() const
0003abc0 t CPhysicsConstraint::GetConstraintGroup() const
00038000 t CPhysicsConstraint::GetReferenceObject() const
0003bba0 t CPhysicsConstraint::GetConstraintParams(constraint_breakableparams_t*) const
00038810 t CPhysicsConstraint::GetConstraintTransform(matrix3x4_t*, matrix3x4_t*) const
0003abe0 t CPhysicsConstraint::ReadBreakableConstraint(constraint_breakableparams_t&) const
000710d0 t CUtlCharConversion::GetDelimiter() const
000710c0 t CUtlCharConversion::GetEscapeChar() const
000710e0 t CUtlCharConversion::GetDelimiterLength() const
00071110 t CUtlCharConversion::GetConversionLength(char) const
000710f0 t CUtlCharConversion::GetConversionString(char) const
00071130 t CUtlCharConversion::MaxConversionLength() const
00109350 t IVP_Anomaly_Limits::get_max_velocity() const
00109360 t IVP_Anomaly_Limits::get_max_angular_velocity_per_psi() const
000b19b0 t IVP_I_FPoint_VHash::element_at(int) const
000b19a0 t IVP_I_FPoint_VHash::len() const
000b1a00 t IVP_I_FPoint_VHash::print() const
000b17c0 t IVP_I_FPoint_VHash::compare(void*, void*) const
000493f0 t CIVPMaterialManager::RemapIVPMaterialIndex(int) const
0003e040 t CPhysicsEnvironment::GetGravity(Vector*) const
0003e330 t CPhysicsEnvironment::GetAirDensity() const
0003e0d0 t CPhysicsEnvironment::GetObjectList(int*) const
0003e180 t CPhysicsEnvironment::IsInSimulation() const
0003e2d0 t CPhysicsEnvironment::GetActiveObjects(IPhysicsObject**) const
0003e150 t CPhysicsEnvironment::GetNextFrameTime() const
0003e120 t CPhysicsEnvironment::GetSimulationTime() const
000408a0 t CPhysicsEnvironment::ShouldQuickDelete() const
0003e2c0 t CPhysicsEnvironment::GetActiveObjectCount() const
0003ea10 t CPhysicsEnvironment::IsCollisionModelUsed(CPhysCollide*) const
0003e0f0 t CPhysicsEnvironment::GetSimulationTimestep() const
0003e0c0 t CPhysicsEnvironment::GetObjectSerializeSize(IPhysicsObject*) const
0003e370 t CPhysicsEnvironment::GetPerformanceSettings(physics_performanceparams_t*) const
0011acf0 t IVP_OV_Tree_Manager::box_contains_box(IVP_OV_Node_Data const*, IVP_OV_Node const*, int) const
0011b250 t IVP_OV_Tree_Manager::find_smallest_box(IVP_OV_Node const*, IVP_OV_Node const*) const
0011b1a0 t IVP_OV_Tree_Manager::box_overlaps_with_box(IVP_OV_Node const*, IVP_OV_Node const*, int) const
0011acd0 t IVP_OV_Tree_Manager::log_base2(double) const
000d7d70 t IVP_Template_Anchor::get_anchor_position_ws() const
00049010 t CPhysicsSurfaceProps::GetPropName(int) const
00049240 t CPhysicsSurfaceProps::GetIVPMaterial(int) const
00049120 t CPhysicsSurfaceProps::GetSurfaceIndex(char const*) const
00048b70 t CPhysicsSurfaceProps::SurfacePropCount() const
000490d0 t CPhysicsSurfaceProps::GetInternalSurface(int) const
00048ba0 t CPhysicsSurfaceProps::GetIVPMaterialIndex(IVP_Material const*) const
00049250 t CPhysicsSurfaceProps::GetReservedFallBack(int) const
00048f30 t CPhysicsSurfaceProps::GetPhysicsParameters(int, surfacephysicsparams_t*) const
00048f80 t CPhysicsSurfaceProps::GetPhysicsProperties(int, float*, float*, float*, float*) const
0004a7c0 t CPhysicsSurfaceProps::RemapIVPMaterialIndex(int) const
00048b80 t CPhysicsSurfaceProps::GetReservedMaterialName(int) const
000490f0 t CPhysicsSurfaceProps::GetReservedSurfaceIndex(char const*) const
000490e0 t CPhysicsSurfaceProps::IsReservedMaterialIndex(int) const
00048d20 t CPhysicsSurfaceProps::GetString(unsigned short) const
000d0f80 t IVP_Compact_Triangle::get_next_tri() const
000d0ee0 t IVP_Compact_Triangle::get_tri_index() const
000d0f40 t IVP_Compact_Triangle::get_first_edge() const
000d0f20 t IVP_Compact_Triangle::get_is_virtual() const
000d0ef0 t IVP_Compact_Triangle::get_pierce_index() const
000d12a0 t IVP_Compact_Triangle::get_compact_ledge() const
000d0f10 t IVP_Compact_Triangle::get_material_index() const
000d0f60 t IVP_Compact_Triangle::get_edge(int) const
000fea40 t IVP_Controller_VHash::compare(void*, void*) const
000e75a0 t IVP_Core_Fast_Static::get_inv_mass() const
000e7580 t IVP_Core_Fast_Static::get_rot_inertia() const
000e7590 t IVP_Core_Fast_Static::get_inv_rot_inertia() const
000e7570 t IVP_Core_Fast_Static::get_mass() const
000efd60 t IVP_Synapse_Friction::is_same_as(IVP_Synapse_Real const*) const
000efd40 t IVP_Synapse_Friction::get_material_index() const
0010be90 t IVP_Active_Value_Hash::compare(void*, void*) const
00131220 t IVP_Controller_Motion::get_max_torque() const
00131250 t IVP_Controller_Motion::get_damp_factor() const
00131240 t IVP_Controller_Motion::get_force_factor() const
00131260 t IVP_Controller_Motion::get_torque_factor() const
00131290 t IVP_Controller_Motion::get_target_orientation() const
00131280 t IVP_Controller_Motion::get_target_position_ws() const
00131270 t IVP_Controller_Motion::get_angular_damp_factor() const
00131230 t IVP_Controller_Motion::get_max_translation_force() const
000d0db0 t IVP_Compact_Poly_Point::get_client_data() const
000e38b0 t IVP_Controller_Phantom::get_object() const
000e3890 t IVP_Controller_Phantom::get_intruding_cores() const
000e3880 t IVP_Controller_Phantom::get_intruding_objects() const
0005a320 t CPhysCollideVirtualMesh::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
00058a90 t CPhysCollideVirtualMesh::GetMassCenter() const
00058cc0 t CPhysCollideVirtualMesh::GetSphereRadius() const
0005a210 t CPhysCollideVirtualMesh::OutputDebugInfo() const
0005a060 t CPhysCollideVirtualMesh::GetVCollideIndex() const
0005a220 t CPhysCollideVirtualMesh::SerializeToBuffer(char*, bool) const
00059010 t CPhysCollideVirtualMesh::GetSphereRadiusIVP() const
0005a1e0 t CPhysCollideVirtualMesh::CreateSurfaceManager(short&) const
0005a080 t CPhysCollideVirtualMesh::GetOrthographicAreas() const
0005a010 t CPhysCollideVirtualMesh::GetSerializationSize() const
00047a50 t CPhysicsFluidController::GetDensity() const
00047a60 t CPhysicsFluidController::GetContents() const
00047960 t CPhysicsFluidController::GetGameData() const
00047b90 t CPhysicsFluidController::GetIVPObject() const
00047970 t CPhysicsFluidController::GetSurfacePlane(Vector*, float*) const
00131400 t IVP_SurfaceManager_Ball::get_mass_center(IVP_U_Float_Point*) const
001313f0 t IVP_SurfaceManager_Ball::get_single_convex() const
001314a0 t IVP_SurfaceManager_Ball::get_rotation_inertia(IVP_U_Float_Point*) const
001314d0 t IVP_SurfaceManager_Ball::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00035e40 t CPhysCollideCompactSurface::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
00037b00 t CPhysCollideCompactSurface::GetCollideMap() const
00034300 t CPhysCollideCompactSurface::GetMassCenter() const
00036380 t CPhysCollideCompactSurface::OutputDebugInfo() const
00037ae0 t CPhysCollideCompactSurface::GetVCollideIndex() const
00036320 t CPhysCollideCompactSurface::ComputeHullInfo_r(CPhysCollideCompactSurface::hullinfo_t*, IVP_Compact_Ledgetree_Node const*) const
00037af0 t CPhysCollideCompactSurface::GetCompactSurface() const
00035cf0 t CPhysCollideCompactSurface::SerializeToBuffer(char*, bool) const
00034a20 t CPhysCollideCompactSurface::CreateSurfaceManager(short&) const
000343a0 t CPhysCollideCompactSurface::GetOrthographicAreas() const
000342e0 t CPhysCollideCompactSurface::GetSerializationSize() const
000d1130 t IVP_Compact_Ledgetree_Node::is_terminal() const
000d1150 t IVP_Compact_Ledgetree_Node::get_compact_hull() const
000d1100 t IVP_Compact_Ledgetree_Node::get_compact_ledge() const
000d1110 t IVP_Compact_Ledgetree_Node::left_son() const
000d1120 t IVP_Compact_Ledgetree_Node::right_son() const
000f3660 t IVP_Great_Matrix_Many_Zero::print_great_matrix(char const*) const
000f3640 t IVP_Great_Matrix_Many_Zero::get_value(int, int) const
0010b370 t IVP_SurfaceManager_Polygon::get_mass_center(IVP_U_Float_Point*) const
0010b3b0 t IVP_SurfaceManager_Polygon::get_single_convex() const
0010b880 t IVP_SurfaceManager_Polygon::get_compact_surface() const
0010b390 t IVP_SurfaceManager_Polygon::get_rotation_inertia(IVP_U_Float_Point*) const
0010b460 t IVP_SurfaceManager_Polygon::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00101430 t IVP_Real_Object_Fast_Static::get_shift_core_f_object() const
000967e0 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_debug_output(IVP_Compact_Ledgetree_Node const*) const
00132de0 t IVP_Object_Callback_Table_Hash::compare(void*, void*) const
00058b50 t IVP_SurfaceManager_VirtualMesh::get_mass_center(IVP_U_Float_Point*) const
000598b0 t IVP_SurfaceManager_VirtualMesh::get_single_convex() const
00058bc0 t IVP_SurfaceManager_VirtualMesh::get_rotation_inertia(IVP_U_Float_Point*) const
00058b10 t IVP_SurfaceManager_VirtualMesh::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
0011c590 t IVP_Collision_Callback_Table_Hash::compare(void*, void*) const
0006a480 t ConVar::GetDefault() const
00069110 t ConVar::GetHelpText() const
00069140 t ConVar::IsRegistered() const
0006a460 t ConVar::GetMax(float&) const
0006a440 t ConVar::GetMin(float&) const
00069160 t ConVar::GetName() const
00069170 t ConVar::IsCommand() const
000690f0 t ConVar::IsFlagSet(int) const
00069ec0 t CCommand::FindArgInt(char const*, int) const
00069e30 t CCommand::FindArg(char const*) const
00131630 t IVP_Ball::get_radius() const
000e4180 t IVP_Core::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
000e3fc0 t IVP_Core::calc_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000e4c80 t IVP_Core::test_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*, IVP_U_Float_Point*) const
000e46d0 t IVP_Core::get_surface_speed(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000e4f00 t IVP_Core::calc_correct_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
000e76d0 t IVP_Core::inline_calc_at_position(IVP_Time, IVP_U_Point*) const
000e3e40 t IVP_Core::calc_virt_mass_worst_case(IVP_U_Float_Point const*) const
000e39f0 t IVP_Core::get_surface_speed_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*) const
000e7670 t IVP_Core::inline_calc_at_quaternion(IVP_Time, IVP_U_Quat*) const
0010ec90 t IVP_Hash::find(char const*) const
0006a5d0 t ConVarRef::IsValid() const
0005b020 t CTraceIVP::SupportMap(Vector const&, Vector*) const
0005aa50 t CTraceIVP::GetVertByIndex(int) const
00063b80 t CTraceIVP::Radius() const
0005c5e0 t CTraceRay::SupportMap(Vector const&, Vector*) const
000e3310 t IVP_U_Set<IVP_Real_Object>::compare(void*, void*) const
000e3350 t IVP_U_Set<IVP_Mindist_Base>::compare(void*, void*) const
000e3330 t IVP_U_Set<IVP_Core>::compare(void*, void*) const
00119fb0 t IVP_VHash::print() const
00119e90 t IVP_VHash::find_elem(void const*, unsigned int) const
         U CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
         U operator new(unsigned int)@@GLIBCXX_3.4
         U std::terminate()@@GLIBCXX_3.4
000d4f30 t non-virtual thunk to IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
000d6310 t non-virtual thunk to IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
001265a0 t non-virtual thunk to IVP_Mindist_Recursive::get_spawned_mindist_count()
00126570 t non-virtual thunk to IVP_Mindist_Recursive::change_spawned_mindist_count(int)
00125dc0 t non-virtual thunk to IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
00125d90 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
00125ca0 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
000d65d0 t non-virtual thunk to IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
000d8980 t non-virtual thunk to IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
000d64a0 t non-virtual thunk to IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
00126890 t non-virtual thunk to IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
00126aa0 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
00126960 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
0006ac70 t non-virtual thunk to CEmptyConVar::SetValue(float)
0006ac90 t non-virtual thunk to CEmptyConVar::SetValue(int)
0006ac50 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
000691d0 t non-virtual thunk to ConVar::SetValue(float)
00069200 t non-virtual thunk to ConVar::SetValue(int)
000691a0 t non-virtual thunk to ConVar::SetValue(char const*)
0006acb0 t non-virtual thunk to CEmptyConVar::GetName() const
0006acd0 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
00069150 t non-virtual thunk to ConVar::GetName() const
000690e0 t non-virtual thunk to ConVar::IsFlagSet(int) const
0010c9b0 t non-virtual thunk to IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
0010ca20 t non-virtual thunk to IVP_U_Active_Terminal_Int::update_int()
0010c760 t non-virtual thunk to IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
0010c710 t non-virtual thunk to IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
0010c660 t non-virtual thunk to IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
0010c8a0 t non-virtual thunk to IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
0010c610 t non-virtual thunk to IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
0010c7b0 t non-virtual thunk to IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
0010c830 t non-virtual thunk to IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
0010c5a0 t non-virtual thunk to IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
0010c6b0 t non-virtual thunk to IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
0010c920 t non-virtual thunk to IVP_U_Active_Terminal_Double::update_float()
0010b900 t non-virtual thunk to IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
000549e0 t non-virtual thunk to CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
000549a0 t non-virtual thunk to CPhysicsSpring::event_object_created(IVP_Event_Object*)
00054440 t non-virtual thunk to CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
000549c0 t non-virtual thunk to CPhysicsSpring::event_object_revived(IVP_Event_Object*)
000544d0 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
00054460 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
000468d0 t non-virtual thunk to CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, double)
000415d0 t non-virtual thunk to CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
00041010 t non-virtual thunk to CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
00041080 t non-virtual thunk to CCollisionSolver::max_collision_checks_exceeded(int)
00046670 t non-virtual thunk to CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
00041030 t non-virtual thunk to CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
00042980 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00042900 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
00034180 t non-virtual thunk to CPhysics_Airboat::get_controller_name()
00030cf0 t non-virtual thunk to CPhysics_Airboat::get_controller_priority()
00033980 t non-virtual thunk to CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00031030 t non-virtual thunk to CPhysics_Airboat::get_associated_controlled_cores()
00031050 t non-virtual thunk to CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
000312d0 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
00031210 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
00050bf0 t non-virtual thunk to CPlayerController::IsInContact()
00053c00 t non-virtual thunk to CPlayerController::GetLastImpulse(Vector*)
000507e0 t non-virtual thunk to CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
00053cc0 t non-virtual thunk to CPlayerController::GetPushMassLimit()
00053c80 t non-virtual thunk to CPlayerController::SetPushMassLimit(float)
00053ce0 t non-virtual thunk to CPlayerController::GetPushSpeedLimit()
00053fc0 t non-virtual thunk to CPlayerController::GetShadowPosition(Vector*, QAngle*)
00050c70 t non-virtual thunk to CPlayerController::GetShadowVelocity(Vector*)
00053ca0 t non-virtual thunk to CPlayerController::SetPushSpeedLimit(float)
000507c0 t non-virtual thunk to CPlayerController::Jump()
00050ee0 t non-virtual thunk to CPlayerController::StepUp(float)
00051500 t non-virtual thunk to CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
00050d60 t non-virtual thunk to CPlayerController::MaxSpeed(Vector const&)
00053c60 t non-virtual thunk to CPlayerController::GetObject()
000518e0 t non-virtual thunk to CPlayerController::SetObject(IPhysicsObject*)
00053bd0 t non-virtual thunk to CPlayerController::WasFrozen()
000519d0 t non-virtual thunk to CPlayerController::~CPlayerController()
00051950 t non-virtual thunk to CPlayerController::~CPlayerController()
000508b0 t non-virtual thunk to CShadowController::GetMaxSpeed(float*, float*)
00053dd0 t non-virtual thunk to CShadowController::AllowsRotation()
00053e00 t non-virtual thunk to CShadowController::GetLastImpulse(Vector*)
00053da0 t non-virtual thunk to CShadowController::AllowsTranslation()
000508f0 t non-virtual thunk to CShadowController::GetTargetPosition(Vector*, QAngle*)
00053ed0 t non-virtual thunk to CShadowController::UseShadowMaterial(bool)
00050830 t non-virtual thunk to CShadowController::GetTeleportDistance()
00050800 t non-virtual thunk to CShadowController::SetTeleportDistance(float)
00053f50 t non-virtual thunk to CShadowController::ObjectMaterialChanged(int)
00053ea0 t non-virtual thunk to CShadowController::IsPhysicallyControlled()
00053e60 t non-virtual thunk to CShadowController::SetPhysicallyControlled(bool)
00050b60 t non-virtual thunk to CShadowController::StepUp(float)
00050990 t non-virtual thunk to CShadowController::Update(Vector const&, QAngle const&, float)
00050870 t non-virtual thunk to CShadowController::MaxSpeed(float, float)
000534d0 t non-virtual thunk to CShadowController::~CShadowController()
00053470 t non-virtual thunk to CShadowController::~CShadowController()
0003d5e0 t non-virtual thunk to CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
0003d5a0 t non-virtual thunk to CPhysicsConstraint::event_object_created(IVP_Event_Object*)
0003bf20 t non-virtual thunk to CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
0003d5c0 t non-virtual thunk to CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
0003bef0 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
0003be60 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
00058a50 t non-virtual thunk to CVehicleController::event_object_frozen(IVP_Event_Object*)
00058a10 t non-virtual thunk to CVehicleController::event_object_created(IVP_Event_Object*)
00056970 t non-virtual thunk to CVehicleController::event_object_deleted(IVP_Event_Object*)
00058a30 t non-virtual thunk to CVehicleController::event_object_revived(IVP_Event_Object*)
00056a00 t non-virtual thunk to CVehicleController::~CVehicleController()
000569a0 t non-virtual thunk to CVehicleController::~CVehicleController()
0004bb60 t non-virtual thunk to CPhysicsMotionController::GetObjects(IPhysicsObject**)
0004ad70 t non-virtual thunk to CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
0004bbd0 t non-virtual thunk to CPhysicsMotionController::WakeObjects()
0004b8c0 t non-virtual thunk to CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
0004bc70 t non-virtual thunk to CPhysicsMotionController::ClearObjects()
0004bb40 t non-virtual thunk to CPhysicsMotionController::CountObjects()
0004b680 t non-virtual thunk to CPhysicsMotionController::DetachObject(IPhysicsObject*)
0004adc0 t non-virtual thunk to CPhysicsMotionController::SetEventHandler(IMotionEvent*)
0004b780 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
0004b6b0 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
000de040 t non-virtual thunk to IVP_Controller_Raycast_Car::get_controller_priority()
000df520 t non-virtual thunk to IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000dfcd0 t non-virtual thunk to IVP_Controller_Raycast_Car::get_associated_controlled_cores()
000dfca0 t non-virtual thunk to IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
000df7b0 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000df700 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0003dfc0 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::get_controller_name()
0003dc00 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
0003dbd0 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
00053d60 t non-virtual thunk to CPlayerController::event_object_frozen(IVP_Event_Object*)
00053d20 t non-virtual thunk to CPlayerController::event_object_created(IVP_Event_Object*)
00053d00 t non-virtual thunk to CPlayerController::event_object_deleted(IVP_Event_Object*)
00053d40 t non-virtual thunk to CPlayerController::event_object_revived(IVP_Event_Object*)
000519c0 t non-virtual thunk to CPlayerController::~CPlayerController()
00051940 t non-virtual thunk to CPlayerController::~CPlayerController()
00040e60 t non-virtual thunk to CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
00040de0 t non-virtual thunk to CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
00040dc0 t non-virtual thunk to CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040da0 t non-virtual thunk to CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
00040ee0 t non-virtual thunk to CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
0014e418 r typeinfo for ConCommand
0014dbb8 r typeinfo for CTraceAABB
0014dc98 r typeinfo for CTraceCone
00162aec r typeinfo for hk_Console
0014ead4 r typeinfo for hk_Link_EF
0014a0bc r typeinfo for IAppSystem
0015f8d8 r typeinfo for IVP_Object
001625b4 r typeinfo for CPolyhedron
0014dcd4 r typeinfo for IConvexInfo
0015f8f0 r typeinfo for IVP_Cluster
00161650 r typeinfo for IVP_Mindist
0015fe30 r typeinfo for IVP_Polygon
0016154c r typeinfo for IVP_Synapse
0014da24 r typeinfo for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0014b854 r typeinfo for CDeleteProxy<IPhysicsConstraint>
0014e624 r typeinfo for CEmptyConVar
0014a8f0 r typeinfo for CPhysCollide
0014dc84 r typeinfo for CTraceSolver
0014a904 r typeinfo for IPhysCollide
0014dc7c r typeinfo for ITraceObject
0015e4c0 r typeinfo for IVP_Actuator
001601e4 r typeinfo for IVP_Material
00157d60 r typeinfo for IVP_Triangle
0014cf0c r typeinfo for aligned_tmp_t
0014b7e0 r typeinfo for CSleepObjects
0014b874 r typeinfo for CVoidPairHash
0014ebe8 r typeinfo for hk_Constraint
00162024 r typeinfo for IVP_3D_Solver
0015e16c r typeinfo for IVP_CFEP_Hash
001613a4 r typeinfo for IVP_Collision
0014a07c r typeinfo for CBaseAppSystem<IPhysics>
0014dc8c r typeinfo for CDefConvexInfo
0014e400 r typeinfo for ConCommandBase
0014c674 r typeinfo for CPhysicsObject
0014cfc0 r typeinfo for CPhysicsSpring
0014df58 r typeinfo for CVPhysicsParse
0014c934 r typeinfo for IPhysicsObject
0014d0c8 r typeinfo for IPhysicsSpring
0015ec84 r typeinfo for IVP_Car_System
001623e0 r typeinfo for IVP_Constraint
0015fb34 r typeinfo for IVP_Controller
00161600 r typeinfo for IVP_OO_Watcher
001612d0 r typeinfo for IVP_OV_Element
00157520 r typeinfo for IVP_point_hash
0015e2b4 r typeinfo for IVP_Ray_Solver
001615c8 r typeinfo for IVP_Synapse_OO
0015fec8 r typeinfo for IVP_Time_Event
0014a59c r typeinfo for CCollisionQuery
0014b7f8 r typeinfo for CDragController
0014b868 r typeinfo for CObjectPairHash
0014a024 r typeinfo for CTier0AppSystem<IPhysics>
00149fcc r typeinfo for CTier1AppSystem<IPhysics, 0>
0014a8fc r typeinfo for ICollisionQuery
0014c9b4 r typeinfo for ISaveRestoreOps
0015f960 r typeinfo for IVP_Real_Object
0014b7c0 r typeinfo for CCollisionSolver
0014e6cc r typeinfo for CDataManagerBase
0014e63c r typeinfo for CDefaultAccessor
0014e794 r typeinfo for CDllDemandLoader
0014a160 r typeinfo for CPhysics_Airboat
0014b84c r typeinfo for IDeleteQueueItem
0016156c r typeinfo for IVP_Mindist_Base
00161314 r typeinfo for IVP_ov_tree_hash
00161634 r typeinfo for IVP_Synapse_Real
0015ff08 r typeinfo for IVP_Time_Event_D
0015ff28 r typeinfo for IVP_Time_Event_N
00160980 r typeinfo for IVP_U_Active_Add
00160808 r typeinfo for IVP_U_Active_Int
001609c0 r typeinfo for IVP_U_Active_Sub
0015f250 r typeinfo for IVP_U_Set_Active<IVP_Real_Object>
0015f22c r typeinfo for IVP_U_Set_Active<IVP_Mindist_Base>
0015f268 r typeinfo for IVP_U_Set_Active<IVP_Core>
0014ce98 r typeinfo for CAlignedNewDelete<16, aligned_tmp_t>
0014babc r typeinfo for CBuoyancyAttacher
0014bcbc r typeinfo for CFrictionSnapshot
0014c970 r typeinfo for CMaterialIndexOps
0014a550 r typeinfo for CPhysicsCollision
00149f44 r typeinfo for CPhysicsInterface
0014cba0 r typeinfo for CPlayerController
0014cbe0 r typeinfo for CShadowController
0014a8e8 r typeinfo for IPhysicsCollision
0015ff48 r typeinfo for IVP_Event_Manager
0015754c r typeinfo for IVP_I_Point_VHash
0015f77c r typeinfo for IVP_Listener_Hull
00161cc4 r typeinfo for IVP_Range_Manager
00160a40 r typeinfo for IVP_U_Active_Mult
001608c0 r typeinfo for IVP_U_Active_Sine
0014c990 r typeinfo for CDefSaveRestoreOps
0014adc0 r typeinfo for CPhysicsConstraint
0014e980 r typeinfo for CUtlCharConversion
0014d740 r typeinfo for CVehicleController
0014af28 r typeinfo for IPhysicsConstraint
0015e700 r typeinfo for IVP_Actuator_Extra
0015e534 r typeinfo for IVP_Actuator_Force
00160040 r typeinfo for IVP_Anomaly_Limits
0014dff4 r typeinfo for IVPhysicsKeyParser
001574e0 r typeinfo for IVP_I_FPoint_VHash
0015e300 r typeinfo for IVP_Ray_Solver_Min
00160468 r typeinfo for IVP_SurfaceManager
0015fee8 r typeinfo for IVP_Time_Event_PSI
001607e8 r typeinfo for IVP_U_Active_Float
00160a80 r typeinfo for IVP_U_Active_Limit
00160940 r typeinfo for IVP_U_Active_Pulse
001607c8 r typeinfo for IVP_U_Active_Value
0014bf48 r typeinfo for CIVPMaterialManager
0014b280 r typeinfo for CPhysicsEnvironment
0014e9dc r typeinfo for CUtlNoEscConversion
0014ec7c r typeinfo for hk_Fixed_Constraint
0014ecec r typeinfo for hk_Hinge_Constraint
0014b748 r typeinfo for IPhysicsEnvironment
001619b0 r typeinfo for IVP_3D_Solver_PK_KK
0015eb20 r typeinfo for IVP_Actuator_Spring
0015e618 r typeinfo for IVP_Actuator_Torque
00160060 r typeinfo for IVP_Anomaly_Manager
0015ff94 r typeinfo for IVP_Event_Manager_D
0015fc18 r typeinfo for IVP_Friction_System
0015faf4 r typeinfo for IVP_Listener_Object
0015eb00 r typeinfo for IVP_Listener_Spring
00160204 r typeinfo for IVP_Material_Simple
00160900 r typeinfo for IVP_U_Active_Square
00160b00 r typeinfo for IVP_U_Active_Switch
0014a264 r typeinfo for CAirboatFrictionData
0014e574 r typeinfo for ConVar_ServerBounded
00149fe0 r typeinfo for CPhysicsCollisionSet
0014b790 r typeinfo for CPhysicsFrictionData
0014bf6c r typeinfo for CPhysicsSurfaceProps
0014edcc r typeinfo for hk_Pulley_Constraint
00149fd8 r typeinfo for IPhysicsCollisionSet
0014c0f0 r typeinfo for IPhysicsSurfaceProps
001619f8 r typeinfo for IVP_3D_Solver_PF_NPF
0016198c r typeinfo for IVP_3D_Solver_S_VALS
0015e598 r typeinfo for IVP_Actuator_Rot_Mot
0015e0f0 r typeinfo for IVP_Collision_Filter
00161d50 r typeinfo for IVP_Constraint_Local
00161e1c r typeinfo for IVP_Controller_Golem
0015f984 r typeinfo for IVP_Controller_VHash
0015f118 r typeinfo for IVP_Listener_Phantom
00160228 r typeinfo for IVP_Material_Manager
0015e298 r typeinfo for IVP_Ray_Hit_Listener
0015f940 r typeinfo for IVP_Real_Object_Fast
0015fc3c r typeinfo for IVP_Universe_Manager
0014b79c r typeinfo for CPhysicsCollisionData
0014e9a0 r typeinfo for CUtlCStringConversion
0014b934 r typeinfo for CVPhysicsDebugOverlay
0014ee30 r typeinfo for hk_Ragdoll_Constraint
0014a288 r typeinfo for IPhysicsCollisionData
00161a1c r typeinfo for IVP_3D_Solver_KK_COLL
001618ec r typeinfo for IVP_3D_Solver_PF_COLL
001619d4 r typeinfo for IVP_3D_Solver_PK_COLL
00160b40 r typeinfo for IVP_Active_Value_Hash
0015e6c0 r typeinfo for IVP_Anchor_Check_Dist
0014bbc4 r typeinfo for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00161df8 r typeinfo for IVP_Controller_Motion
0014b9fc r typeinfo for IVPhysicsDebugOverlay
00161680 r typeinfo for IVP_Mindist_Recursive
00162564 r typeinfo for CPolyhedron_AllocByNew
001625bc r typeinfo for CPolyhedron_TempMemory
0014b9dc r typeinfo for IPhysicsCollisionEvent
0014b860 r typeinfo for IPhysicsObjectPairHash
0015e4e8 r typeinfo for IVP_Actuator_Two_Point
001600dc r typeinfo for IVP_BetterDebugmanager
0015f13c r typeinfo for IVP_Controller_Phantom
0015fb18 r typeinfo for IVP_Listener_Collision
0016038c r typeinfo for IVP_PerformanceCounter
0014b8a4 r typeinfo for CEmptyCollisionListener
0014d94c r typeinfo for CPhysCollideVirtualMesh
0014ad94 r typeinfo for CPhysicsConstraintGroup
0014ba9c r typeinfo for CPhysicsFluidController
0014dbe0 r typeinfo for CTraceSolverSweptObject
0014e02c r typeinfo for CVPhysPtrSaveRestoreOps
0014eb88 r typeinfo for hk_Breakable_Constraint
0014ed5c r typeinfo for hk_Prismatic_Constraint
0014ec3c r typeinfo for hk_Rigid_Body_Binary_EF
0014e66c r typeinfo for IConCommandBaseAccessor
0014af20 r typeinfo for IPhysicsConstraintGroup
0014bbbc r typeinfo for IPhysicsFluidController
0015e510 r typeinfo for IVP_Actuator_Four_Point
0015e73c r typeinfo for IVP_Actuator_Stabilizer
0015eb9c r typeinfo for IVP_Actuator_Suspension
00161360 r typeinfo for IVP_Collision_Delegator
0015eef8 r typeinfo for IVP_Controller_Buoyancy
0015f4bc r typeinfo for IVP_Friction_Sys_Energy
0015f4e4 r typeinfo for IVP_Friction_Sys_Static
0015f3bc r typeinfo for IVP_Listener_Constraint
0014bc54 r typeinfo for IVP_Listener_Set_Active<IVP_Core>
0015e2dc r typeinfo for IVP_Ray_Solver_Min_Hash
00161f78 r typeinfo for IVP_SurfaceManager_Ball
00160ac0 r typeinfo for IVP_U_Active_Test_Range
0014bbdc r typeinfo for CLiquidSurfaceDescriptor
0014c1e0 r typeinfo for CPhysicsMotionController
0014bd84 r typeinfo for IPhysicsFrictionSnapshot
0014c2b0 r typeinfo for IPhysicsMotionController
0014ce88 r typeinfo for IPhysicsPlayerController
0014ce90 r typeinfo for IPhysicsShadowController
0015fb84 r typeinfo for IVP_Controller_Dependent
00160780 r typeinfo for IVP_U_Active_Int_Delayed
0014b2c0 r typeinfo for CPhysicsListenerCollision
0014eb18 r typeinfo for hk_Ball_Socket_Constraint
0014d850 r typeinfo for IPhysicsVehicleController
00161a44 r typeinfo for IVP_3D_Solver_KK_PARALLEL
0015e560 r typeinfo for IVP_Actuator_Force_Active
0015ee40 r typeinfo for IVP_Constraint_Solver_Car
0015e150 r typeinfo for IVP_Meta_Collision_Filter
00160a00 r typeinfo for IVP_U_Active_Add_Multiple
0016075c r typeinfo for IVP_U_Active_Int_Listener
00160880 r typeinfo for IVP_U_Active_Terminal_Int
0014a57c r typeinfo for CPhysCollideCompactSurface
0014b7ec r typeinfo for CPhysicsListenerConstraint
0014ea38 r typeinfo for hk_Local_Constraint_System
0014eea4 r typeinfo for hk_Stiff_Spring_Constraint
0015eb60 r typeinfo for IVP_Actuator_Spring_Active
0015e660 r typeinfo for IVP_Actuator_Torque_Active
0015ecac r typeinfo for IVP_Car_System_Real_Wheels
0015fb5c r typeinfo for IVP_Controller_Independent
0015f000 r typeinfo for IVP_Controller_Raycast_Car
0015ff70 r typeinfo for IVP_Event_Manager_Standard
001604d8 r typeinfo for IVP_SurfaceManager_Polygon
001607a8 r typeinfo for IVP_U_Active_Float_Delayed
00160710 r typeinfo for IVP_U_Active_Value_Manager
0015e5e0 r typeinfo for IVP_Actuator_Rot_Mot_Active
0015f91c r typeinfo for IVP_Real_Object_Fast_Static
00160738 r typeinfo for IVP_U_Active_Float_Listener
0014c0e4 r typeinfo for IPhysicsSurfacePropsInternal
00161388 r typeinfo for IVP_Collision_Delegator_Root
00160840 r typeinfo for IVP_U_Active_Terminal_Double
00160140 r typeinfo for IVP_Liquid_Surface_Descriptor
0015e6a0 r typeinfo for IVP_Listener_Check_Dist_Event
001603c0 r typeinfo for IVP_PerformanceCounter_Simple
0015ef44 r typeinfo for IVP_Attacher_To_Cores_Buoyancy
00161fe4 r typeinfo for IVP_Object_Callback_Table_Hash
0014d924 r typeinfo for IVP_SurfaceManager_VirtualMesh
00161924 r typeinfo for IVP_3D_Solver_VEC_PARALLEL_AREA
0015fbe0 r typeinfo for IVP_Standard_Gravity_Controller
0014e064 r typeinfo for CVPhysPtrUtlVectorSaveRestoreOps
00161464 r typeinfo for IVP_Collision_Callback_Table_Hash
0014afc8 r typeinfo for CPhysics_Car_System_Raycast_Wheels
0015e128 r typeinfo for IVP_Collision_Filter_Exclusive_Pair
00161968 r typeinfo for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
001615a8 r typeinfo for IVP_Collision_Delegator_Root_Mindist
00160188 r typeinfo for IVP_Liquid_Surface_Descriptor_Simple
0014e440 r typeinfo for ConVar
0014e5f4 r typeinfo for IConVar
00161c04 r typeinfo for CFmtStrN<256, false>
0014bf24 r typeinfo for CSurface
0014a0a4 r typeinfo for IPhysics
00161f18 r typeinfo for IVP_Ball
0014db9c r typeinfo for CTraceIVP
0015f244 r typeinfo for IVP_U_Set<IVP_Real_Object>
0015f238 r typeinfo for IVP_U_Set<IVP_Mindist_Base>
0015f25c r typeinfo for IVP_U_Set<IVP_Core>
001611f4 r typeinfo for IVP_VHash
0014e408 r typeinfo name for ConCommand
0014dba8 r typeinfo name for CTraceAABB
0014dcdc r typeinfo name for CTraceCone
00162adc r typeinfo name for hk_Console
0014eae0 r typeinfo name for hk_Link_EF
0014a0c4 r typeinfo name for IAppSystem
0015f8cb r typeinfo name for IVP_Object
001625c8 r typeinfo name for CPolyhedron
0014dce9 r typeinfo name for IConvexInfo
0015f8e0 r typeinfo name for IVP_Cluster
00161640 r typeinfo name for IVP_Mindist
0015fe20 r typeinfo name for IVP_Polygon
0016153b r typeinfo name for IVP_Synapse
0014da40 r typeinfo name for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0014b960 r typeinfo name for CDeleteProxy<IPhysicsConstraint>
0014e648 r typeinfo name for CEmptyConVar
0014a920 r typeinfo name for CPhysCollide
0014dcb3 r typeinfo name for CTraceSolver
0014a941 r typeinfo name for IPhysCollide
0014dca4 r typeinfo name for ITraceObject
0015e4b0 r typeinfo name for IVP_Actuator
001601d4 r typeinfo name for IVP_Material
00157d4f r typeinfo name for IVP_Triangle
0014cf14 r typeinfo name for aligned_tmp_t
0014b8f2 r typeinfo name for CSleepObjects
0014b9b0 r typeinfo name for CVoidPairHash
0014ebd8 r typeinfo name for hk_Constraint
00162014 r typeinfo name for IVP_3D_Solver
0015e15c r typeinfo name for IVP_CFEP_Hash
00161394 r typeinfo name for IVP_Collision
0014a088 r typeinfo name for CBaseAppSystem<IPhysics>
0014dcc2 r typeinfo name for CDefConvexInfo
0014e3ed r typeinfo name for ConCommandBase
0014c663 r typeinfo name for CPhysicsObject
0014cfa3 r typeinfo name for CPhysicsSpring
0014df46 r typeinfo name for CVPhysicsParse
0014c95c r typeinfo name for IPhysicsObject
0014d0d0 r typeinfo name for IPhysicsSpring
0015ec70 r typeinfo name for IVP_Car_System
001623cc r typeinfo name for IVP_Constraint
0015fb20 r typeinfo name for IVP_Controller
001615d4 r typeinfo name for IVP_OO_Watcher
001612bd r typeinfo name for IVP_OV_Element
0015750c r typeinfo name for IVP_point_hash
0015e2a0 r typeinfo name for IVP_Ray_Solver
001615b4 r typeinfo name for IVP_Synapse_OO
0015feb5 r typeinfo name for IVP_Time_Event
0014a588 r typeinfo name for CCollisionQuery
0014b91f r typeinfo name for CDragController
0014b99e r typeinfo name for CObjectPairHash
0014a05e r typeinfo name for CTier0AppSystem<IPhysics>
0014a000 r typeinfo name for CTier1AppSystem<IPhysics, 0>
0014a92f r typeinfo name for ICollisionQuery
0014c9bc r typeinfo name for ISaveRestoreOps
0015f94c r typeinfo name for IVP_Real_Object
0014b8df r typeinfo name for CCollisionSolver
0014e6b6 r typeinfo name for CDataManagerBase
0014e657 r typeinfo name for CDefaultAccessor
0014e77f r typeinfo name for CDllDemandLoader
0014a137 r typeinfo name for CPhysics_Airboat
0014b940 r typeinfo name for IDeleteQueueItem
00161558 r typeinfo name for IVP_Mindist_Base
00161300 r typeinfo name for IVP_ov_tree_hash
00161620 r typeinfo name for IVP_Synapse_Real
0015fef4 r typeinfo name for IVP_Time_Event_D
0015ff14 r typeinfo name for IVP_Time_Event_N
00160960 r typeinfo name for IVP_U_Active_Add
001607f4 r typeinfo name for IVP_U_Active_Int
001609a0 r typeinfo name for IVP_U_Active_Sub
0015f300 r typeinfo name for IVP_U_Set_Active<IVP_Real_Object>
0015f280 r typeinfo name for IVP_U_Set_Active<IVP_Mindist_Base>
0015f33c r typeinfo name for IVP_U_Set_Active<IVP_Core>
0014cee0 r typeinfo name for CAlignedNewDelete<16, aligned_tmp_t>
0014baa8 r typeinfo name for CBuoyancyAttacher
0014bca5 r typeinfo name for CFrictionSnapshot
0014c97c r typeinfo name for CMaterialIndexOps
0014a53c r typeinfo name for CPhysicsCollision
00149f30 r typeinfo name for CPhysicsInterface
0014cb7e r typeinfo name for CPlayerController
0014cbc8 r typeinfo name for CShadowController
0014a90c r typeinfo name for IPhysicsCollision
0015ff34 r typeinfo name for IVP_Event_Manager
00157538 r typeinfo name for IVP_I_Point_VHash
0015f768 r typeinfo name for IVP_Listener_Hull
00161cb0 r typeinfo name for IVP_Range_Manager
00160a20 r typeinfo name for IVP_U_Active_Mult
001608a0 r typeinfo name for IVP_U_Active_Sine
0014c99c r typeinfo name for CDefSaveRestoreOps
0014ada0 r typeinfo name for CPhysicsConstraint
0014e969 r typeinfo name for CUtlCharConversion
0014d713 r typeinfo name for CVehicleController
0014af4a r typeinfo name for IPhysicsConstraint
0015e6cc r typeinfo name for IVP_Actuator_Extra
0015e51c r typeinfo name for IVP_Actuator_Force
00160028 r typeinfo name for IVP_Anomaly_Limits
0014dffc r typeinfo name for IVPhysicsKeyParser
001574c8 r typeinfo name for IVP_I_FPoint_VHash
0015e2e8 r typeinfo name for IVP_Ray_Solver_Min
00160450 r typeinfo name for IVP_SurfaceManager
0015fed0 r typeinfo name for IVP_Time_Event_PSI
001607d0 r typeinfo name for IVP_U_Active_Float
00160a60 r typeinfo name for IVP_U_Active_Limit
00160920 r typeinfo name for IVP_U_Active_Pulse
001607b0 r typeinfo name for IVP_U_Active_Value
0014bf30 r typeinfo name for CIVPMaterialManager
0014b26a r typeinfo name for CPhysicsEnvironment
0014e9e8 r typeinfo name for CUtlNoEscConversion
0014ec64 r typeinfo name for hk_Fixed_Constraint
0014ecd6 r typeinfo name for hk_Hinge_Constraint
0014b88c r typeinfo name for IPhysicsEnvironment
00161998 r typeinfo name for IVP_3D_Solver_PK_KK
0015eb08 r typeinfo name for IVP_Actuator_Spring
0015e600 r typeinfo name for IVP_Actuator_Torque
00160048 r typeinfo name for IVP_Anomaly_Manager
0015ff7c r typeinfo name for IVP_Event_Manager_D
0015fc00 r typeinfo name for IVP_Friction_System
0015fadb r typeinfo name for IVP_Listener_Object
0015eae8 r typeinfo name for IVP_Listener_Spring
001601ec r typeinfo name for IVP_Material_Simple
001608e0 r typeinfo name for IVP_U_Active_Square
00160ae0 r typeinfo name for IVP_U_Active_Switch
0014a270 r typeinfo name for CAirboatFrictionData
0014e60c r typeinfo name for ConVar_ServerBounded
0014a047 r typeinfo name for CPhysicsCollisionSet
0014b8b0 r typeinfo name for CPhysicsFrictionData
0014bf54 r typeinfo name for CPhysicsSurfaceProps
0014edb3 r typeinfo name for hk_Pulley_Constraint
0014a030 r typeinfo name for IPhysicsCollisionSet
0014c117 r typeinfo name for IPhysicsSurfaceProps
001619e0 r typeinfo name for IVP_3D_Solver_PF_NPF
00161974 r typeinfo name for IVP_3D_Solver_S_VALS
0015e580 r typeinfo name for IVP_Actuator_Rot_Mot
0015e0d8 r typeinfo name for IVP_Collision_Filter
00161d38 r typeinfo name for IVP_Constraint_Local
00161e04 r typeinfo name for IVP_Controller_Golem
0015f96c r typeinfo name for IVP_Controller_VHash
0015f0ff r typeinfo name for IVP_Listener_Phantom
00160210 r typeinfo name for IVP_Material_Manager
0015e280 r typeinfo name for IVP_Ray_Hit_Listener
0015f928 r typeinfo name for IVP_Real_Object_Fast
0015fc24 r typeinfo name for IVP_Universe_Manager
0014b8c7 r typeinfo name for CPhysicsCollisionData
0014e988 r typeinfo name for CUtlCStringConversion
0014b9e4 r typeinfo name for CVPhysicsDebugOverlay
0014ee18 r typeinfo name for hk_Ragdoll_Constraint
0014a290 r typeinfo name for IPhysicsCollisionData
00161a04 r typeinfo name for IVP_3D_Solver_KK_COLL
001618d1 r typeinfo name for IVP_3D_Solver_PF_COLL
001619bc r typeinfo name for IVP_3D_Solver_PK_COLL
00160b28 r typeinfo name for IVP_Active_Value_Hash
0015e6a8 r typeinfo name for IVP_Anchor_Check_Dist
0014bc20 r typeinfo name for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00161de0 r typeinfo name for IVP_Controller_Motion
0014ba1d r typeinfo name for IVPhysicsDebugOverlay
0016165c r typeinfo name for IVP_Mindist_Recursive
00162548 r typeinfo name for CPolyhedron_AllocByNew
001625d6 r typeinfo name for CPolyhedron_TempMemory
0014ba04 r typeinfo name for IPhysicsCollisionEvent
0014b985 r typeinfo name for IPhysicsObjectPairHash
0015e4cc r typeinfo name for IVP_Actuator_Two_Point
001600c0 r typeinfo name for IVP_BetterDebugmanager
0015f120 r typeinfo name for IVP_Controller_Phantom
0015fafc r typeinfo name for IVP_Listener_Collision
00160372 r typeinfo name for IVP_PerformanceCounter
0014b9c0 r typeinfo name for CEmptyCollisionListener
0014d930 r typeinfo name for CPhysCollideVirtualMesh
0014ad78 r typeinfo name for CPhysicsConstraintGroup
0014ba80 r typeinfo name for CPhysicsFluidController
0014dbc4 r typeinfo name for CTraceSolverSweptObject
0014e011 r typeinfo name for CVPhysPtrSaveRestoreOps
0014eb6c r typeinfo name for hk_Breakable_Constraint
0014ed42 r typeinfo name for hk_Prismatic_Constraint
0014ec44 r typeinfo name for hk_Rigid_Body_Binary_EF
0014e674 r typeinfo name for IConCommandBaseAccessor
0014af30 r typeinfo name for IPhysicsConstraintGroup
0014bbe8 r typeinfo name for IPhysicsFluidController
0015e4f4 r typeinfo name for IVP_Actuator_Four_Point
0015e720 r typeinfo name for IVP_Actuator_Stabilizer
0015eb80 r typeinfo name for IVP_Actuator_Suspension
00161344 r typeinfo name for IVP_Collision_Delegator
0015eedd r typeinfo name for IVP_Controller_Buoyancy
0015f4a1 r typeinfo name for IVP_Friction_Sys_Energy
0015f4c8 r typeinfo name for IVP_Friction_Sys_Static
0015f3a2 r typeinfo name for IVP_Listener_Constraint
0014bc80 r typeinfo name for IVP_Listener_Set_Active<IVP_Core>
0015e2c0 r typeinfo name for IVP_Ray_Solver_Min_Hash
00161f84 r typeinfo name for IVP_SurfaceManager_Ball
00160aa0 r typeinfo name for IVP_U_Active_Test_Range
0014bc5c r typeinfo name for CLiquidSurfaceDescriptor
0014c1c5 r typeinfo name for CPhysicsMotionController
0014bd8c r typeinfo name for IPhysicsFrictionSnapshot
0014c2b8 r typeinfo name for IPhysicsMotionController
0014cea4 r typeinfo name for IPhysicsPlayerController
0014cebf r typeinfo name for IPhysicsShadowController
0015fb68 r typeinfo name for IVP_Controller_Dependent
00160764 r typeinfo name for IVP_U_Active_Int_Delayed
0014b28c r typeinfo name for CPhysicsListenerCollision
0014eaf9 r typeinfo name for hk_Ball_Socket_Constraint
0014d858 r typeinfo name for IPhysicsVehicleController
00161a28 r typeinfo name for IVP_3D_Solver_KK_PARALLEL
0015e540 r typeinfo name for IVP_Actuator_Force_Active
0015ee23 r typeinfo name for IVP_Constraint_Solver_Car
0015e134 r typeinfo name for IVP_Meta_Collision_Filter
001609e0 r typeinfo name for IVP_U_Active_Add_Multiple
00160740 r typeinfo name for IVP_U_Active_Int_Listener
00160860 r typeinfo name for IVP_U_Active_Terminal_Int
0014a55c r typeinfo name for CPhysCollideCompactSurface
0014b902 r typeinfo name for CPhysicsListenerConstraint
0014ea1b r typeinfo name for hk_Local_Constraint_System
0014ee85 r typeinfo name for hk_Stiff_Spring_Constraint
0015eb2c r typeinfo name for IVP_Actuator_Spring_Active
0015e624 r typeinfo name for IVP_Actuator_Torque_Active
0015ec8c r typeinfo name for IVP_Car_System_Real_Wheels
0015fb3c r typeinfo name for IVP_Controller_Independent
0015efdc r typeinfo name for IVP_Controller_Raycast_Car
0015ff50 r typeinfo name for IVP_Event_Manager_Standard
001604b8 r typeinfo name for IVP_SurfaceManager_Polygon
00160788 r typeinfo name for IVP_U_Active_Float_Delayed
001606f3 r typeinfo name for IVP_U_Active_Value_Manager
0015e5a4 r typeinfo name for IVP_Actuator_Rot_Mot_Active
0015f8fc r typeinfo name for IVP_Real_Object_Fast_Static
00160718 r typeinfo name for IVP_U_Active_Float_Listener
0014c0f8 r typeinfo name for IPhysicsSurfacePropsInternal
00161368 r typeinfo name for IVP_Collision_Delegator_Root
00160814 r typeinfo name for IVP_U_Active_Terminal_Double
00160120 r typeinfo name for IVP_Liquid_Surface_Descriptor
0015e680 r typeinfo name for IVP_Listener_Check_Dist_Event
001603a0 r typeinfo name for IVP_PerformanceCounter_Simple
0015ef20 r typeinfo name for IVP_Attacher_To_Cores_Buoyancy
00161fc0 r typeinfo name for IVP_Object_Callback_Table_Hash
0014d900 r typeinfo name for IVP_SurfaceManager_VirtualMesh
00161900 r typeinfo name for IVP_3D_Solver_VEC_PARALLEL_AREA
0015fba0 r typeinfo name for IVP_Standard_Gravity_Controller
0014e040 r typeinfo name for CVPhysPtrUtlVectorSaveRestoreOps
00161440 r typeinfo name for IVP_Collision_Callback_Table_Hash
0014afa0 r typeinfo name for CPhysics_Car_System_Raycast_Wheels
0015e100 r typeinfo name for IVP_Collision_Filter_Exclusive_Pair
00161940 r typeinfo name for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00161580 r typeinfo name for IVP_Collision_Delegator_Root_Mindist
00160160 r typeinfo name for IVP_Liquid_Surface_Descriptor_Simple
0014e424 r typeinfo name for ConVar
0014e630 r typeinfo name for IConVar
00161c0c r typeinfo name for CFmtStrN<256, false>
0014bf18 r typeinfo name for CSurface
0014a0b0 r typeinfo name for IPhysics
00161f0d r typeinfo name for IVP_Ball
0014db8f r typeinfo name for CTraceIVP
0015f2c7 r typeinfo name for IVP_U_Set<IVP_Real_Object>
0015f2a8 r typeinfo name for IVP_U_Set<IVP_Mindist_Base>
0015f326 r typeinfo name for IVP_U_Set<IVP_Core>
001611e7 r typeinfo name for IVP_VHash
0014e4a0 r vtable for ConCommand
0014dc08 r vtable for CTraceAABB
0014dc68 r vtable for CTraceCone
00162af8 r vtable for hk_Console
0014eaa0 r vtable for hk_Link_EF
0015f9a0 r vtable for IVP_Object
00162588 r vtable for CPolyhedron
0015f9b0 r vtable for IVP_Cluster
001617c0 r vtable for IVP_Mindist
0015fe40 r vtable for IVP_Polygon
001616a0 r vtable for IVP_Synapse
0014da00 r vtable for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
0014b6a8 r vtable for CDeleteProxy<IPhysicsConstraint>
0014e580 r vtable for CEmptyConVar
0014a8a0 r vtable for CPhysCollide
0014dc48 r vtable for CTraceSolver
0014a860 r vtable for IPhysCollide
0014dc30 r vtable for ITraceObject
0015e760 r vtable for IVP_Actuator
00160240 r vtable for IVP_Material
00157d68 r vtable for IVP_Triangle
0014b620 r vtable for CSleepObjects
0014b730 r vtable for CVoidPairHash
0014ec00 r vtable for hk_Constraint
00162030 r vtable for IVP_3D_Solver
0015e1a0 r vtable for IVP_CFEP_Hash
00161420 r vtable for IVP_Collision
0014dc58 r vtable for CDefConvexInfo
0014e460 r vtable for ConCommandBase
0014c680 r vtable for CPhysicsObject
0014cfe0 r vtable for CPhysicsSpring
0014df80 r vtable for CVPhysicsParse
0014c7e0 r vtable for IPhysicsObject
0014d0a0 r vtable for IPhysicsSpring
0015ecc0 r vtable for IVP_Car_System
00162400 r vtable for IVP_Constraint
0015fcc0 r vtable for IVP_Controller
00161740 r vtable for IVP_OO_Watcher
001612e0 r vtable for IVP_OV_Element
00157568 r vtable for IVP_point_hash
0015e328 r vtable for IVP_Ray_Solver
00161720 r vtable for IVP_Synapse_OO
0015ffa0 r vtable for IVP_Time_Event
0014a700 r vtable for CCollisionQuery
0014b660 r vtable for CDragController
0014b700 r vtable for CObjectPairHash
0014a820 r vtable for ICollisionQuery
0014e130 r vtable for ISaveRestoreOps
0015f9e0 r vtable for IVP_Real_Object
0014b5c0 r vtable for CCollisionSolver
0014e6e0 r vtable for CDataManagerBase
0014e600 r vtable for CDefaultAccessor
0014e7a0 r vtable for CDllDemandLoader
0014a180 r vtable for CPhysics_Airboat
0014b690 r vtable for IDeleteQueueItem
001616c0 r vtable for IVP_Mindist_Base
00161330 r vtable for IVP_ov_tree_hash
00161780 r vtable for IVP_Synapse_Real
0015ffc0 r vtable for IVP_Time_Event_D
0015ffd0 r vtable for IVP_Time_Event_N
00160d80 r vtable for IVP_U_Active_Add
00160c10 r vtable for IVP_U_Active_Int
00160dc0 r vtable for IVP_U_Active_Sub
0015f1e8 r vtable for IVP_U_Set_Active<IVP_Real_Object>
0015f1a0 r vtable for IVP_U_Set_Active<IVP_Mindist_Base>
0015f218 r vtable for IVP_U_Set_Active<IVP_Core>
0014bb20 r vtable for CBuoyancyAttacher
0014bce0 r vtable for CFrictionSnapshot
0014c940 r vtable for CMaterialIndexOps
0014a620 r vtable for CPhysicsCollision
00149f60 r vtable for CPhysicsInterface
0014cc20 r vtable for CPlayerController
0014cd20 r vtable for CShadowController
0014a740 r vtable for IPhysicsCollision
0015ffe0 r vtable for IVP_Event_Manager
00157580 r vtable for IVP_I_Point_VHash
0015f788 r vtable for IVP_Listener_Hull
00161cd0 r vtable for IVP_Range_Manager
00160e40 r vtable for IVP_U_Active_Mult
00160cc0 r vtable for IVP_U_Active_Sine
0014e150 r vtable for CDefSaveRestoreOps
0014ae20 r vtable for CPhysicsConstraint
0014e9c0 r vtable for CUtlCharConversion
0014d760 r vtable for CVehicleController
0014aee0 r vtable for IPhysicsConstraint
0015e9e0 r vtable for IVP_Actuator_Extra
0015e820 r vtable for IVP_Actuator_Force
00160068 r vtable for IVP_Anomaly_Limits
0014dfc0 r vtable for IVPhysicsKeyParser
001574f8 r vtable for IVP_I_FPoint_VHash
0015e358 r vtable for IVP_Ray_Solver_Min
00160480 r vtable for IVP_SurfaceManager
0015ffb0 r vtable for IVP_Time_Event_PSI
00160bf8 r vtable for IVP_U_Active_Float
00160e80 r vtable for IVP_U_Active_Limit
00160d40 r vtable for IVP_U_Active_Pulse
00160be8 r vtable for IVP_U_Active_Value
0014c020 r vtable for CIVPMaterialManager
0014b340 r vtable for CPhysicsEnvironment
0014e9d0 r vtable for CUtlNoEscConversion
0014eca0 r vtable for hk_Fixed_Constraint
0014ed00 r vtable for hk_Hinge_Constraint
0014b4a0 r vtable for IPhysicsEnvironment
00161a90 r vtable for IVP_3D_Solver_PK_KK
0015ebc0 r vtable for IVP_Actuator_Spring
0015e920 r vtable for IVP_Actuator_Torque
00160080 r vtable for IVP_Anomaly_Manager
00160010 r vtable for IVP_Event_Manager_D
0015fdc0 r vtable for IVP_Friction_System
0015fc60 r vtable for IVP_Listener_Object
0015eba8 r vtable for IVP_Listener_Spring
00160280 r vtable for IVP_Material_Simple
00160d00 r vtable for IVP_U_Active_Square
00160f00 r vtable for IVP_U_Active_Switch
0014a250 r vtable for CAirboatFrictionData
00149fb8 r vtable for CPhysicsCollisionSet
0014b468 r vtable for CPhysicsFrictionData
0014bfc0 r vtable for CPhysicsSurfaceProps
0014ede0 r vtable for hk_Pulley_Constraint
00149fa0 r vtable for IPhysicsCollisionSet
0014c060 r vtable for IPhysicsSurfaceProps
00161ab0 r vtable for IVP_3D_Solver_PF_NPF
00161a80 r vtable for IVP_3D_Solver_S_VALS
0015e8a0 r vtable for IVP_Actuator_Rot_Mot
0015e188 r vtable for IVP_Collision_Filter
00161d60 r vtable for IVP_Constraint_Local
00161e80 r vtable for IVP_Controller_Golem
0015f9f8 r vtable for IVP_Controller_VHash
0015f148 r vtable for IVP_Listener_Phantom
001602c0 r vtable for IVP_Material_Manager
0015e310 r vtable for IVP_Ray_Hit_Listener
0015f9d0 r vtable for IVP_Real_Object_Fast
0015fdf0 r vtable for IVP_Universe_Manager
0014b480 r vtable for CPhysicsCollisionData
0014e9b0 r vtable for CUtlCStringConversion
0014b820 r vtable for CVPhysicsDebugOverlay
0014ee40 r vtable for hk_Ragdoll_Constraint
00161ac0 r vtable for IVP_3D_Solver_KK_COLL
00161a50 r vtable for IVP_3D_Solver_PF_COLL
00161aa0 r vtable for IVP_3D_Solver_PK_COLL
00160f38 r vtable for IVP_Active_Value_Hash
0015e9c0 r vtable for IVP_Anchor_Check_Dist
0014bb88 r vtable for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00161e40 r vtable for IVP_Controller_Motion
00161800 r vtable for IVP_Mindist_Recursive
00162570 r vtable for CPolyhedron_AllocByNew
001625a0 r vtable for CPolyhedron_TempMemory
0014b6c0 r vtable for IPhysicsObjectPairHash
0015e7a0 r vtable for IVP_Actuator_Two_Point
001600e8 r vtable for IVP_BetterDebugmanager
0015f180 r vtable for IVP_Controller_Phantom
0015fc80 r vtable for IVP_Listener_Collision
001603e0 r vtable for IVP_PerformanceCounter
0014b760 r vtable for CEmptyCollisionListener
0014d960 r vtable for CPhysCollideVirtualMesh
0014ade0 r vtable for CPhysicsConstraintGroup
0014bae0 r vtable for CPhysicsFluidController
0014dc20 r vtable for CTraceSolverSweptObject
0014e070 r vtable for CVPhysPtrSaveRestoreOps
0014eba0 r vtable for hk_Breakable_Constraint
0014ed80 r vtable for hk_Prismatic_Constraint
0014ec30 r vtable for hk_Rigid_Body_Binary_EF
0014aea0 r vtable for IPhysicsConstraintGroup
0014bb60 r vtable for IPhysicsFluidController
0015e7e0 r vtable for IVP_Actuator_Four_Point
0015ea20 r vtable for IVP_Actuator_Stabilizer
0015ec40 r vtable for IVP_Actuator_Suspension
001613b0 r vtable for IVP_Collision_Delegator
0015ef60 r vtable for IVP_Controller_Buoyancy
0015f500 r vtable for IVP_Friction_Sys_Energy
0015f540 r vtable for IVP_Friction_Sys_Static
0015f3c8 r vtable for IVP_Listener_Constraint
0015efc8 r vtable for IVP_Listener_Set_Active<IVP_Core>
0015e340 r vtable for IVP_Ray_Solver_Min_Hash
00161f40 r vtable for IVP_SurfaceManager_Ball
00160ec0 r vtable for IVP_U_Active_Test_Range
0014bba8 r vtable for CLiquidSurfaceDescriptor
0014c200 r vtable for CPhysicsMotionController
0014bd40 r vtable for IPhysicsFrictionSnapshot
0014c280 r vtable for IPhysicsMotionController
0014cde0 r vtable for IPhysicsPlayerController
0014ce40 r vtable for IPhysicsShadowController
0015fd40 r vtable for IVP_Controller_Dependent
00160bc8 r vtable for IVP_U_Active_Int_Delayed
0014b2e0 r vtable for CPhysicsListenerCollision
0014eb40 r vtable for hk_Ball_Socket_Constraint
0014d800 r vtable for IPhysicsVehicleController
00161ad0 r vtable for IVP_3D_Solver_KK_PARALLEL
0015e860 r vtable for IVP_Actuator_Force_Active
0015ee60 r vtable for IVP_Constraint_Solver_Car
0015e1d0 r vtable for IVP_Meta_Collision_Filter
00160e00 r vtable for IVP_U_Active_Add_Multiple
00160bb8 r vtable for IVP_U_Active_Int_Listener
00160c80 r vtable for IVP_U_Active_Terminal_Int
0014a5c0 r vtable for CPhysCollideCompactSurface
0014b640 r vtable for CPhysicsListenerConstraint
0014ea60 r vtable for hk_Local_Constraint_System
0014eec0 r vtable for hk_Stiff_Spring_Constraint
0015ec00 r vtable for IVP_Actuator_Spring_Active
0015e960 r vtable for IVP_Actuator_Torque_Active
0015ed60 r vtable for IVP_Car_System_Real_Wheels
0015fd00 r vtable for IVP_Controller_Independent
0015f020 r vtable for IVP_Controller_Raycast_Car
0015fff8 r vtable for IVP_Event_Manager_Standard
00160500 r vtable for IVP_SurfaceManager_Polygon
00160bd8 r vtable for IVP_U_Active_Float_Delayed
00160b60 r vtable for IVP_U_Active_Value_Manager
0015e8e0 r vtable for IVP_Actuator_Rot_Mot_Active
0015f9c0 r vtable for IVP_Real_Object_Fast_Static
00160ba8 r vtable for IVP_U_Active_Float_Listener
0014c0a0 r vtable for IPhysicsSurfacePropsInternal
001613e0 r vtable for IVP_Collision_Delegator_Root
00160c40 r vtable for IVP_U_Active_Terminal_Double
00160198 r vtable for IVP_Liquid_Surface_Descriptor
0015e9a0 r vtable for IVP_Listener_Check_Dist_Event
00160420 r vtable for IVP_PerformanceCounter_Simple
0015efa0 r vtable for IVP_Attacher_To_Cores_Buoyancy
00162000 r vtable for IVP_Object_Callback_Table_Hash
0014d9c0 r vtable for IVP_SurfaceManager_VirtualMesh
00161a60 r vtable for IVP_3D_Solver_VEC_PARALLEL_AREA
0015fd80 r vtable for IVP_Standard_Gravity_Controller
0014e090 r vtable for CVPhysPtrUtlVectorSaveRestoreOps
00161480 r vtable for IVP_Collision_Callback_Table_Hash
0014afe0 r vtable for CPhysics_Car_System_Raycast_Wheels
0015e1b8 r vtable for IVP_Collision_Filter_Exclusive_Pair
00161a70 r vtable for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
001616e0 r vtable for IVP_Collision_Delegator_Root_Mindist
001601b0 r vtable for IVP_Liquid_Surface_Descriptor_Simple
0014e4e0 r vtable for ConVar
0014e558 r vtable for IConVar
00161bf8 r vtable for CFmtStrN<256, false>
0014bf80 r vtable for CSurface
00161f28 r vtable for IVP_Ball
0014dbf0 r vtable for CTraceIVP
0015f1d0 r vtable for IVP_U_Set<IVP_Real_Object>
0015f1b8 r vtable for IVP_U_Set<IVP_Mindist_Base>
0015f200 r vtable for IVP_U_Set<IVP_Core>
00161200 r vtable for IVP_VHash
         U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
001a8b48 b datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
001a6c40 d datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::dataDesc
001a8078 b datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
001a3280 d datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::dataDesc
001a8ab8 b datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
001a6180 d datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::dataDesc
001a8a18 b datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
001a5ba0 d datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::dataDesc
001a8a48 b datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
001a5da0 d datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
001a80a8 b datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
001a3360 d datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::dataDesc
001a8b18 b datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
001a67e0 d datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::dataDesc
001a8ae8 b datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
001a6380 d datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::dataDesc
001a89d8 b datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
001a5900 d datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
001a8a88 b datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
001a6020 d datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::dataDesc
001a87d8 b datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
001a44e0 d datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::dataDesc
001a8918 b datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
001a5100 d datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::dataDesc
001a81f8 b datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
001a3a60 d datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::dataDesc
001a8228 b datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
001a3b20 d datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::dataDesc
001a82b8 b datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
001a3fa0 d datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::dataDesc
001a8288 b datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
001a3e00 d datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::dataDesc
001a8768 b datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
001a4400 d datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::dataDesc
001a8318 b datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
001a4180 d datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::dataDesc
001a8258 b datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
001a3c40 d datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::dataDesc
001a8898 b datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
001a4e00 d datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
001a8168 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
001a36c0 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::dataDesc
001a89a8 b datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
001a54a0 d datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::dataDesc
001a81c8 b datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
001a3940 d datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::dataDesc
001a8198 b datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
001a37e0 d datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::dataDesc
001a8868 b datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
001a4c00 d datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::dataDesc
001a82e8 b datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
001a40c0 d datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::dataDesc
001a8138 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
001a35a0 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::dataDesc
001a6ec0 d qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)::firstcall
001a9040 b V_pretifymem(float, int, bool)::output
001a9020 b V_pretifymem(float, int, bool)::current
001a9160 b V_pretifynum(long long)::output
001a9140 b V_pretifynum(long long)::current
001af240 b p_read_first_token(_IO_FILE*)::buffer
001aff30 b Bias(float, float)::lastExponent
001b7d70 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
001b7d50 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszPathMatchEnabled
001a7e60 b GetTmpObjectMatrix(IVP_Real_Object*)::coreShiftMatrix
001a7c00 b InitializeCharacterSets()::s_CharacterSetInitialized
001aa638 b CUtlString::GetEmptyString()::s_emptyString
001aa664 b CUtlSymbol::Initialize()::symbolsInitialized
001afa40 b IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)::count
001a8cc4 b CTraceSolver::SweepSingleConvex()::tm_fmt
001a8cd0 b CTraceSolver::SweepSingleConvex()::tm_fmt
001a8cdc b CTraceSolver::SweepSingleConvex()::tm_fmt
00161170 r IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001a7700 d IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
001a7714 d IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)::pm
001a7728 d IVP_U_Min_Hash::add(void*, double)::sort_counter
001a8fe0 b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
0014ea04 r CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
0014e0c0 r CPhysicsEnvironment::Save(physsaveparams_t const&)::saveFuncs
0014e100 r CPhysicsEnvironment::Restore(physrestoreparams_t const&)::restoreFuncs
001a83d8 b CPhysicsEnvironment::Simulate(float)::autoMutex__
001af210 b IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
001a6e94 d IVV_Cluster_Min_Hash::add(void*, double)::sort_counter
001a8cb0 b CTraceSolverSweptObject::DoSweep()::tm_fmt
001af1f0 b IVP_BetterStatisticsmanager::set_simulation_time(double)::time_of_last_update
001afae0 b CFmtStrN<256, false>::sprintf(char const*, ...)::scAsserted
001a6df8 d ConVarRef::Init(char const*, bool)::bFirst
001aa6c0 b hk_Memory::get_instance()::s_memory_instance
001a8ce8 b simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)::tm_fmt
001a6e82 d CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a43c0 d CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a6de0 d CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
001a8c98 b CTraceIVP::SupportMap(Vector const&, Vector*) const::tm_fmt
001a8ca4 b CTraceIVP::SupportMap(Vector const&, Vector*) const::tm_fmt
001a8d6c b CTraceIVP::SupportMapCached(Vector const&, Vector*) const::tm_fmt
